#!/bin/bash

# Requires cmake>=*, gcc>=8, boost>=1.6

GMSH_VERSION=4_8_4
PYBIND11_VERSION=2.7.1
PETSC_VERSION=3.15.2
SLEPC_VERSION=3.15.1
ADIOS2_VERSION=2.7.1
PYVISTA_VERSION=0.31.3
NUMPY_VERSION=1.20.3
KAHIP_VERSION=3.11
XTENSOR_VERSION=0.23.10
XTENSOR_BLAS_VERSION=0.19.1
XTL_VERSION=0.7.2

########################################

PETSC_SLEPC_OPTFLAGS="-O2"
# PETSc and SLEPc number of make processes (--with-make-np)
PETSC_SLEPC_MAKE_NP=2
# Turn on PETSc and SLEPc debugging. "yes" or "no".
PETSC_SLEPC_DEBUGGING="no"
# Ubuntu MPI variant. "mpich" or "openmpi".
MPI="mpich"

# The following ARGS are used in the DOLFINx layer.
# They are safe defaults.
# CMake build type for DOLFINx C++ build. See CMake documentation.
export DOLFINX_CMAKE_BUILD_TYPE="RelWithDebInfo"
# Extra CMake C++ compiler flags for DOLFINx C++ build.
export DOLFINX_CMAKE_CXX_FLAGS


# Environment variables
export OPENBLAS_NUM_THREADS=1 
export OPENBLAS_VERBOSE=0

# Install directories 

export BUILD_DIR=$(pwd)
export PETSC_DIR=$HOME/petsc 
export SLEPC_DIR=$HOME/slepc
export DOLFIN_REAL_DIR=$HOME/dolfinx-real
export DOLFIN_COMPLEX_DIR=$HOME/dolfinx-complex


PYTHONPATH=/usr/local/lib:$PYTHONPATH
# Set paths Real by default. - use below to configure env
export PKG_CONFIG_PATH=$DOLFIN_REAL_DIR/lib/pkgconfig:$PKG_CONFIG_PATH 
export PETSC_ARCH=linux-gnu-real-32 
export PYTHONPATH=$DOLFIN_REAL_DIR/lib/python3.8/dist-packages:$PYTHONPATH 
export LD_LIBRARY_PATH=$DOLFIN_REAL_DIR/lib:$LD_LIBRARY_PATH

# Install Python packages (via pip)
# - First set of packages are required to build and run DOLFINx Python.
# - Second set of packages are recommended and/or required to build
#   documentation or run tests.
# LLVM_CONFIG required on aarch64, should be removed long-term.
LLVM_CONFIG=/usr/bin/llvm-config-9 pip3 install mpi4py numba 
pip3 install cffi cppimport flake8 pybind11==${PYBIND11_VERSION} pytest pytest-xdist sphinx sphinx_rtd_theme

pip3 install --upgrade pip setuptools wheel

# Upgrade numpy via pip. Exclude binaries to avoid conflicts with libblas
# (See issue #126 and #1305)
pip3 install --no-binary="numpy" numpy==${NUMPY_VERSION} --upgrade

# Install petsc4py
cd ${PETSC_DIR} 
cd src/binding/petsc4py 
PETSC_ARCH=linux-gnu-real-32:linux-gnu-complex-32:linux-gnu-real-64:linux-gnu-complex-64 pip3 install . 

# Install slepc4py
cd ${SLEPC_DIR}/src/binding/slepc4py 
PETSC_ARCH=linux-gnu-real-32:linux-gnu-complex-32:linux-gnu-real-64:linux-gnu-complex-64 pip3 install . 

cd $BUILD_DIR

# install basix
python3 -m pip install ./basix/python 

# Install ufl
pip3 install ./ufl 

# Install ffcx
pip3 install --no-deps ./ffcx 

# Install ipython
pip3 install ipython

[ ! -d "./dolfinx" ] && git clone https://github.com/FEniCS/dolfinx.git
mkdir -p $BUILD_DIR/dolfinx/build-real && cd $BUILD_DIR/dolfinx/build-real
PETSC_ARCH=linux-gnu-real-32 cmake -G Ninja -DCMAKE_INSTALL_PREFIX=$DOLFIN_REAL_DIR \
	        -DCMAKE_BUILD_TYPE=${DOLFINX_CMAKE_BUILD_TYPE} \
		        -DCMAKE_CXX_FLAGS=${DOLFINX_CMAKE_CXX_FLAGS} ../cpp
sudo ninja install
sudo chown -R $USER:$USER $DOLFIN_REAL_DIR

source $DOLFIN_REAL_DIR/lib/dolfinx/dolfinx.conf
cd $BUILD_DIR/dolfinx/python
CXXFLAGS=${DOLFINX_CMAKE_CXX_FLAGS} PETSC_ARCH=linux-gnu-real-32 pip3 install --no-dependencies .

: <<END

mkdir -p $BUILD_DIR/dolfinx/build-complex && cd $BUILD_DIR/dolfinx/build-complex
PETSC_ARCH=linux-gnu-complex-32 cmake -G Ninja -DCMAKE_INSTALL_PREFIX=$DOLFIN_COMPLEX_DIR \
	-DCMAKE_BUILD_TYPE=${DOLFINX_CMAKE_BUILD_TYPE} \
	-DCMAKE_CXX_FLAGS=${DOLFIN_CMAKE_CXX_FLAGS} ../cpp 
sudo ninja install 
sudo chown -R $USER:$USER $DOLFIN_COMPLEX_DIR
source $DOLFIN_COMPLEX_DIR/lib/dolfinx/dolfinx.conf 
cd $BUILD_DIR/dolfinx/python
CXXFLAGS=${DOLFINX_CMAKE_CXX_FLAGS} PETSC_ARCH=linux-gnu-complex-32 pip3 install \
	--target $DOLFIN_COMPLEX_DIR/lib/python3.8/dist-packages \
	--no-dependencies .

# pyvista dependencies from apt
cd $BUILD_DIR
sudo apt-get -qq update 
sudo apt-get -y install libgl1-mesa-dev xvfb 
sudo apt-get clean 
sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# pyvista dependencies from pip. Only compatible with x86-64 (amd64).
# matplotlib improves plotting quality with better color maps and properly rendering colorbars.
pip3 install --trusted-host pypi.org --trusted-host files.pythonhosted.org --trusted-host pypi.python.org \
	--no-cache-dir pyvista==${PYVISTA_VERSION} 
pip3 install --trusted-host pypi.org --trusted-host files.pythonhosted.org --trusted-host pypi.python.org \
	--no-cache-dir matplotlib
END
