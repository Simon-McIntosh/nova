!===============================================================================
! 21 August 2017 - Gabriele D'Amico fusion For Energy (F4E) -  F4E_D_XXXXXX v1.0
! 
! 15.05.2018 - Fabian Krajewski CADFEM - V2_2
! 	Features
!		Smaller file structure
!
!
! This macro is to Run Electro Magnetic analyses on MAGNET MODEL to compute Lorentz Forces
!
!===============================================================================
! SET THE MAGNETIC NODAL PREFRENCES
!
/CONFIG, NRES, 4000 	!If time steps are too many, the number should be increased to store the results.
!===========================================================================
! CONSTANT
!
		TRUE			= 1
		FALSE			= 0

!===============================================================================
! Enums (DO NOT MODIFY!)
!
	!=======================================================================
	! PARAMETERS
	!
	nCoil_MAG     	= 18
	nCoil_MECH     	= 18
	nCoil_PF	= 6
	nCoil_CS	= 6
	g		= 9.81		! gravity acceleration[m/s^2]
	PI		= ACOS(-1)

	!=======================================================================
	! LOCAL COORDINATE SYSTEM ID
	!
	GlobCyl		= 11		! Global Cyl CS

	!=======================================================================
	! REFERENCE TEMPERATURES
	!
	RoomT		= 292		! [K]
	OperT		= 4		! [K]

	!===========================================================================
	! ELEMENT TYPE ID
	!
	ET_SOLID		= 1
	ET_MASS			= 2
	ET_C_STAND		= 3
	ET_T_STAND		= 4
	ET_C_BOND		= 5
	ET_T_BOND		= 6
	ET_C_SLID		= 7
	ET_T_SLID		= 8
	ET_C_STAND_CLOSE_GAP	= 9
	ET_T_STAND_CLOSE_GAP	= 10
	ET_C_MPC		= 11
	ET_T_MPC		= 12
	ET_LINK			= 13
	ET_SOLSH		= 14
	ET_BEAM			= 15
	ET_SPRING		= 16

!===============================================================================
!===============================================================================
!===============================================================================

!===============================================================================
!===============================================================================
!===============================================================================

	!§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
	!
	! CHECK_POINT_1
	! (select HERE: Revision, and Case)
	!
	!
	Rev  		= %arg1%
!	Case 		= %arg2%
	!
	!§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§

	!===========================================================================
	!===========================================================================
	! SET SCENARIO
	!
	*IF,arg4,EQ,0,THEN
		*IF, %arg3%, EQ, 1, THEN

			Scenario = 'TF_ONLY'

		*ELSEIF, %arg3%, EQ, 2, THEN

			Scenario = 'SOD'

		*ELSEIF, %arg3%, EQ, 3, THEN

			Scenario = 'SOP'

		*ELSEIF, %arg3%, EQ, 4, THEN

			Scenario = 'XPF'

		*ELSEIF, %arg3%, EQ, 5, THEN

			Scenario = 'CS1_0'

		*ELSEIF, %arg3%, EQ, 6, THEN

			Scenario = 'CS2U0'

		*ELSEIF, %arg3%, EQ, 7, THEN

			Scenario = 'CS2L0'

		*ELSEIF, %arg3%, EQ, 8, THEN

			Scenario = 'SOF'

		*ELSEIF, %arg3%, EQ, 9, THEN

			Scenario = 'SOB'

		*ELSEIF, %arg3%, EQ, 10, THEN

			Scenario = 'EOB'

		*ELSEIF, %arg3%, EQ, 11, THEN
		
			Scenario = 'EOP'
		
		*ELSEIF, %arg3%, EQ, 12, THEN
		
			Scenario = 'EOB+PD'
	
		*ENDIF
	*ELSEIF,arg4,EQ,1,THEN
		*IF, %arg3%, EQ, 1, THEN
		
			Scenario = 'TF_ONLY'
		
		*ELSEIF, %arg3%, EQ, 2, THEN
		
			Scenario = 'SOD'
		
		*ELSEIF, %arg3%, EQ, 3, THEN
		
			Scenario = 'SOFT'
		
		*ELSEIF, %arg3%, EQ, 4, THEN
		
			Scenario = 'EOFT'
		*ENDIF
	*ENDIF

!===============================================================================
!===============================================================================

	!=======================================================================
	! Modified :)
	!
	Model 		= 'MAGNET_EMAG'
	CaseName	= 'EMAG'
	MAGN 		= TRUE
	KIND		= 'EMAG'
	
!===============================================================================
!===============================================================================
!===============================================================================
! Load CDB model to generate MECH and MAG DB model or load generated DB models
	
	!========================================================================
	! set filename
	!
	/FILNAME,'%Scenario%_%CaseName%',1
	
	!========================================================================
	! set txt OUTPUT
	!	
	/CWD, './MAGNET_%Rev%/TEXTOUT'
	/OUTPUT,,txt
	/CWD, '../../'
	
	!§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
	!
	! CHECK_POINT_2
	! (select HERE: change to PROPER DIRECTORY)
	!
	!
	/CWD,		'.//MAGNET_%Rev%/%KIND%/%Scenario%/%CaseName%'
	!
	!§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
	
	!========================================================================
	! READ model
	!		
	RESUME,'../../../_models/%Model%', db, , 1, 1
	
	ALLSEL, ALL
	
	!=========================================================================
	!===========================================================================
	! READ CURRENT INPUT FOR SCENARIO
	
	*IF, ARG4, EQ, 0, THEN
	*DIM, SCENARIOTABLE, ARRAY, 14, 12
*VREAD, SCENARIOTABLE(1,1),   '../../../_models/PARAMETER/REF_15MA_2016', txt, , JIK, 12 ,14 , ,7 ! 12 columns, 14 rows, skip 7 lines
(6X, 12F9.3)
	*ELSEIF, ARG4, EQ, 1, THEN
	*DIM, SCENARIOTABLE, ARRAY, 14, 4
*VREAD, SCENARIOTABLE(1,1),   '../../../_models/PARAMETER/DOWNGRADE_5MA', txt, , JIK, 4 ,14 , ,6 ! 4 columns, 14 rows, skip 6 lines
(9X, 4F9.3)
	*ENDIF

	!===============================================================================
	! set title
	!
	/TITLE,MAGNET_EM_Rev%Rev%  CaseName:%CaseName%  Scenario:%Scenario%


!===============================================================================
!===============================================================================
!===============================================================================
! PRELIMINARY PHASES - GLOBAL PRE-PROCESSING FOR ELECTRO-MAGNETIC ANALYSES
!
/PREP7

	! Read loads from table 
	*SET,I_CSU3_LOAD, SCENARIOTABLE(1, arg3)*(1E6)
	*SET,I_CSU2_LOAD, SCENARIOTABLE(2, arg3)*(1E6)
	*SET,I_CSU1_LOAD, SCENARIOTABLE(3, arg3)*(1E6)
	*SET,I_CSL1_LOAD, SCENARIOTABLE(4, arg3)*(1E6)
	*SET,I_CSL2_LOAD, SCENARIOTABLE(5, arg3)*(1E6)
	*SET,I_CSL3_LOAD, SCENARIOTABLE(6, arg3)*(1E6)
	*SET,I_PF1_LOAD, SCENARIOTABLE(7, arg3)*(1E6)
	*SET,I_PF2_LOAD, SCENARIOTABLE(8, arg3)*(1E6)
	*SET,I_PF3_LOAD, SCENARIOTABLE(9, arg3)*(1E6)
	*SET,I_PF4_LOAD, SCENARIOTABLE(10, arg3)*(1E6)
	*SET,I_PF5_LOAD, SCENARIOTABLE(11, arg3)*(1E6)
	*SET,I_PF6_LOAD, SCENARIOTABLE(12, arg3)*(1E6)
	*SET,I_TF_LOAD, SCENARIOTABLE(13, arg3)*(1E6)
	*SET,I_PL_LOAD, SCENARIOTABLE(14, arg3)*(1E6)
	!=======================================================================
	! Input Current FOR TF ONLY[A*turns]
	!
	*IF, ARG4, EQ, 0, THEN
		! SCENARIO: 15 MA
		*IF, %arg3%, EQ, 1, THEN						! TF only

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= FALSE			! PF on/off
			CS_LOAD		= FALSE			! CS on/off
			PLASMA_LOAD	= FALSE			! PLASMA on/off

		*ELSEIF, %arg3%, EQ, 2, THEN						! SOD

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= FALSE			! PLASMA on/off

		*ELSEIF, %arg3%, EQ, 3, THEN						! SOP

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off

		*ELSEIF, %arg3%, EQ, 4, THEN						! XPF

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off

		*ELSEIF, %arg3%, EQ, 5, THEN						! CS1_0

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off

		*ELSEIF, %arg3%, EQ, 6, THEN						! CS2U0

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off

		*ELSEIF, %arg3%, EQ, 7, THEN						! CS2L0

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off

		*ELSEIF, %arg3%, EQ, 8, THEN						! SOF

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off

		*ELSEIF, %arg3%, EQ, 9, THEN						! SOB

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off

		*ELSEIF, %arg3%, EQ, 10, THEN						! EOB

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off
		
		*ELSEIF, %arg3%, EQ, 11, THEN						! EOP

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off
		
		*ELSEIF, %arg3%, EQ, 12, THEN						! EOP+PD

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= FALSE			! PLASMA on/off
		
		*ENDIF
	*ELSEIF, ARG4, EQ, 1, THEN
		! SCENARIO: 5 MA
		*IF, %arg3%, EQ, 1, THEN						! TF only

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= FALSE			! PF on/off
			CS_LOAD		= FALSE			! CS on/off
			PLASMA_LOAD	= FALSE			! PLASMA on/off
		
		*ELSEIF, %arg3%, EQ, 2, THEN						! SOD

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= FALSE			! PLASMA on/off
		
		*ELSEIF, %arg3%, EQ, 3, THEN						! SOFT

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off
		
		*ELSEIF, %arg3%, EQ, 4, THEN						! EOFT

			TF_LOAD		= TRUE			! TF on/off
			PF_LOAD		= TRUE			! PF on/off
			CS_LOAD		= TRUE			! CS on/off
			PLASMA_LOAD	= TRUE			! PLASMA on/off
		*ENDIF
	*ENDIF

	*IF, PF_LOAD, EQ, TRUE, THEN
	
	! READ PF FORCES
	I_PF1   =   I_PF1_LOAD 
	I_PF2   =   I_PF2_LOAD 
	I_PF3   =   I_PF3_LOAD 
	I_PF4   =   I_PF4_LOAD 
	I_PF5   =   I_PF5_LOAD 
	I_PF6   =   I_PF6_LOAD 

	*ENDIF
	
	*IF, CS_LOAD, EQ, TRUE, THEN
	
	! READ CS FORCES
	I_CSU3   =   I_CSU3_LOAD
	I_CSU2   =   I_CSU2_LOAD
	I_CSU1   =   I_CSU1_LOAD
	I_CSL1   =   I_CSL1_LOAD
	I_CSL2   =   I_CSL2_LOAD
	I_CSL3   =   I_CSL3_LOAD
	
	*ENDIF
	
	*IF, TF_LOAD, EQ, TRUE, THEN
	
	! NEGATIVE MEANS POSITIVE ACCORDING TO DINA 
	*do,I_COIL,1,18
        I_TF_%I_COIL% = I_TF_LOAD*0.992
	*enddo
	
!       I_TF_1   =   I_TF_LOAD*1.00
!       I_TF_2   =   I_TF_LOAD*1.00
!		I_TF_3   =   I_TF_LOAD*1.00
!		I_TF_4   =   I_TF_LOAD*1.00
!		I_TF_5   =   I_TF_LOAD*1.00
!		I_TF_6   =   I_TF_LOAD*1.00
!		I_TF_7   =   I_TF_LOAD*1.00
!		I_TF_8   =   I_TF_LOAD*1.00
!		I_TF_9   =   I_TF_LOAD*1.00
!		I_TF_10  =   I_TF_LOAD*1.00
!		I_TF_11  =   I_TF_LOAD*1.00
!		I_TF_12  =   I_TF_LOAD*1.00
!		I_TF_13  =   I_TF_LOAD*1.00
!		I_TF_14  =   I_TF_LOAD*1.00
!		I_TF_15  =   I_TF_LOAD*1.00
!		I_TF_16  =   I_TF_LOAD*1.00
!		I_TF_17  =   I_TF_LOAD*1.00
!		I_TF_18  =   I_TF_LOAD*1.00
	
	*ENDIF

	*IF, PLASMA_LOAD, EQ, TRUE, THEN

	! READ PLASMA FORCE
	I_PLASMA =   I_PL_LOAD
	
	*ENDIF


FINISH
!===============================================================================
!===============================================================================
!
! ELECTRO-MAGNETIC ANALYSES
!
!===============================================================================
!===============================================================================
!
*IF, MAGN, EQ, TRUE, THEN

	!===========================================================================
	!===========================================================================
	! PRE-PROCESSING
	!
	/PREP7	
		!===========================================================================
		! Deactivate shape test on elems 
		!
		SHPP, OFF
		
		!===========================================================================
		! Fix Unit System
		!
		EMUNIT, MKS		! EM UNITS SYSTEM
		
		!===========================================================================
		! DEFINE PLASMA FIELD POSITION
		!
		*DIM,pf_geo,,4,12
		pf_geo(1,1) =   6.300,  0.000,  1.000,  1.000	! Plasma position LC TFonly  - NOT IMPORTANT
		pf_geo(1,2) =   6.300,  0.000,  1.000,  1.000	! Plasma position LC SOD     - NOT IMPORTANT
		pf_geo(1,3) =   6.300,  0.000,  1.000,  1.000	! Plasma position LC SOP     - NOT IMPORTANT
		pf_geo(1,4) =   6.079,  0.287,  1.000,  1.000	! Plasma position LC XPF
		pf_geo(1,5) =   6.083,  0.504,  1.000,  1.000	! Plasma position LC CS1_0
		pf_geo(1,6) =   6.084,  0.508,  1.000,  1.000	! Plasma position LC CS2U0
		pf_geo(1,7) =   6.088,  0.503,  1.000,  1.000	! Plasma position LC CS2L0
		pf_geo(1,8) =   6.084,  0.527,  1.000,  1.000	! Plasma position LC SOF
		pf_geo(1,9) =   6.224,  0.484,  1.000,  1.000	! Plasma position LC SOB
		pf_geo(1,10) =  6.220,  0.487,  1.000,  1.000	! Plasma position LC EOB
		pf_geo(1,11) =  6.342, -0.745,  1.000,  1.000	! Plasma position LC EOP      - NOT IMPORTANT
		pf_geo(1,12) =  6.300,  0.500,  1.000,  1.000	! Plasma position LC EOB + PD - NOT IMPORTANT

		!===========================================================================
		! MOVE CENTRAL SOLENOID AND PF COIL TO EXCEL POSITION
		! POSITION FEM
		*DIM,POS_FEM,ARRAY,4,12
		!				Zup		 Zlow	 Rin	 Rout
		POS_FEM(1,1) =  6.6050,  4.4121, 1.3050, 2.0730 	! CSU3 POSITION
		POS_FEM(1,2) =  4.4120,  2.2201, 1.3050, 2.0730 	! CSU2 POSITION
		POS_FEM(1,3) =  2.2200,  0.0276, 1.3050, 2.0730 	! CSU1 POSITION
		POS_FEM(1,4) =  0.0275, -2.1639, 1.3050, 2.0730 	! CSL1 POSITION
		POS_FEM(1,5) = -2.1640, -4.3559, 1.3050, 2.0730 	! CSL2 POSITION
		POS_FEM(1,6) = -4.3560, -6.5480, 1.3050, 2.0730 	! CSL3 POSITION
		POS_FEM(1,7) =  8.1182,  7.1138, 3.4654, 4.4446 	! PF1 POSITION
		POS_FEM(1,8) =  6.9460,  6.2120, 8.0105, 8.6095 	! PF2 POSITION
		POS_FEM(1,9) =  3.7910,  2.8170, 11.670, 12.386 	! PF3 POSITION
		POS_FEM(1,10) =-1.7340, -2.7080, 11.670, 12.328 	! PF4 POSITION
		POS_FEM(1,11) =-6.2410, -7.2150, 7.9979, 8.8321 	! PF5 POSITION
		POS_FEM(1,12) =-6.9059, -8.0341, 3.5564, 5.1376 	! PF6 POSITION
		
		! POSITION EXCEL
		*DIM,POS_EXC,ARRAY,4,12
		!				Zup		 Zlow	 Rin	 Rout
		POS_EXC(1,1) =  6.484,  4.364, 1.330, 2.064 	! CSU3 POSITION
		POS_EXC(1,2) =  4.315,  2.195, 1.330, 2.064 	! CSU2 POSITION
		POS_EXC(1,3) =  2.145,  0.025, 1.330, 2.064 	! CSU1 POSITION
		POS_EXC(1,4) = -0.025, -2.145, 1.330, 2.064 	! CSL1 POSITION
		POS_EXC(1,5) = -2.195, -4.315, 1.330, 2.064 	! CSL2 POSITION
		POS_EXC(1,6) = -4.364, -6.484, 1.330, 2.064	! CSL3 POSITION
		POS_EXC(1,7) =  8.056,  7.072, 3.464, 4.4226 	! PF1 POSITION
		POS_EXC(1,8) =  6.887,  6.173, 7.995, 8.5752 	! PF2 POSITION
		POS_EXC(1,9) =  3.742,  2.788, 11.644, 12.340 	! PF3 POSITION
		POS_EXC(1,10) =-1.767, -2.721, 11.644, 12.282 	! PF4 POSITION
		POS_EXC(1,11) =-6.260, -7.214, 7.985, 8.797 	! PF5 POSITION
		POS_EXC(1,12) =-6.923, -8.030, 3.555, 5.114 	! PF6 POSITION
		
		!===========================================================================
		! Generate Default Plasma
		!
		*GET,nmkp,KP,,NUM,MAX           ! get highest kp number in selected set
		csys, GlobCyl
		K,nmkp+1,pf_geo(1,arg3)-pf_geo(3,arg3)/2,0,pf_geo(2,arg3)+pf_geo(4,arg3)/2
		K,nmkp+2,pf_geo(1,arg3)+pf_geo(3,arg3)/2,0,pf_geo(2,arg3)+pf_geo(4,arg3)/2
		KGEN, 2, nmkp+1, nmkp+2, 1,,, -pf_geo(4,arg3), 2
		A,nmkp+1,nmkp+2,nmkp+4,nmkp+3
		*GET, nar1, AREA,, NUM, MAX         ! get area number
		LESIZE, ALL,,,5                  ! element division along all lines is 5
		ET, 21, 200 
		
		TYPE, 21
		KEYOPT, 21, 1, 6
		AMESH, nar1
		K, nmkp+5, 0, 0, 0
		K, nmkp+6, 0, 0, 1
		VROTAT,nar1, , , , , ,nmkp+5, nmkp+6, 359.99, , 
		MAT, 2
		LESIZE, ALL,,,25 
		VMESH, ALL
		
		ESEL, S, MAT,, 2
		CM, PLASMA, ELEM
		ACLEAR, ALL
		
		! DEFINE LAYER FOR PLASMA
		CSYS, 0
		CMSEL, S, PLASMA
		NSLE
		NSEL, R, LOC, X, 0, 100
		NSEL, R, LOC, Y, 0.0, 0.05
		CM, upp1_PLASMA, NODE
		
		CMSEL, S, PLASMA
		NSLE
		NSEL, R, LOC, X, 0, 100
		NSEL, R, LOC, Y, -0.05, -0.0005
		CM, low1_PLASMA, NODE
		
		CMSEL, S, PLASMA
		EMODIF, ALL, ESYS, 11
				
		ALLSEL
		
		CSYS, 0

		D, ALL, MAG, 0
		D, ALL, TEMP, 0
		
		!===========================================================================
		! Material properties for TF, CS and PF coils
		! Change only the material propertie RSVY, which is in winding direction.
		! Keep the resistivity in radial and vertical direction equal 1.0
		!
		
		! MODIFY MATERIAL FOR TF COILS
		*DO, zzz, 1, nCoil_MAG
			DELTA = ((zzz-1)*20)
			CMSEL, S, E_WP_%zzz%
			*GET, ecount, ELEM,, COUNT
			*GET, emax, ELEM,, NUM, MAX

			zl=
			*DIM, zl, ARRAY, emax

			kk=0
			*DO, k, 1, ecount
				kk=ELNEXT(kk)

				*GET, zcs, ELEM, kk, ATTR, ESYS
				
				CSYS, zcs

				xc=0.0
				*DO, kkk, 1, 8
					xc=xc+nx(NELEM(kk,kkk))
				*ENDDO
				xc=xc/8.0					

				zl(kk)=1.0

				*IF, zcs, EQ, 30+%DELTA%, THEN
					zl(kk)=zl(kk)
				*ENDIF

				*IF, zcs, EQ, 37+%DELTA%, THEN
					zl(kk)=zl(kk)*xc/2.241
				*ENDIF

				*IF, zcs, EQ, 42+%delta%, THEN
					zl(kk)=zl(kk)*xc/2.241
				*ENDIF

				*IF, zcs, EQ, 38+%delta%, THEN
					zl(kk)=zl(kk)*xc/3.231
				*ENDIF
				
				*IF, zcs, EQ, 41+%delta%, THEN
					zl(kk)=zl(kk)*xc/3.231
				*ENDIF

				*IF, zcs, EQ, 39+%delta%, THEN
					zl(kk)=zl(kk)*xc/6.550
				*ENDIF
				
				*IF, zcs, EQ, 40+%delta%, THEN
					zl(kk)=zl(kk)*xc/6.550
				*ENDIF
			
				EMODIF,kk, MAT, kk
				MP, murx, kk, 1.0
				MP, rsvx, kk, 1.0
				MP, rsvy, kk, 1.0/zl(kk)
				MP, rsvz, kk, 1.0
				MP, kxx, kk, 1.0
				MP, EX, kk, 1.0
				MP, PRXY, kk,0.3
				
			*ENDDO
		*ENDDO
		
		CSYS,1
		
		! MODIFY MATERIAL FOR PF COILS
		*DO, zzz, 1, nCoil_PF
			CMSEL, S, PF%zzz%
			*GET, ecount, ELEM,, COUNT
			*GET, emax, ELEM,, NUM, MAX

			zl=
			*DIM, zl, ARRAY, emax

			kk=0
			*DO, k, 1, ecount
				kk=ELNEXT(kk)

				*GET, zcs, ELEM, kk, ATTR, ESYS

				xc=0.0
				*DO, kkk, 1, 8
					xc=xc+nx(NELEM(kk,kkk))
				*ENDDO
				xc=xc/8.0

				zl(kk)=1.0
				RMID = (POS_EXC(3,zzz+6)+POS_EXC(4,zzz+6))/2
				zl(kk)=zl(kk)*xc/RMID
				
				EMODIF,kk, MAT, kk
				MP, murx, kk, 1.0
				MP, rsvx, kk, 1.0
				MP, rsvy, kk, 1.0/zl(kk)
				MP, rsvz, kk, 1.0
				MP, kxx, kk, 1.0
				MP, EX, kk, 1.0
				MP, PRXY, kk,0.3
				
			*ENDDO
		*ENDDO
		
		! MODIFY MATERIAL FOR CS COILS
		CMSEL, S, CSU1
		CMSEL, A, CSU2
		CMSEL, A, CSU3
		CMSEL, A, CSL1
		CMSEL, A, CSL2
		CMSEL, A, CSL3
		*GET, ecount, ELEM,, COUNT
		*GET, emax, ELEM,, NUM, MAX
		CSYS, 1

		zl=
		*DIM, zl, ARRAY, emax

		kk=0
		*DO, k, 1, ecount
			kk=ELNEXT(kk)

			*GET, zcs, ELEM, kk, ATTR, ESYS

			xc=0.0
			*DO, kkk, 1, 8
				xc=xc+nx(NELEM(kk,kkk))
			*ENDDO
			xc=xc/8.0

			zl(kk)=1.0
			RMID = (POS_EXC(3,1)+POS_EXC(4,1))/2
			zl(kk)=zl(kk)*xc/RMID
				
			EMODIF,kk, MAT, kk
			MP, murx, kk, 1.0
			MP, rsvx, kk, 1.0
			MP, rsvy, kk, 1.0/zl(kk)
			MP, rsvz, kk, 1.0
			MP, kxx, kk, 1.0
			MP, EX, kk, 1.0
			MP, PRXY, kk,0.3
				
		*ENDDO
		
		! MODIFY MATERIAL FOR PLASMA
		CMSEL, S, PLASMA
		*GET, ecount, ELEM,, COUNT
		*GET, emax, ELEM,, NUM, MAX
		CSYS, 1

		zl=
		*DIM, zl, ARRAY, emax

		kk=0
		*DO, k, 1, ecount
			kk=ELNEXT(kk)

			*GET, zcs, ELEM, kk, ATTR, ESYS

			xc=0.0
			*DO, kkk, 1, 8
				xc=xc+nx(NELEM(kk,kkk))
			*ENDDO
			xc=xc/8.0

			zl(kk)=1.0

			zl(kk)=zl(kk)*xc/pf_geo(1,arg3)
				
			EMODIF,kk, MAT, kk
			MP, murx, kk, 1.0
			MP, rsvx, kk, 1.0
			MP, rsvy, kk, 1.0/zl(kk)
			MP, rsvz, kk, 1.0
			MP, kxx, kk, 1.0
			MP, EX, kk, 1.0
			MP, PRXY, kk,0.3
				
		*ENDDO
		
		!===========================================================================
		! Set VOLT=0 for lower set of overlapping planes TF coil and
		! couple the VOLT dof for all other layers in poloidal direction
		! Put boundary conditions of TF-coil
		!
		*DO, i, 1, nCoil_MAG
			CMSEL, S, low1_TF%i%
			D, ALL, VOLT, 0
			CMSEL, S, upp1_TF%i%
			*GET, mxcp, ACTIVE,, CP
			CP, mxcp+1, VOLT, ALL  ! Couple all node with VOLT DOF
		*ENDDO
		! Put boundary conditions of PF-coil
		!
		*DO, i, 1, nCoil_PF
			CMSEL, S, low1_PF%i%
			D, ALL, VOLT, 0
			CMSEL, S, upp1_PF%i%
			*GET, mxcp, ACTIVE,, CP
			CP, mxcp+1, VOLT, ALL  ! Couple all node with VOLT DOF
		*ENDDO
		! Put boundary conditions of CENTRAL Solenoid
		!
		
		*DO, i, 1, nCoil_CS
			*IF, i, GT, 3, THEN
				CMSEL, S, low1_CSL%i-3%
			*ELSE
				CMSEL, S, low1_CSU%i%
			*ENDIF
			D, ALL, VOLT, 0
			*IF, i, GT, 3, THEN
				CMSEL, S, upp1_CSL%i-3%
			*ELSE
				CMSEL, S, upp1_CSU%i%
			*ENDIF
			*GET, mxcp, ACTIVE,, CP
			CP, mxcp+1, VOLT, ALL  ! Couple all node with VOLT DOF
		*ENDDO
		! Put boundary conditions of PLASMA
		!
		CMSEL, S, low1_PLASMA
		D, ALL, VOLT, 0
		CMSEL, S, upp1_PLASMA
		*GET, mxcp, ACTIVE,, CP
		CP, mxcp+1, VOLT, ALL  ! Couple all node with VOLT DOF

		ALLSEL
		
	finish

	!===========================================================================
	! Move Plasma FE-Model to correct position by using ngen in CSYS=27 in radial direction
	! and Nmodify in CSYS=0 in vertical direction
	!

	! MUST BE ADDED IF NECESSARY
	
	!===========================================================================
	! APPLY LOADS ON ALL SOLID5 COMPONENTS (WP, CS, PF, PLASMA)
	/SOLU
	
		! SET ASSIGN TO RST AND RMG
		/ASSIGN, RMG, %SCENARIO%_EMAG, rmg
		/ASSIGN, RST, %SCENARIO%_EMAG, rst
	
		! SET DEFORMATION BOUNDARY CONDITIONS TO ZERO
		ALLSEL
		D, ALL, UX, 0
		D, ALL, UY, 0
		D, ALL, UZ, 0
		! Apply loads on 6 CS modules	
		*IF, CS_LOAD, EQ, TRUE, THEN
			*DO, i, 1, nCoil_CS
				*IF, i, GT, 3, THEN
					CMSEL, S, upp1_CSL%i-3%
				*ELSE
					CMSEL, S, upp1_CSU%i%
				*ENDIF
				*GET, nmin, NODE,, NUM, MIN
				*IF, i, GT, 3, THEN
					F, nmin, AMPS, I_CSL%i-3%
				*ELSE
					F, nmin, AMPS, I_CSU%i%
				*ENDIF
			*ENDDO
		*ENDIF
	
		! Apply loads on 6 PF modules
		*IF, PF_LOAD, EQ, TRUE, THEN
			*DO, i, 1, nCoil_PF
				CMSEL, S, upp1_PF%i%
				*GET, nmin, NODE,, NUM, MIN
				F, nmin, AMPS, I_PF%i%
			*ENDDO
		*ENDIF
	
		! Apply loads on 18 WP modules
		*IF, TF_LOAD, EQ, TRUE, THEN
			*DO, i, 1, nCoil_MAG
				CMSEL, S, upp1_TF%i%
				*GET, nmin, NODE,, NUM, MIN
				F, nmin, AMPS, I_TF_%i%
			*ENDDO
		*ENDIF
	
		! Apply loads on Plasma
		*IF, PLASMA_LOAD, EQ, TRUE, THEN
			CMSEL, S, upp1_PLASMA
			*GET, nmin, NODE,, NUM, MIN
			F, nmin, AMPS, I_PLASMA
		*ENDIF
		ALLSEL
		!PARSAV, ALL, '../PARAMETERS/EMAG', 'PARM'
	
		!===========================================================================
		! CALCULATE CURRENT DENSITY
		ALLSEL
		ANTYPE, STATIC
		NROPT, AUTO,, ON
		NSUBST, 1
		CNVTOL, HEAT, -1
		CNVTOL, AMPS
		CNVTOL, FLUX
		SOLVE
		
		!===========================================================================
		! CALCULATE MAGNETIC FIELD and LORENTZ FORCES
		BIOT, NEW
		ALLSEL
		SOLVE
                ! SAVE DATABASE DIRECTKY AFTER EM CALCULATION BUT BEFIRE MDOEL CORRECTIONS
                SAVE,%Scenario%_TMP,db
	FINISH

	!===========================================================================
	! POST PROCESSING - WRITE TEXT FILES WITH INPUT COMMANDS FOR LORENTZ FORCES
	!
	/POST1
		*AFUN, DEG
		FILE, %SCENARIO%_EMAG, rst
		SET, LAST
		! WRITE LORENTZ FORCES FOR WP 1-18
		*DIM, TF_FORCE_TAB,ARRAY,nCoil_MAG,3
		*DO,j,1,nCoil_MAG
			RSYS, 0
			CMSEL, S, E_WP_%j%
			alfa = 20*(j-1)
			NSLE
			*GET, ncount, NODE,, COUNT
			*GET, maxn, NODE,, NUM, MAXD
			ctj=
			*DIM, ctj, ARRAY, maxn, 4
			maskv=
			*DIM, maskv, ARRAY, maxn, 1
			*VGET, maskv(1), NODE, , NSEL
			*VFILL, ctj(1,1),RAMP,1,1
			*VMASK, maskv(1)
			*VGET, ctj(1,2),NODE, , FMAG, X
			*VMASK, maskv(1)
			*VGET, ctj(1,3),NODE, , FMAG, Y
			*VMASK, maskv(1)
			*VGET, ctj(1,4),NODE, , FMAG, Z
			
			*VMASK,maskv(1)
			*VSCF,SUMFX,SUM,ctj(1,2)
			*VMASK,maskv(1)
			*VSCF,SUMFY,SUM,ctj(1,3)
			*VMASK,maskv(1)
			*VSCF,TF_FORCE_TAB(j,3),SUM,ctj(1,4)
			
			SUMFR = SUMFX*COS(alfa) + SUMFY*SIN(alfa)
			SUMFT = -SUMFX*SIN(alfa)+ SUMFY*COS(alfa)
			
			TF_FORCE_TAB(j,1) = SUMFR
			TF_FORCE_TAB(j,2) = SUMFT
		*ENDDO

		*CFOPEN, '../../%Scenario%_SUMTF', force
			*vwrite, TF_FORCE_TAB(1,1), TF_FORCE_TAB(1,2), TF_FORCE_TAB(1,3), 
%12.5E %12.5E %12.5E

		*CFCLOSE
		
		
		! WRITE LORENTZ FORCES FOR PF 1-6
		*DIM, PF_FORCE_TAB,ARRAY,nCoil_PF,3
		*DO,j,1,nCoil_PF
			RSYS, 1
			CMSEL, S, PF%j%
			NSLE
			*GET, ncount, NODE,, COUNT
			*GET, maxn, NODE,, NUM, MAXD
			ctj=
			*DIM, ctj, ARRAY, maxn, 4
			maskv=
			*DIM, maskv, ARRAY, maxn, 1
			*VGET, maskv(1), NODE, , NSEL
			*VFILL, ctj(1,1),RAMP,1,1
			*VMASK, maskv(1)
			*VGET, ctj(1,2),NODE, , FMAG, X
			*VMASK, maskv(1)
			*VGET, ctj(1,3),NODE, , FMAG, Y
			*VMASK, maskv(1)
			*VGET, ctj(1,4),NODE, , FMAG, Z
			
			*VMASK,maskv(1)
			*VSCF,PF_FORCE_TAB(j,1),SUM,ctj(1,2)
			*VMASK,maskv(1)
			*VSCF,PF_FORCE_TAB(j,2),SUM,ctj(1,3)
			*VMASK,maskv(1)
			*VSCF,PF_FORCE_TAB(j,3),SUM,ctj(1,4)
		*ENDDO

		*CFOPEN, '../../%Scenario%_SUMPF', force
			*vwrite, PF_FORCE_TAB(1,1), PF_FORCE_TAB(1,2), PF_FORCE_TAB(1,3), 
%12.5E %12.5E %12.5E

		*CFCLOSE
		
		! WRITE LORENTZ FORCES FOR CSU 1-3 and CSL 1-3
		*DIM, CS_FORCE_TAB,ARRAY,nCoil_CS,3
		*DO,j,1,nCoil_CS
			RSYS, 1
			*IF, j, GT, 3, THEN
				CMSEL, S, CSL%j-3%
			*ELSE
				CMSEL, S, CSU%4-j%
			*ENDIF
			NSLE
			*GET, ncount, NODE,, COUNT
			*GET, maxn, NODE,, NUM, MAXD
			ctj=
			*DIM, ctj, ARRAY, maxn, 4
			maskv=
			*DIM, maskv, ARRAY, maxn, 1
			*VGET, maskv(1), NODE, , NSEL
			*VFILL, ctj(1,1),RAMP,1,1
			*VMASK, maskv(1)
			*VGET, ctj(1,2),NODE, , FMAG, X
			*VMASK, maskv(1)
			*VGET, ctj(1,3),NODE, , FMAG, Y
			*VMASK, maskv(1)
			*VGET, ctj(1,4),NODE, , FMAG, Z
			
			*VMASK,maskv(1)
			*VSCF,CS_FORCE_TAB(j,1),SUM,ctj(1,2)
			*VMASK,maskv(1)
			*VSCF,CS_FORCE_TAB(j,2),SUM,ctj(1,3)
			*VMASK,maskv(1)
			*VSCF,CS_FORCE_TAB(j,3),SUM,ctj(1,4)
		*ENDDO

		*CFOPEN, '../../%Scenario%_SUMCS', force
			*vwrite, CS_FORCE_TAB(1,1), CS_FORCE_TAB(1,2), CS_FORCE_TAB(1,3), 
%12.5E %12.5E %12.5E

		*CFCLOSE
		
		! WRITE LORENTZ FORCES FOR PLASMA
		*DIM, PLA_FORCE_TAB,ARRAY,1,3
		RSYS, 1
		CMSEL, S, PLASMA
		NSLE
		*GET, maxn, NODE,, NUM, MAXD
		ctj=
		*DIM, ctj, ARRAY, maxn, 4
		maskv=
		*DIM, maskv, ARRAY, maxn, 1
		*VGET, maskv(1), NODE, , NSEL
		*VFILL, ctj(1,1),RAMP,1,1
		*VMASK, maskv(1)
		*VGET, ctj(1,2),NODE, , FMAG, X
		*VMASK, maskv(1)
		*VGET, ctj(1,3),NODE, , FMAG, Y
		*VMASK, maskv(1)
		*VGET, ctj(1,4),NODE, , FMAG, Z
		
		*VMASK,maskv(1)
		*VSCF,PLA_FORCE_TAB(1,1),SUM,ctj(1,2)
		*VMASK,maskv(1)
		*VSCF,PLA_FORCE_TAB(1,2),SUM,ctj(1,3)
		*VMASK,maskv(1)
		*VSCF,PLA_FORCE_TAB(1,3),SUM,ctj(1,4)
		
		*CFOPEN, '../../%Scenario%_SUMPLA', force
			*vwrite, PLA_FORCE_TAB(1,1), PLA_FORCE_TAB(1,2), PLA_FORCE_TAB(1,3), 
%12.5E %12.5E %12.5E

		*CFCLOSE
		
	finish
	
	!===========================================================
	! MOVE NODES BACK TO FEM POSITION
	
	SAVE
	
	/PREP7
		CSYS,1
		*DO,i,1,6
			! MOVE Zupp TO FEM POSITION
			CMSEL, S, Zupp%i%
			*GET,ncount, NODE,, COUNT
			nmin = 0
			*DO, j, 1, ncount
				*GET, iN, NODE, nmin, NXTH
				ZiN = POS_FEM(1,i)
				NMODIF, iN, , , ZiN
				nmin = iN
			*ENDDO
			! MOVE Zlow TO FEM POSITION
			CMSEL, S, Zlow%i%
			*GET,ncount, NODE,, COUNT
			nmin = 0
			*DO, j, 1, ncount
				*GET, iN, NODE, nmin, NXTH
				ZiN = POS_FEM(2,i)
				NMODIF, iN, , , ZiN
				nmin = iN
			*ENDDO
			! MOVE Rin TO FEM POSITION
			!CMSEL, S, Rin%i%
			!*GET,ncount, NODE,, COUNT
			!nmin = 0
			!*DO, j, 1, ncount
			!	*GET, iN, NODE, nmin, NXTH
			!	RiN = POS_FEM(3,i)
			!	NMODIF, iN, RiN, , 
			!	nmin = iN
			!*ENDDO
			! MOVE Rout TO FEM POSITION
			!CMSEL, S, Rout%i%
			!*GET,ncount, NODE,, COUNT
			!nmin = 0
			!*DO, j, 1, ncount
			!	*GET, iN, NODE, nmin, NXTH
			!	RiN = POS_FEM(4,i)
			!	NMODIF, iN, RiN, , 
			!	nmin = iN
			!*ENDDO
		*ENDDO

	!===========================================================
	! MERGE NODES AT CUTTING PLANES AND WRITE OUT LORENTZ FORCES
	
		*DO, i, 1, nCoil_MAG
			cmsel,s,upp1_TF%i%
			cmsel,a,low1_TF%i%
			nummrg,node,0.002
		*ENDDO
		*DO, i, 1, nCoil_PF
			cmsel,s,upp1_PF%i%
			cmsel,a,low1_PF%i%
			nummrg,node,0.002
		*ENDDO
		*DO, i, 1, nCoil_CS
		
			*IF, i, GT, 3, THEN
				cmsel,s,upp1_CSL%i-3%
				cmsel,a,low1_CSL%i-3%
				nummrg,node,0.002
			*ELSE
				cmsel,s,upp1_CSU%i%
				cmsel,a,low1_CSU%i%
				nummrg,node,0.002
			*ENDIF
		*ENDDO
		
		!CMSEL, S, CSU1
		!CMSEL, A, CSU2
		!CMSEL, A, CSU3
		!CMSEL, A, CSL1
		!CMSEL, A, CSL2
		!CMSEL, A, CSL3
		!NSLE
		!nummrg,node,0.002

		!===========================================================================
		! TEST
		/POST1
		FILE, %SCENARIO%_EMAG, rst
		SET, LAST
		*DIM, SUMFMAG, ARRAY, nCoil_MAG, 3
		
		*DO, j, 1, 18
			CMSEL, S, E_WP_%j%
			NSLE
		
			RSYS, 0
			*GET, ncount, NODE,, COUNT
		
			SUMX = 0
			SUMY = 0
			SUMZ = 0
			nmin = 0
			*DO, i, 1, ncount
				*GET, iN, NODE, nmin, NXTH
				*GET, val_FX,NODE, iN, FMAG, X
				*GET, val_FY,NODE, iN, FMAG, Y
				*GET, val_FZ,NODE, iN, FMAG, Z
				nmin = iN
				SUMX = SUMX + val_FX
				SUMY = SUMY + val_FY
				SUMZ = SUMZ + val_FZ
			*ENDDO
			SUMFMAG(j,1) = SUMX
			SUMFMAG(j,2) = SUMY
			SUMFMAG(j,3) = SUMZ
		*ENDDO
		
		*CFOPEN, '../../%Scenario%_TESTTF', force
			*vwrite, SUMFMAG(1,1), SUMFMAG(1,2), SUMFMAG(1,3), 
%12.5E %12.5E %12.5E

		*CFCLOSE
		
		!===========================================================================
		! WRITE OUTPUT FILE for Lorentz forces - TFC
		!
		/POST1
		FILE, %SCENARIO%_EMAG, rst
		SET, LAST
		
		CMSEL, S, WP
		NSLE
		
		RSYS, 0
		*GET, ncount, NODE,, COUNT
		
		nmin = 0
		
		*CFOPEN, '../../%Scenario%_TF', forces
		*DO, i, 1, ncount
			*GET, iN, NODE, nmin, NXTH
			*GET, val_FX,NODE, iN, FMAG, X
			*GET, val_FY,NODE, iN, FMAG, Y
			*GET, val_FZ,NODE, iN, FMAG, Z
			nmin = iN
			
			*VWRITE, 'F,', iN, ',FX,', val_FX
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FY,', val_FY 
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FZ,', val_FZ
(A4, F13.1, A4, F13.1)		
		*ENDDO

		*CFCLOSE
		
		!===========================================================================
		! WRITE OUTPUT FILE for Lorentz forces - PFC
		!
		
		CMSEL, S, PF1
		CMSEL, A, PF2
		CMSEL, A, PF3
		CMSEL, A, PF4
		CMSEL, A, PF5
		CMSEL, A, PF6
		NSLE
		
		RSYS, 0
		*GET, ncount, NODE,, COUNT
		
		nmin = 0
		
		*CFOPEN, '../../%Scenario%_PF', forces
		*DO, i, 1, ncount
			*GET, iN, NODE, nmin, NXTH
			*GET, val_FX,NODE, iN, FMAG, X
			*GET, val_FY,NODE, iN, FMAG, Y
			*GET, val_FZ,NODE, iN, FMAG, Z
			nmin = iN
			
			*VWRITE, 'F,', iN, ',FX,', val_FX
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FY,', val_FY 
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FZ,', val_FZ
(A4, F13.1, A4, F13.1)		
		*ENDDO

		*CFCLOSE
		
		!===========================================================================
		! WRITE OUTPUT FILE for Lorentz forces - Cent. Solenoid
		!
		
		CMSEL, S, CSU1
		CMSEL, A, CSU2
		CMSEL, A, CSU3
		CMSEL, A, CSL1
		CMSEL, A, CSL2
		CMSEL, A, CSL3
		NSLE
		
		RSYS, 0
		*GET, ncount, NODE,, COUNT
		
		nmin = 0
		
		*CFOPEN, '../../%Scenario%_CS', forces
		*DO, i, 1, ncount
			*GET, iN, NODE, nmin, NXTH
			*GET, val_FX,NODE, iN, FMAG, X
			*GET, val_FY,NODE, iN, FMAG, Y
			*GET, val_FZ,NODE, iN, FMAG, Z
			nmin = iN
			
			*VWRITE, 'F,', iN, ',FX,', val_FX
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FY,', val_FY 
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FZ,', val_FZ
(A4, F13.1, A4, F13.1)
		*ENDDO

		*CFCLOSE



		*IF, ARG4, EQ, 0, THEN
		/COPY, '../../%Scenario%_TF', forces, , '../../../../MAG_INPUT/V3/15MA/%Scenario%_TF', forces
		/COPY, '../../%Scenario%_PF', forces, , '../../../../MAG_INPUT/V3/15MA/%Scenario%_PF', forces
		/COPY, '../../%Scenario%_CS', forces, , '../../../../MAG_INPUT/V3/15MA/%Scenario%_CS', forces
		*ELSEIF, ARG4, EQ, 1, THEN
		/COPY, '../../%Scenario%_TF', forces, , '../../../../MAG_INPUT/V3/5MA/%Scenario%_TF', forces
		/COPY, '../../%Scenario%_PF', forces, , '../../../../MAG_INPUT/V3/5MA/%Scenario%_PF', forces
		/COPY, '../../%Scenario%_CS', forces, , '../../../../MAG_INPUT/V3/5MA/%Scenario%_CS', forces
		*ENDIF

	!===============================================================================
	! SAVE DB
	!
	SAVE

/EOF