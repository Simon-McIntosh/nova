!===============================================================================
!===============================================================================
!===============================================================================
!
! GENERATE MECHANICAL MODEL
!
!===============================================================================
!===============================================================================
!
!=============================================================================
! FEM GENERATION
!
/prep7

!===========================================================================
! Deactivate shape test on elems
!
SHPP, OFF

!===========================================================================
!===========================================================================
! DELETE UNUSEFUL COMPONENTS
!===========================================================================
!===========================================================================


!===========================================================================
! MAGNETIC WP
!
ESEL, NONE
NSEL, NONE
CMSEL, S, WINDING_PACK
NSLE, S
EDELE, ALL
NDELE, ALL
ALLSEL,ALL

!===========================================================================
! TOROIDAL CONSTRAINT EQUATIONS FOR SBOLTS
!
ESEL, NONE
NSEL, NONE
CMSEL, S, SB_KY
NSLE, S
CEDELE, ALL
EDELE, ALL
NDELE, ALL

ESEL, NONE
NSEL, NONE

!===============================================================================
!===============================================================================
! DEFINE LOCAL COORDINATE SYSTEMS FOR WP
!===============================================================================
!===============================================================================

!===========================================================================
!CREATE TF NODES FOR SOURC36
!
N,  43,           1.697,             0.0,          -3.951
N,  42,        	  4.939,             0.0,          -4.009		! ADJUSTED - NO TANGENZA
N,  41,          5.3344,             0.0,         -3.1113
N,  40,             4.2,             0.0,           0.029
N,  39,            4.24,             0.0,           0.029
N,  36, 3.9838056878901,             0.0, -6.024863203431
N,  35, 6.4815771440832,             0.0, -6.110789979378
N,  34, 10.750008583169,             0.0,  0.027322001548
N,  33, 6.5001278457297,             0.0, 6.1340828568965
N,  38,          5.3344,             0.0,          3.1113
N,  37,           4.939,             0.0,           4.009
N,  32, 4.2017937633796,             0.0, 6.1461381367233
N,  31,           2.697,             0.0,           4.009
N,  30,           2.697,             0.0,          -3.951

!===========================================================================
!CREATE TF CYCLIC NODES FOR SOURC36
!
CSYS, 1
NGEN, nCoil_MAG, 20, 30, 44, 1, , 20, ,
CSYS, 0

!===========================================================================
!CREATE PF NODES FOR SOURC36
!
N,      1,       0.000, 3.954, 7.616
N,     11,       3.954, 0.000, 7.616
N,     21,       0.000, 0.000, 7.616
N,      2,       0.000, 8.310, 6.579
N,     12,       8.310, 0.000, 6.579
N,     22,       0.000, 0.000, 6.579
N,      3,       0.000,12.028, 3.304
N,     13,      12.028, 0.000, 3.304
N,     23,       0.000, 0.000, 3.304
N,      4,       0.000,11.999, -2.221
N,     14,      11.999, 0.000, -2.221
N,     24,       0.000, 0.000, -2.221
N,      5,       0.000, 8.415, -6.728
N,     15,       8.415, 0.000, -6.728
N,     25,       0.000, 0.000, -6.728
N,      6,       0.000, 4.369, -7.470
N,     16,       4.369, 0.000, -7.470
N,     26,       0.000, 0.000, -7.470

!===========================================================================
!CREATE CS NODES FOR SOURC36
!
N,	1100,	 0.000,	1.678,	 5.508
N,	1101,	 1.678,	0.000,	 5.508
N,	1102,	 0.000,	0.000,	 5.508
N,	1103,	 0.000,	1.678,	 3.316
N,	1104,	 1.678,	0.000,	 3.316
N,	1105,	 0.000,	0.000,	 3.316
N,	1106,	 0.000,	1.678,	 1.124
N,	1107,	 1.678,	0.000,	 1.124
N,	1108,	 0.000,	0.000,	 1.124
N,	1109,	 0.000,	1.678,	-1.029
N,	1110,	 1.678,	0.000,	-1.029
N,	1111,	 0.000,	0.000,	-1.029
N,	1112,	 0.000,	1.678,	-3.227
N,	1113,	 1.678,	0.000,	-3.227
N,	1114,	 0.000,	0.000,	-3.227
N,	1115,	 0.000,	1.678,	-5.452
N,	1116,	 1.678,	0.000,	-5.452
N,	1117,	 0.000,	0.000,	-5.452

!===========================================================================
!CREATE PLASMA NODES FOR SOURC36
!
N,     17,       1.080699433741, 6.1289510510461, 0.0
N,      7,      -1.080699433741, 6.1289510510461, 0.0
N,     27,                  0.0,             0.0, 0.0

!===========================================================================
!CREATE COMPONENT WITH GEOMETRICAL NODES
!
CM, N_GEOM, NODE

!===========================================================================
!CREATE TF LOCAL CS BY 3 NODES LOCATION
!
nSys  = 7			! 7 Local Systems per TF coil

*DIM,sysId,ARRAY,nCoil_MAG,nSys


!===========================================================================
!LOOP ON COILS
!
*DO, i, 1, nCoil_MAG

	!--------------------------------------------------------------
	! FILL SYSTEM ID ARRAY
	!
	DELTA = ((i-1)*20)
	sysId(i,1) = 30 + DELTA
	sysId(i,2) = 37 + DELTA
	sysId(i,3) = 38 + DELTA
	sysId(i,4) = 39 + DELTA
	sysId(i,5) = 40 + DELTA
	sysId(i,6) = 41 + DELTA
	sysId(i,7) = 42 + DELTA

	!--------------------------------------------------------------
	! cartesian syst for inner leg / y-dir for curvilinear abscissa
	!
	CS, sysId(i,1), CART , 30+DELTA, 43+DELTA, 31+DELTA


	!--------------------------------------------------------------
	! cylindrical for the curved regions / y-dir for curvilinear abscissa
	!
	CS, sysId(i,2), CYLIN, 37+DELTA, 31+DELTA, 32+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,3), CYLIN, 38+DELTA, 32+DELTA, 33+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,4), CYLIN, 39+DELTA, 33+DELTA, 34+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,5), CYLIN, 40+DELTA, 34+DELTA, 35+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,6), CYLIN, 41+DELTA, 35+DELTA, 36+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,7), CYLIN, 42+DELTA, 36+DELTA, 30+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa

*ENDDO

CSYS, 0

!===========================================================================
! MODIFY OIS SHIMS ESYS TO CORRECTLY APPLY MAT PROPERTIES
!
CMSEL,S, OIS_UP_SHIMS
CMSEL,A, OIS_DOWN_SHIMS
CMSEL,A, G10_SHIMS
EMODIF, ALL, ESYS, GlobCyl

!===========================================================================
! MODIFY PF1 AND PF6 ESYS TO CORRECTLY APPLY MAT PROPERTIES
!
CMSEL,S, PF1
CMSEL,A, PF2
CMSEL,A, PF3
CMSEL,A, PF4
CMSEL,A, PF5
CMSEL,A, PF6
CMSEL,A, CSU3
CMSEL,A, CSU2
CMSEL,A, CSU1
CMSEL,A, CSL3
CMSEL,A, CSL2
CMSEL,A, CSL1
EMODIF, ALL, ESYS, GlobCyl

!===========================================================================
!===========================================================================
! MODIFY WP ESYS TO CORRECTLY APPLY MAT PROPERTIES
!

!===========================================================================
! initialize Variables
!
eFailed=0

!=======================================================================
! TF D-SHAPE centerline Geometrical data (to isolate inner leg from outer leg arcs)
!
RefRadiusUP	= 4.3
RefRadiuslow	= 3.6
RefZpos   	= 4.079
RefZneg   	= -4.303
jSys		= -1E-30

!===========================================================================
! Loop on Coils
!

*DO, k, 1, nCoil_MECH

	!===========================================================================
	! Select components
	!
	ESEL, NONE
	CMSEL, NONE
	NSEL, NONE
	CMSEL, S, E_WP_%k%
	CMSEL, A, E_WP_JOINT_%k%
	NSLE, S

	!===========================================================================
	! Get ELEM numbers
	!
	*GET,nE,ELEM,,COUNT
	*GET,iE,ELEM,,NUM,MIN
	NSEL, NONE
	ESEL, NONE
	CMSEL, NONE

	!===========================================================================
	! LOOP ON ELEMENTS
	!
	*DO,i,1,nE

		NSEL, NONE
		ESEL, NONE
		ESEL, S, ELEM, , iE

		!===========================================================================
		! FIND correct Local Coordinate System
		!
		yMin  = 1.0E30
		CSYS, 11
		*GET, rELEM, ELEM, iE, CENT, X		! Centroid X local of the iE elem in global cylindrical CS
		*GET, zELEM, ELEM, iE, CENT, Z		! Centroid X local of the iE elem in global cylindrical CS


		!===========================================================================
		! inner leg OR FIRST UPPER ARCS
		!
		*IF, rELEM, LT, RefRadiusUP, AND, zELEM, GE, 0.0, THEN

			!===========================================================================
			! inner leg
			!
			*IF, zELEM, LE, RefZpos, AND, zELEM, GE, RefZneg, THEN

				jSys = sysId(k, 1)

			!===========================================================================
			! first two arcs
			!
			*ELSE
				CSYS,sysId(k,2)
				*GET, yC1, ELEM, iE, CENT, Y		! Centroid y local of the iE elem

				CSYS,sysId(k,7)
				*GET, yC2, ELEM, iE, CENT, Y		! Centroid y local of the iE elem

				*IF,yC1,GE,0.0,AND,yC2,LT,0.0,THEN
					jSys = sysId(k,2)

				*ELSEIF,yC2,GE,0.0,AND,yC1,LT,0.0,THEN
					jSys = sysId(k,7)

				*ELSE
					*IF,yC2,GT,yC1,THEN
						jSys = sysId(k,2)

					*ELSE,
						jSys = sysId(k,7)
					*ENDIF

				*ENDIF
			*ENDIF

		!===========================================================================
		! inner leg OR FIRST LOWER ARCS
		!
		*ELSEIF, rELEM, LT, RefRadiusLOW, AND, zELEM, LE, 0.0, THEN

			!===========================================================================
			! inner leg
			!
			*IF, zELEM, LE, RefZpos, AND, zELEM, GE, RefZneg, THEN

				jSys = sysId(k, 1)

			!===========================================================================
			! first two arcs
			!
			*ELSE
				CSYS,sysId(k,2)
				*GET, yC1, ELEM, iE, CENT, Y		! Centroid y local of the iE elem

				CSYS,sysId(k,7)
				*GET, yC2, ELEM, iE, CENT, Y		! Centroid y local of the iE elem

				*IF,yC1,GE,0.0,AND,yC2,LT,0.0,THEN
					jSys = sysId(k,2)

				*ELSEIF,yC2,GE,0.0,AND,yC1,LT,0.0,THEN
					jSys = sysId(k,7)

				*ELSE
					*IF,yC2,GT,yC1,THEN
						jSys = sysId(k,2)

					*ELSE,
						jSys = sysId(k,7)
					*ENDIF

				*ENDIF
			*ENDIF

		!===========================================================================
		! OUTER LEG
		!
		*ELSE

			*DO,j,3,6
				CSYS,sysId(k,j)
				*GET, yC, ELEM, iE, CENT, Y		! Centroid y local of the iE elem
				*IF,yC,GE,0.0,AND,yC,LT,yMin,THEN
					jSys = sysId(k,j)
					yMin = yC
				*ENDIF
			*ENDDO

		*ENDIF
		!===========================================================================
		! evaluate director cosines to modify elem CS0
		!
		*IF,jSys,GT,0,THEN

			EMODIF, ALL, ESYS, jSys

		*ELSE
			eFailed=eFailed+1

		*ENDIF

		CMSEL, S, E_WP_%k%
		CMSEL, A, E_WP_JOINT_%k%
		*GET,iEnew,ELEM,iE,NXTH
		iE=iEnew
		jSys = -1E-30
	*ENDDO
*ENDDO

!===========================================================================
! DELETE WP CONTACT SURFACE (ONLY WP SIDE) WILL BE ADDED NEW AT THE END OF FEM GEN
ESEL, S, MAT,, 2
NSLE
ESLN
ESEL, U, MAT,, 2		! SELECT AND DELETE CONTACT AND TARGET ELEMENTS
EDELE, ALL

ESEL, S, REAL,, 1101
ESEL, R, TYPE,, 10		! SELECT AND DELETE TARGET ELEMENTS
EDELE, ALL

!===========================================================================
! CORRECT MISTAKE, SOME ELEMENTS HAVE WRONG ESYS IN WINDING PACK
! CORRECT MISTAKE, WRONG RADIAL NODAL POSITION
CSYS, 1
*DO, i, 1, nCoil_MECH
	DELTA = ((i-1)*20)
	CMSEL, S, E_WP_%i%
	ESEL, R, CENT, X, 4.13145
	ESEL, R, CENT, Z, -10,0
	jSys = 41+DELTA
	EMODIF, ALL, ESYS, jSys

	CMSEL, S, E_WP_%i%
	ESEL, R, CENT, X, 4.21559
	ESEL, R, CENT, Z, -10,0
	jSys = 41+DELTA
	EMODIF, ALL, ESYS, jSys

	CMSEL, S, E_WP_%i%
	ESEL, R, CENT, X, 4.0671
	ESEL, R, CENT, Z, -6.1481
	jSys = 41+DELTA
	EMODIF, ALL, ESYS, jSys

	CMSEL, S, E_WP_%i%
	ESEL, R, CENT, X, 4.00577
	ESEL, R, CENT, Z, -6.284
	jSys = 41+DELTA
	EMODIF, ALL, ESYS, jSys

	CMSEL, S, E_WP_%i%
	ESEL, R, CENT, X, 4.21777
	ESEL, R, CENT, Z, 0,10
	jSys = 37+DELTA
	EMODIF, ALL, ESYS, jSys

	CMSEL, S, E_WP_%i%
	NSLE
	NSEL, R, LOC, Z,  -6.6679
	nmin = 0
	*GET, ncount, NODE, , COUNT
	*DO, j, 1, ncount
		*GET, nN, NODE, nmin, NXTH
		*GET, nNX, NODE, nN, LOC, X

		NewX = 5.30
		NewZ = -6.632
		NMODIF, nN, NewX, , NewZ
		nmin = nN
	*ENDDO


	CSYS,1
	CMSEL, S, E_WP_%i%
	NSLE
	NSEL, R, LOC, X, 7.2377
	NSEL, R, LOC, Z, -6.1527
	nmin = 0
	*GET, ncount, NODE, , COUNT
	*DO, j, 1, ncount
		*GET, nN, NODE, nmin, NXTH
		*GET, nNX, NODE, nN, LOC, X

		NewX = 7.31
		NewZ = -6.10
		NMODIF, nN, NewX, , NewZ
		nmin = nN
	*ENDDO

*ENDDO

CSYS, 0

!=======================================================================
! MODIFY ESYS FOR PRECOPRESSION RING
!
CMSEL, S, PRECOMPRESSION_RING
EMODIF, ALL, ESYS, GlobCyl

!===========================================================================
! MODIFY PCR RING TO SOLID SHELL 190 ELEMENTS WITH X AXIS IN TOROIDAL DIRECTION
ET, 15, 190
ESEL, S, MAT,, 3
NSLE
ESYS, GlobCyl
EMODIF, ALL, TYPE, 15
EORIENT, 15, NEGX

!===========================================================================
!===========================================================================
! DEFINE AND ASSIGNE SECTIONS FOR BOLTS AND SHEAR KEYS LINKS
!===========================================================================
!===========================================================================

!===========================================================================
! DEFINE SECTIONS
!
SECTYPE, S_PF_ROD, BEAM, CSOLID
SECDATA, 0.028, 8, 2

SECTYPE, S_CS_ROD, BEAM, CSOLID
SECDATA, 0.035, 8, 2

SECTYPE, S_DOWELL_ROD, BEAM, CSOLID
SECDATA, 0.015, 8, 2

SECTYPE, S_TOP_CL_BOLTS, BEAM, CSOLID
SECDATA, 0.04, 8, 2

SECTYPE, S_TOP_IN_BOLTS, BEAM, CSOLID
SECDATA, 0.03, 8, 2

SECTYPE, S_BOT_CL_BOLTS, BEAM, CSOLID
SECDATA, 0.0425, 8, 2

SECTYPE, S_BOT_PINS, BEAM, CSOLID
SECDATA, 0.030, 8, 2

!===========================================================================
! DEFINE SECTIONS FOR OIS PINS
!
SECTYPE, S_OIS_M120, LINK
SECDATA, 0.01134,

SECTYPE, S_OIS_M160, BEAM, CSOLID
SECDATA, 0.080,

!===========================================================================
! ASSIGN SECTIONS FOR BOLTS
!
CMSEL, S, PF1_RODS
CMSEL, A, PF2_RODS
CMSEL, A, PF3_RODS
CMSEL, A, PF4_RODS
CMSEL, A, PF5_RODS
CMSEL, A, PF6_RODS
EMODIF, ALL, SECNUM, S_PF_ROD

CMSEL, S, CS_BEAM
EMODIF, ALL, SECNUM, S_CS_ROD

CMSEL, A, PF34_BEAM
EMODIF, ALL, SECNUM, S_DOWELL_ROD

CMSEL, S, GS_TOP_CLAMPING_BOLTS
EMODIF, ALL, SECNUM, S_TOP_CL_BOLTS

CMSEL, S, GS_TOP_INSULATED_BOLTS
EMODIF, ALL, SECNUM, S_TOP_IN_BOLTS

CMSEL, S, GS_BOTTOM_CLAMPING_BOLTS
EMODIF, ALL, SECNUM, S_BOT_CL_BOLTS

CMSEL, S, GS_BOTTOM_PINS
EMODIF, ALL, SECNUM, S_BOT_PINS

!===========================================================================
! ASSIGN SECTIONS FOR OIS PINS
!
CMSEL, S, OIS_DOWN_M160
CMSEL, A, OIS_UP_M160
EMODIF, ALL, SECNUM, S_OIS_M160

CMSEL, S, OIS_DOWN_M120
CMSEL, A, OIS_UP_M120
EMODIF, ALL, SECNUM, S_OIS_M120

!===========================================================================
! MODIFY PF RODS HEAD TO BEAM
!
CMSEL, S, PF_RODS_HEAD
EMODIF, ALL, TYPE, ET_BEAM
EMODIF, ALL, SECNUM, S_PF_ROD

!===========================================================================
!===========================================================================
! DELETE UNUSUED NODE
!===========================================================================
!===========================================================================
CMSEL, S, N_GEOM
NDELE, ALL

ALLSEL,ALL

!===========================================================================
!===========================================================================
! BUILD CP FOR PF34SUPPORT (DOWELL) -> UY, UZ, ROTZ
!===========================================================================
!===========================================================================
!
ESEL, NONE
NSEL, NONE
CMSEL, S, PF34_BEAM
NSLE,S
EDELE, ALL
NDELE, ALL

*DO, i, 1, nCoil_MECH

	NSEL, NONE
	ESEL, NONE
	CMSEL, S, N_PF34_S1_%i%
	CMSEL, A, N_PF34_S2_%i%
	CSYS, GlobCyl
	NROTAT, ALL
	CSYS, 0
	NSEL, NONE
	ESEL, NONE
	!==================================================================
	! RBE3
	!
	CMSEL, S, N_PF34_S1_%i%
	iN=NDNEXT(0)
	*DO, p, 1, 9
		sX=NX(iN)
		sY=NY(iN)
		sZ=NZ(iN)
		CMSEL, S,  N_PF34_S2_%i%
		iNs=NODE(sX, sY, sZ)
		CMSEL, A, N_PF34_S1_%i%
		CP, NEXT, UY, iN, iNs
		CP, NEXT, UZ, iN, iNs
		CMSEL, S, N_PF34_S1_%i%
		iNnew=NDNEXT(iN)
		iN=iNnew
	*ENDDO
*ENDDO


!===========================================================================
!===========================================================================
! BUILD MPC FOR CS -> UX, UY, ROTX, ROTZ
!===========================================================================
!===========================================================================
!
*DO, i, 1, nCoil_MECH, 2

	NSEL, NONE
	ESEL, NONE
	CMSEL, S, N_CS_M1_%i%
	nM1=NDNEXT(0)
	CMSEL, S, N_CS_M2_%i%
	nM2=NDNEXT(0)
	CMSEL, A, N_CS_M1_%i%
	CMSEL, A, N_CS_S1_%i%
	CMSEL, A, N_CS_S2_%i%
	CSYS, GlobCyl
	NROTAT, ALL
	CSYS, 0
	NSEL, NONE
	ESEL, NONE

	CMSEL, S, N_CS_M1_%i%
	CMSEL, A, N_CS_S1_%i%
	RBE3, nM1, UX, ALL
	RBE3, nM1, UY, ALL
	RBE3, nM1, UZ, ALL
	NSEL, NONE

	CMSEL, S, N_CS_M2_%i%
	CMSEL, A, N_CS_S2_%i%
	RBE3, nM2, UX, ALL
	RBE3, nM2, UY, ALL
	RBE3, nM2, UZ, ALL
	NSEL, NONE

*ENDDO


!===========================================================================
!===========================================================================
! APPLY PRET ON GRAVITY SUPPORT BOLTS AS AN INITIALE STRAIN STATE TO SIMULATE PRET
!===========================================================================
!===========================================================================

!===========================================================================
! DEFINE INITIAL STATE FOR BOLTS - PRETENSIONING
!
INISTATE, SET, CSYS, -2		! CONSIDER ELEMENTAL SYSTEM
INISTATE, SET, DTYP, EPEL

!===========================================================================
! TOP CLAMPING BOLTS (M80) F PRET = 0.79 [MN]
! FK 15.06.2018 Pret changed to 0.52 [MN]
!
CMSEL, S, GS_TOP_CLAMPING_BOLTS
*GET,nE,ELEM,,COUNT
*GET,iE,ELEM,,NUM,MIN

*DO, i, 1, nE
	ESEL, S, ELEM, , iE
	INISTATE, DEFINE, iE, , , ,  5.97E-04
	CMSEL, S, GS_TOP_CLAMPING_BOLTS
	*GET,iEnew,ELEM,iE,NXTH
	iE=iEnew
*ENDDO


!===========================================================================
! TOP INSULATED BOLTS (M60) F PRET = 0.43 [MN]
! FK 15.06.2018 Pret changed to 0.32 [MN]
!
CMSEL, S, GS_TOP_INSULATED_BOLTS
*GET,nE,ELEM,,COUNT
*GET,iE,ELEM,,NUM,MIN

*DO, i, 1, nE
	ESEL, S, ELEM, , iE
	INISTATE, DEFINE, iE, , , ,  6.08E-04
	CMSEL, S, GS_TOP_INSULATED_BOLTS
	*GET,iEnew,ELEM,iE,NXTH
	iE=iEnew
*ENDDO

!===========================================================================
! BOTTOM CLAMPING BOLTS (M85) F PRET = 3.54 [MN]
! FK 15.06.2018 Pret changed to 2.45 [MN]
!
CMSEL, S, GS_BOTTOM_CLAMPING_BOLTS
*GET,nE,ELEM,,COUNT
*GET,iE,ELEM,,NUM,MIN

*DO, i, 1, nE
	ESEL, S, ELEM, , iE
	INISTATE, DEFINE, iE, , , , 2.36E-03
	CMSEL, S, GS_BOTTOM_CLAMPING_BOLTS
	*GET,iEnew,ELEM,iE,NXTH
	iE=iEnew
*ENDDO

!===========================================================================
! BOTTOM PINS (M60) F PRET = 1.66 [MN]
! FK 15.06.2018 Pret changed to 1.21 [MN]
!
CMSEL, S, GS_BOTTOM_PINS
*GET,nE,ELEM,,COUNT
*GET,iE,ELEM,,NUM,MIN

*DO, i, 1, nE
	ESEL, S, ELEM, , iE
	INISTATE, DEFINE, iE, , , , 2.19E-03
	CMSEL, S, GS_BOTTOM_PINS
	*GET,iEnew,ELEM,iE,NXTH
	iE=iEnew
*ENDDO

!===========================================================================
!===========================================================================
! APPLY PRET ON OIS PINS AS AN INITIALE STRAIN STATE TO SIMULATE PRET
!===========================================================================
!===========================================================================

INISTATE, SET, CSYS, -2
INISTATE, SET, DTYP, EPEL

!===========================================================================
! M160 PINS
!
CMSEL, S, OIS_DOWN_M160
CMSEL, A, OIS_UP_M160
*GET,nE,ELEM,,COUNT
*GET,iE,ELEM,,NUM,MIN

*DO, i, 1, nE
	ESEL, S, ELEM, , iE
	INISTATE, DEFINE, iE, , , ,0.65E-03
	CMSEL, S, OIS_DOWN_M160
	CMSEL, A, OIS_UP_M160
	*GET,iEnew,ELEM,iE,NXTH
	iE=iEnew
*ENDDO

!===========================================================================
! M120 PINS
!
CMSEL, S, OIS_DOWN_M120
CMSEL, A, OIS_UP_M120
*GET,nE,ELEM,,COUNT
*GET,iE,ELEM,,NUM,MIN

*DO, i, 1, nE
	ESEL, S, ELEM, , iE
	INISTATE, DEFINE, iE, , , ,0.09E-02
	CMSEL, S, OIS_DOWN_M120
	CMSEL, A, OIS_UP_M120
	*GET,iEnew,ELEM,iE,NXTH
	iE=iEnew
*ENDDO


!===========================================================================
! MPC184 LINK KEYOPT FOR SHEAR KEYS
!
KEYOPT, ET_MPC184, 2, 1			! KOPT2=1 LAGRANGE MULTIPLIER TO ALLOW THERMAL EXPANSION ON MPC184

!===========================================================================
!===========================================================================
! CREATE PCR BOLTS PRETENSIONING SECTIONS
!===========================================================================
!===========================================================================

!===============================================================================
! Create and mesh the pretension section
!
CMSEL,NONE
nBOLT = 2*nCoil_MECH

*DO, i, 1, 8
	*DO, j, 1, nBOLT

		ID = j+(36*(i-1))

		ESEL, NONE
		NSEL, NONE
		CMSEL,S,E_PRET_%ID%                                                     	  	! select element set to be "cut"
		NSLE, S
		nPRET = NDNEXT(0)
		nPRET = NDNEXT(nPRET)
		nPRET = NDNEXT(nPRET)
		nPRET = NDNEXT(nPRET)
		nPRET = NDNEXT(nPRET)
		nPRET = NDNEXT(nPRET)
		nPRET = NDNEXT(nPRET)
		PSMESH, ID, PRET%ID%, , ALL,, GlobCyl, X, , nPRET, , ,E_PRET%ID%, N_PRET%ID%      	! cut !!
	*ENDDO
*ENDDO
ALLSEL,ALL

!===========================================================================
!===========================================================================
! CREATE CS  PRETENSIONING SECTIONS
!===========================================================================
!===========================================================================

!===============================================================================
! Create and mesh the pretension section
!
CMSEL,NONE

*DO, i, 1, nCoil_MECH
	ID = ID+i
	ESEL, NONE
	NSEL, NONE
	CMSEL,S,E_PRET_CS_%i%
	NSLE, S
	nPRET = NDNEXT(0)
	nPRET = NDNEXT(nPRET)
	nPRET = NDNEXT(nPRET)
	nPRET = NDNEXT(nPRET)
	nPRET = NDNEXT(nPRET)
	nPRET = NDNEXT(nPRET)
	nPRET = NDNEXT(nPRET)
	PSMESH, ID, PRET%ID%, , ALL,, GlobCyl, Z, CS_PLATE_KDIR, , , ,E_PRET_CS%ID%, N_PRET_CS%ID%
*ENDDO

!===========================================================================
!===========================================================================
! ADDED COMMANDS FOR NEW ELECTRO-MAGNETIC CALCULATION
!===========================================================================
!===========================================================================
! DEFINE LAYER FOR GENERATION OF DOUBLE NODE
! DEFINE LAYER FOR WP
*AFUN,DEG
CSYS, GlobCyl
*DO,i,1,nCoil_MAG
	CMSEL,S,E_WP_%i%
	NSLE
	NSEL, R, LOC, X, 0, 4
	NSEL, R, LOC, Z, -0.05, 0.05
	CM, wplayer_TF%i%, NODE
*ENDDO

! DEFINE LAYER FOR CS
CSYS, 0
*DO,i,1,nCoil_CS+1
	*IF, i, GT, 4, THEN
		CMSEL, S, CSL%i-4%
	*ELSE
		*IF,i,EQ, 4, THEN
		CMSEL, S, CSU3
		*ELSE
		CMSEL, S, CSU%i%
		*ENDIF
	*ENDIF
	NSLE
	*IF, i , EQ, 1, THEN
		NSEL, R, LOC, Z, 0.0275
		tmp%i% = 0.0275
	*ENDIF
	*IF, i, EQ, 2, THEN
		NSEL, R, LOC, Z, 2.2200
		tmp%i% = 2.2200
	*ENDIF
	*IF, i, EQ, 3, THEN
		NSEL, R, LOC, Z, 4.4120
		tmp%i% = 4.412
	*ENDIF
	*IF, i, EQ, 5, THEN
		NSEL, R, LOC, Z, -2.1640
		tmp%i% = -2.164
	*ENDIF
	*IF, i, EQ, 4, THEN
		NSEL, R, LOC, Z, 6.605
		tmp%i% = 6.605
	*ENDIF
	*IF, i, EQ, 6, THEN
		NSEL, R, LOC, Z, -4.3560
		tmp%i% = -4.356
	*ENDIF

	*IF, i, EQ, 7, THEN
		NSEL, R, LOC, Z, -6.5480
		tmp%i% = -6.5480
	*ENDIF

	*IF, i, LE, 4, THEN
		CM, wplayer2_CSU%i%, NODE
	*ELSE
		CM, wplayer2_CSL%i-4%, NODE
	*ENDIF
*ENDDO

!===========================================================================
! selection of layer for generation of double nodes
! DEFINE LAYER FOR CS
ALLSEL
*GET, maxn, NODE,, NUM, MAX
counter =1
CSYS, 0
*DO, i, 1, nCoil_CS+1
	*IF, i, LE, 4, THEN
		CMSEL, S, wplayer2_CSU%i%
	*ELSE
		CMSEL, S, wplayer2_CSL%i-4%
	*ENDIF
	ESLN
	NSLE
	NSEL, R, LOC, Z,-0.1+tmp%i%,1+tmp%i%
	ESLN, R, 1
	CM, tosel, NODE
	CMSEL, S, tosel
	emin = 0
	zzn=
	*DIM,zzn,ARRAY,8
	*GET, ecount, ELEM, , COUNT
	*GET, elnum, ELEM, emin, NXTH
	*DO, ncnt, 1, ecount
		*IF, i, LE, 4, THEN
			CMSEL, S, wplayer2_CSU%i%
		*ELSE
			CMSEL, S, wplayer2_CSL%i-4%
		*ENDIF
		*DO,k,1,8
			zzn(k)= NELEM(elnum,k)
			*IF, NSEL(zzn(k)), EQ, 1, THEN
				counter = counter +1
				*GET, xloc, NODE, zzn(k), LOC, X
				*GET, yloc, NODE, zzn(k), LOC, Y
				*GET, zloc, NODE, zzn(k), LOC, Z
				*GET, xyloc, NODE, zzn(k), ANG, XY
				*GET, yzloc, NODE, zzn(k), ANG, YZ
				*GET, zxloc, NODE, zzn(k), ANG, ZX
				N, maxn+counter, xloc, yloc, zloc, xyloc, yzloc, zxloc
				zzn(k)=maxn+counter
			*ENDIF
		*ENDDO
		CMSEL, A, tosel
		EMODIF, elnum, -1, zzn(1), zzn(2), zzn(3), zzn(4), zzn(5), zzn(6), zzn(7), zzn(8)
		emin = elnum
		*GET, elnum, ELEM, emin, NXTH
	*ENDDO
	*IF, i, LE, 4, THEN
		*IF, i, EQ, 4, THEN
		CMSEL, S, CSU3
		*ELSE
		CMSEL, S, CSU%i%
		*ENDIF
	*ELSE
		CMSEL, S, CSL%i-4%
	*ENDIF
	NSLE
	nummrg,node,0.001
*ENDDO

! DEFINE LAYER FOR CS
CSYS, 0
*DO,i,1,nCoil_CS
	*IF, i, GT, 3, THEN
		CMSEL, S, CSL%i-3%
	*ELSE
		CMSEL, S, CSU%i%
	*ENDIF
	NSLE
	NSEL, R, LOC, X, 0, 100
	NSEL, R, LOC, Y, -0.01, 0.05
	*IF, i, LE, 3, THEN
		CM, wplayer_CSU%i%, NODE
	*ELSE
		CM, wplayer_CSL%i-3%, NODE
	*ENDIF
*ENDDO

!===========================================================================
! selection of layer for generation of double nodes
! DEFINE LAYER FOR WP
ALLSEL
*GET, maxn, NODE,, NUM, MAX
counter = 0
CSYS, 0
*DO, i, 1, nCoil_MECH
	CMSEL, S, wplayer_TF%i%
	CM, low1_TF%i%, NODE
	ESLN
	NSLE
	NSEL, R, LOC, Z,-0.1,1.
	ESLN, R, 1
	CM, tosel, NODE
	emin = 0
	zzn=
	*DIM,zzn,ARRAY,8
	*GET, ecount, ELEM, , COUNT
	*GET, elnum, ELEM, emin, NXTH
	*DO, ncnt, 1, ecount
		CMSEL, S, wplayer_TF%i%
		*DO,k,1,8
			zzn(k)= NELEM(elnum,k)
			*IF, NSEL(zzn(k)), EQ, 1, THEN
				counter = counter +1
				*GET, xloc, NODE, zzn(k), LOC, X
				*GET, yloc, NODE, zzn(k), LOC, Y
				*GET, zloc, NODE, zzn(k), LOC, Z
				*GET, xyloc, NODE, zzn(k), ANG, XY
				*GET, yzloc, NODE, zzn(k), ANG, YZ
				*GET, zxloc, NODE, zzn(k), ANG, ZX
				N, maxn+counter, xloc, yloc, zloc+0.0001, xyloc, yzloc, zxloc
				zzn(k)=maxn+counter
			*ENDIF
		*ENDDO
		CMSEL, A, tosel
		EMODIF, elnum, -1, zzn(1), zzn(2), zzn(3), zzn(4), zzn(5), zzn(6), zzn(7), zzn(8)
		emin = elnum
		*GET, elnum, ELEM, emin, NXTH
	*ENDDO
	CMSEL, S, tosel
	CMSEL, U, low1_TF%i%
	ESLN
	NSLE
	NSEL, R, LOC, Z, 0,0.1
	CM, upp1_TF%i%, NODE
	nummrg,node,0.002
*ENDDO

! DEFINE LAYER FOR CS
ALLSEL
*GET, maxn, NODE,, NUM, MAX
counter = 0
CSYS, 0
*DO, i, 1, nCoil_CS
	*IF, i, GT, 3, THEN
		CMSEL, S, wplayer_CSL%i-3%
		CM, low1_CSL%i-3%, NODE
	*ELSE
		CMSEL, S, wplayer_CSU%i%
		CM, low1_CSU%i%, NODE
	*ENDIF
	ESLN
	NSLE
	NSEL, R, LOC, Y,-0.01,1.
	ESLN, R, 1
	CM, tosel, NODE
	emin = 0
	zzn=
	*DIM,zzn,ARRAY,8
	*GET, ecount, ELEM, , COUNT
	*GET, elnum, ELEM, emin, NXTH
	*DO, ncnt, 1, ecount
		*IF, i, GT, 3, THEN
			CMSEL, S, wplayer_CSL%i-3%
		*ELSE
			CMSEL, S, wplayer_CSU%i%
		*ENDIF
		*DO,k,1,8
			zzn(k)= NELEM(elnum,k)
			*IF, NSEL(zzn(k)), EQ, 1, THEN
				counter=counter+1
				*GET, xloc, NODE, zzn(k), LOC, X
				*GET, yloc, NODE, zzn(k), LOC, Y
				*GET, zloc, NODE, zzn(k), LOC, Z
				*GET, xyloc, NODE, zzn(k), ANG, XY
				*GET, yzloc, NODE, zzn(k), ANG, YZ
				*GET, zxloc, NODE, zzn(k), ANG, ZX
				N, maxn+counter, xloc, yloc+0.0001, zloc, xyloc, yzloc, zxloc
				zzn(k)=maxn+counter
			*ENDIF
		*ENDDO
		CMSEL, A, tosel
		EMODIF, elnum, -1, zzn(1), zzn(2), zzn(3), zzn(4), zzn(5), zzn(6), zzn(7), zzn(8)
		emin = elnum
		*GET, elnum, ELEM, emin, NXTH
	*ENDDO
	CMSEL, S, tosel
	*IF, i, GT, 3, THEN
		CMSEL, U, low1_CSL%i-3%
	*ELSE
		CMSEL, U, low1_CSU%i%
	*ENDIF
	ESLN
	NSLE
	NSEL, R, LOC, Y, 0,0.035
	*IF, i, GT, 3, THEN
		CM, upp1_CSL%i-3%, NODE
	*ELSE
		CM, upp1_CSU%i%, NODE
	*ENDIF
	nummrg,node,0.002
*ENDDO

!===========================================================================
! Equivalent length of all Central Solenoid ELEMNTES in toroidal direction
CSYS,1
*AFUN,DEG
nETor = 126
EAngle = 360 / nETor
*DO, i, 1, 6
	*IF, i, LE, 3, THEN
		CMSEL, S,upp1_CSU%4-i%
	*ELSE
		CMSEL, S, upp1_CSL%i-3%
	*ENDIF
	! 126 ELEMENTS In toroidial direction
	CM,ntmp1,NODE
	*DO, j, 1, nETor-1
		nAngle = EAngle*j
		ESLN
		NSLE
		*IF, j, GT, 1, THEN
			CMSEL, U, etmp1
		*ENDIF
		CMSEL, U, ntmp1
		CM, ntmp2, NODE
		CM, etmp1, ELEM
		*GET,ncount, NODE,, COUNT
		nmin = 0
		*DO,k, 1, ncount
			*GET, nN, NODE, nmin, NXTH
			NMODIF, nN, ,nAngle ,
			nmin = nN
		*ENDDO
		NSLE
		CM, ntmp1,NODE
		CMSEL, S, ntmp2
	*ENDDO
*ENDDO

!===========================================================
! MERGE NODES AT CUTTING PLANES AND WRITE OUT LORENTZ FORCES

*DO, i, 1, nCoil_CS
	*IF, i, GT, 3, THEN
		cmsel,s,upp1_CSL%i-3%
		cmsel,a,low1_CSL%i-3%
		nummrg,node,0.002
	*ELSE
		cmsel,s,upp1_CSU%i%
		cmsel,a,low1_CSU%i%
		nummrg,node,0.002
	*ENDIF
*ENDDO

!===========================================================================
! MOVE CENTRAL SOLENOID AND PF COIL TO EXCEL POSITION --- NOT IMPLEMENTED
! POSITION FEM
*DIM,POS_FEM,ARRAY,4,12
!				Zup		 Zlow	 Rin	 Rout
POS_FEM(1,1) =  6.6050,  4.4121, 1.3050, 2.0730 	! CSU3 POSITION
POS_FEM(1,2) =  4.4120,  2.2201, 1.3050, 2.0730 	! CSU2 POSITION
POS_FEM(1,3) =  2.2200,  0.0276, 1.3050, 2.0730 	! CSU1 POSITION
POS_FEM(1,4) =  0.0275, -2.1639, 1.3050, 2.0730 	! CSL1 POSITION
POS_FEM(1,5) = -2.1640, -4.3559, 1.3050, 2.0730 	! CSL2 POSITION
POS_FEM(1,6) = -4.3560, -6.5480, 1.3050, 2.0730 	! CSL3 POSITION
POS_FEM(1,7) =  8.1182,  7.1138, 3.4654, 4.4446 	! PF1 POSITION
POS_FEM(1,8) =  6.9460,  6.2120, 8.0105, 8.6095 	! PF2 POSITION
POS_FEM(1,9) =  3.7910,  2.8170, 11.670, 12.386 	! PF3 POSITION
POS_FEM(1,10) =-1.7340, -2.7080, 11.670, 12.328 	! PF4 POSITION
POS_FEM(1,11) =-6.2410, -7.2150, 7.9979, 8.8321 	! PF5 POSITION
POS_FEM(1,12) =-6.9059, -8.0341, 3.5564, 5.1376 	! PF6 POSITION

!===========================================================================
! ADD ADDITIONAL ELEMENT FOR CSU2 IN VERTICAL DIRECTION
CSYS, 0
CMSEL, S, CSU2
NSLE
*GET, ZMAX, NODE,,MXLOC, Z
ZZNEW = ZMAX-0.02
NSEL, R, LOC, Z, ZMAX-0.001, ZMAX+0.001
*GET, ncount, NODE, , COUNT
nmin = 0
nnum = 2500000
*DO, k, 1, ncount
	*GET, nN, NODE, nmin, NXTH
	*GET, XnN, NODE, nN, LOC, X
	*GET, YnN, NODE, nN, LOC, Y
	NMODIF, nN, , , ZZNEW
	nmin = nN
	N, nN+2500000, XnN, YnN, ZMAX
*ENDDO
ESEL, R, CENT, Z, ZMAX-0.4, ZMAX
CM, ETMP1, ELEM
*GET, ecount, ELEM,, COUNT
emin = 0
TYPE, 1
MAT, 25
REAL, 1
*DO, k, 1, ecount
	*GET, eN, ELEM, emin, NXTH
	ESEL, R, ELEM,, eN
	NSLE, S, POS, 5
	*GET, nN1, NODE, , NUM, MIN
	nN5 = nN1+2500000
	NSLE, S, POS, 6
	*GET, nN2, NODE, , NUM, MIN
	nN6 = nN2+2500000
	NSLE, S, POS, 7
	*GET, nN3, NODE, , NUM, MIN
	nN7 = nN3+2500000
	NSLE, S, POS, 8
	*GET, nN4, NODE, , NUM, MIN
	nN8 = nN4+2500000
	E, nN1, nN2, nN3, nN4, nN5, nN6, nN7, nN8
	emin = eN
	CMSEL, S, ETMP1
*ENDDO
CMSEL, S, CSU2
NSLE
ESLN
CM, CSU2, ELEM
EMODIF, ALL, ESYS, 11

!===========================================================================
! ADD ADDITIONAL ELEMENT FOR CSU1 IN VERTICAL DIRECTION
CSYS, 0
CMSEL, S, CSU1
NSLE
*GET, ZMAX, NODE,,MXLOC, Z
ZZNEW = ZMAX-0.02
NSEL, R, LOC, Z, ZMAX-0.001, ZMAX+0.001
*GET, ncount, NODE, , COUNT
nmin = 0
nnum = 2500000
*DO, k, 1, ncount
	*GET, nN, NODE, nmin, NXTH
	*GET, XnN, NODE, nN, LOC, X
	*GET, YnN, NODE, nN, LOC, Y
	NMODIF, nN, , , ZZNEW
	nmin = nN
	N, nN+2500000, XnN, YnN, ZMAX
*ENDDO
ESEL, R, CENT, Z, ZMAX-0.4, ZMAX
CM, ETMP1, ELEM
*GET, ecount, ELEM,, COUNT
emin = 0
TYPE, 1
MAT, 25
REAL, 1
*DO, k, 1, ecount
	*GET, eN, ELEM, emin, NXTH
	ESEL, R, ELEM,, eN
	NSLE, S, POS, 5
	*GET, nN1, NODE, , NUM, MIN
	nN5 = nN1+2500000
	NSLE, S, POS, 6
	*GET, nN2, NODE, , NUM, MIN
	nN6 = nN2+2500000
	NSLE, S, POS, 7
	*GET, nN3, NODE, , NUM, MIN
	nN7 = nN3+2500000
	NSLE, S, POS, 8
	*GET, nN4, NODE, , NUM, MIN
	nN8 = nN4+2500000
	E, nN1, nN2, nN3, nN4, nN5, nN6, nN7, nN8
	emin = eN
	CMSEL, S, ETMP1
*ENDDO
CMSEL, S, CSU1
NSLE
ESLN
CMSEL, U, CSU2
CMSEL, U, CSL1
CM, CSU1, ELEM
EMODIF, ALL, ESYS, 11

!===========================================================================
! Equivalent length of all Central Solenoid ELEMNTES in Vertical direction
CSYS,1
*DO, i, 1, 6
	*IF, i, LE, 3, THEN
		CMSEL, S, CSU%4-i%
	*ELSE
		CMSEL, S, CSL%i-3%
	*ENDIF
	NSLE
	NSEL, R, LOC, Y, 0, 1
	NSEl, R, LOC, X, POS_FEM(3,i)
	CM, TMP1, NODE
	*GET, ncount, NODE, , COUNT

	*GET, ZMAX, NODE,,MXLOC, Z
	*GET, ZMIN, NODE,,MNLOC, Z
	nmin = 0
	*DO, j, 1, ncount
		CM, TMP1, NODE
		NEXTZ = (ZMAX-ZMIN)*(j-1)/(ncount-1)
		ZZ%j%NEW = ZMAX-NEXTZ
		*GET, LOCZ, NODE,,MXLOC, Z
		NSEL, R, LOC, Z, LOCZ-0.005,LOCZ+0.005
		*GET, nNSave, NODE, nmin, NXTH
		NSLE
		NSEL, R, LOC, Z, LOCZ-0.005, LOCZ+0.005
		*GET, ncount2, NODE,, COUNT
		nmin2 = 0
		*DO, k, 1, ncount2
			*GET, nN2, NODE, nmin2, NXTH
			NMODIF, nN2, , , ZZ%j%NEW
			nmin2 = nN2
		*ENDDO
		CMSEL, S, TMP1
		NSEL, U, NODE,, nNSave
	*ENDDO
*ENDDO

!===========================================================================
! Equivalent length of all Central Solenoid ELEMNTES in radial direction
CSYS,1
*DO, i, 1, 6
	*IF, i, LE, 3, THEN
		CMSEL, S, CSU%4-i%
		TOL = 0.02
	*ELSE
		CMSEL, S, CSL%i-3%
		TOL = 0.015
	*ENDIF
	NSLE
	NSEL, R, LOC, Y, 0, 1
	NSEl, R, LOC, Z, POS_FEM(1,i)
	CM, TMP1, NODE
	*GET, ncount, NODE, , COUNT

	*GET, XMAX, NODE,,MXLOC, X
	*GET, XMIN, NODE,,MNLOC, X
	nmin = 0

	*DO, j, 1, ncount
		CM, TMP1, NODE
		NEXTX = (XMAX-XMIN)*(j-1)/(ncount-1)
		XX%j%NEW = XMIN+NEXTX
		*GET, LOCX, NODE,,MNLOC, X
		*IF, i, LE, 3, THEN
			TOL = 0.02
		*ELSE
			TOL = 0.015
		*ENDIF
		NSEL, R, LOC, X, LOCX-TOL,LOCX+TOL
		*GET, nNSave, NODE, nmin, NXTH
		NSLE
		*IF, j, GT, 1, THEN
			CMSEL, U, TMP2
			*IF, i, LE, 3, THEN
				TOL = 0.07
			*ELSE
				TOL = 0.06
			*ENDIF
		*ENDIF
		NSEL, R, LOC, X, 0, LOCX+TOL
		*GET, ncount2, NODE,, COUNT
		nmin2 = 0
		*DO, k, 1, ncount2
			*GET, nN2, NODE, nmin2, NXTH
			NMODIF, nN2, XX%j%NEW, ,
			nmin2 = nN2
		*ENDDO
		*IF, j, GT, 1, THEN
			CMSEL, A, TMP2
		*ENDIF
		CM, TMP2, NODE
		CMSEL, S, TMP1
		NSEL, U, NODE,, nNSave
	*ENDDO
*ENDDO

!===========================================================================
! FINER MESH FOR TF coil WP
!
! GENERATE DUMMY NODE TO GET SAME NODE VALUES AS IN EMAG CALCULATION
N,4767200,0,0,0
!===================================================================
CMSEL, S, WP
NSLE
CM, nWP, NODE
*DO, i, 1, 4
NSLE
ESLN
*ENDDO
CMSEL, U, WP
CMSEL, U, nWP
NDELE,ALL
EDELE, ALL


TYPE, 1
MAT, 2
*DO, i, 1, nCoil_MAG
	DELTA = ((i-1)*20)
	CMSEL, S, upp1_TF%i%
	*DO, j, 1, 72
		CM, ntmp1, NODE
		ESLN
		*IF, j, GT, 1, THEN
			*IF, j, LT, 72,THEN
				CMSEL, U, etmp1
			*ENDIF
		*ENDIF
		CM, etmp1, ELEM
		emin = 0
		*GET, nE, ELEM, emin, NXTH
		*GET, zcs, ELEM, nE, ATTR, ESYS
		CSYS, zcs
		NSLE
		CMSEL, U, ntmp1
		CM, ntmp4, NODE
		NSLE
		*GET, NYMIN, NODE, , MNLOC, Y
		*GET, NYMAX, NODE, , MXLOC, Y
		zcstmp = zcs-%DELTA%
		*IF, zcstmp, EQ, 30, THEN
			NDIST = NYMAX-NYMIN
		*ELSEIF, zcstmp,EQ, 42, THEN
			NDIST = (NYMAX-NYMIN)/15
		*ELSEIF, zcstmp,EQ, 37, THEN
			NDIST = (NYMAX-NYMIN)/10
		*ELSEIF, zcstmp,EQ, 38, THEN
			NDIST = (NYMAX-NYMIN)/10
		*ELSE
			NDIST = (NYMAX- NYMIN)/8
		*ENDIF
		*IF, NDIST, GT, 0.6, THEN		! ADD ADDITIONAL ELEMENT
			zzn=
			*DIM,zzn,ARRAY,8
			zzn2=
			*DIM,zzn2,ARRAY,8
			*GET, maxn, NODE,, NUM, MAXD
			counter = 0
			yloc = (NYMAX-NYMIN)/2+NYMIN
			emin = 0
			*GET, ecount, ELEM, , COUNT
			*DO,kk,1,ecount
				*GET, elnum, ELEM, emin, NXTH
				*DO,k,1,8

					zzn(k)= NELEM(elnum,k)
					*IF, k, GT, 4, THEN
						counter = counter +1
						zzn2(k)= NELEM(elnum,k)
						*GET, xloc, NODE, zzn(k), LOC, X
						*GET, zloc, NODE, zzn(k), LOC, Z
						*GET, xyloc, NODE, zzn(k), ANG, XY
						*GET, yzloc, NODE, zzn(k), ANG, YZ
						*GET, zxloc, NODE, zzn(k), ANG, ZX
						*IF,j,EQ,21,THEN
							xloc=xloc-0.02
						*ENDIF
						*IF,j,EQ,34,THEN
							xloc=xloc+0.025
						*ENDIF
						N, maxn+counter, xloc, yloc, zloc, xyloc, yzloc, zxloc
						zzn(k)=maxn+counter
						zzn2(k-4)=maxn+counter
						zzn2(k)= NELEM(elnum,k)
					*ENDIF
				*ENDDO
				EMODIF, elnum, -1, zzn(1), zzn(2), zzn(3), zzn(4), zzn(5), zzn(6), zzn(7), zzn(8)
				E, zzn2(1), zzn2(2), zzn2(3), zzn2(4), zzn2(5), zzn2(6), zzn2(7), zzn2(8)
				emin = elnum
			*ENDDO
			EMODIF, ALL, ESYS, zcs
			nummrg,node,0.002
		*ENDIF
		CM, etmp1, ELEM
		CMSEL, S, ntmp4
	*ENDDO
	CMSEL, S, E_WP_%i%
	NSLE
	ESLN
	CM, E_WP_%i%, ELEM
	NSLE
	nummrg,node,0.002
*ENDDO

CMSEL, S, WP
NSLE
ESLN
CM, WP, ELEM

! DELETE DUMMY NODE ================================================
NDELE, 4767200
!===================================================================

!========================================================
! CREATE BONDED CONTACT FOR WP

! Generate Contact elements
CMSEL, S, WP
NSLE
NSEL, EXT
esln
cid = 10
type, cid
mat ,10
real,1101
esurf

!===========================================================================
! CONTACT MODIFICATION REAL 1101
!
cid = 26
et,cid,173,,1,,,0
keyopt,cid,9,1
keyopt,cid,10,2
esel,s,real,,1101
esel,r,type,,9
emodif,all,type,cid
rmodif,1101,10,0.05
! SEPARATE CONTACT IN 18 SINGLE CONTACTS
tID = 10
matID = 10
cID = 26
rold = 1101
rnew = 900
MAT, matID
CSYS,1
*DO, i, 1, 18
	rnew = rnew +1
	ESEL, S, REAL, ,1101
	ESEL, R, CENT, Y, -10+(i-1)*20, 10+(i-1)*20
	EMODIF, ALL, REAL, rnew
	RMODIF, rnew, 3, 1
	RMODIF, rnew, 4, 0.1
	RMODIF, rnew, 9, 0.1E+21
	RMODIF, rnew, 10, 0.05
	RMODIF, rnew, 11, 1
	RMODIF, rnew, 12, 1
	RMODIF, rnew, 15, 1
	RMODIF, rnew, 17, 1
	RMODIF, rnew, 18, 0.5
	RMODIF, rnew, 21, 1
	RMODIF, rnew, 36, 0
*ENDDO

! CORRECT WO GEOMETRIE
CSYS,1
*DO,i,1,18
	ESEL, S, REAL, ,900+i
	ESEL, R, TYPE,,10
	NSLE
	NSEL, R, LOC, Z,  0.33,0.34
	NSEL, R, LOC, X, 11.07,11.1
	*GET,ncount,NODE,,COUNT
	nmin=0
	*DO,j,1,ncount
		*GET, nN, NODE, nmin, NXTH
		*GET, nNX, NODE, nN, LOC, X
		*GET, nNZ, NODE, nN, LOC, Z
		NewX = nNX-0.026
		NewZ = nNZ-0.002
		NMODIF, nN, NewX, , NewZ
		nmin = nN
	*ENDDO
	NSLE
	NSEL, R, LOC, Z,  0.31,0.312
	NSEL, R, LOC, X, 10.44,10.48
	*GET,ncount,NODE,,COUNT
	nmin=0
	*DO,j,1,ncount
		*GET, nN, NODE, nmin, NXTH
		*GET, nNX, NODE, nN, LOC, X
		*GET, nNZ, NODE, nN, LOC, Z
		NewX = nNX-0.024
		NewZ = nNZ-0.002
		NMODIF, nN, NewX, , NewZ
		nmin = nN
	*ENDDO
	NSLE
	NSEL, R, LOC, Z,  -6.08,-6.12
	NSEL, R, LOC, X, 7.29,7.32
	*GET,ncount,NODE,,COUNT
	nmin=0
	*DO,j,1,ncount
		*GET, nN, NODE, nmin, NXTH
		*GET, nNX, NODE, nN, LOC, X
		*GET, nNZ, NODE, nN, LOC, Z
		NewX = nNX+0.008
		NewZ = nNZ-0.025
		NMODIF, nN, NewX, , NewZ
		nmin = nN
	*ENDDO
	NSLE
	NSEL, R, LOC, Z,  -5.95,-5.93
	NSEL, R, LOC, X, 7.59,7.612
	*GET,ncount,NODE,,COUNT
	nmin=0
	*DO,j,1,ncount
		*GET, nN, NODE, nmin, NXTH
		*GET, nNX, NODE, nN, LOC, X
		*GET, nNZ, NODE, nN, LOC, Z
		NewX = nNX+0.003
		NewZ = nNZ-0.007
		NMODIF, nN, NewX, , NewZ
		nmin = nN
	*ENDDO
*ENDDO

!===========================================================================
! MODIFY CONTACT FOR PCR RING, CONTACT STIFFNESS FACTOR 1 (PREVIOUS 10)
! Reduce Pinball
!===========================================================================
rid = 1121
RMODIF, rid, 3, 1
RMODIF, rid, 6, 0.035

!===========================================================================
! BCs
!===========================================================================
! Correct Component N_GS_DOF, FK, 27.06.2018
NSEL, ALL
CSYS,0
NSEL,R,LOC,Z,-9.515,-9.505
CM, N_GS_DOF, NODE
! Reduce Contact area of GS bearing, FK, 27.06.2018
ESEL,S,REAL,,1171
ESEL,R,CENT,Z,-9.052,0
NSLE
nsel,u,loc,z,-10,-9.051
EDELE,ALL
NDELE,ALL

!========================================================
! CREATE BONDED CONTACT FOR CENTRAL SOLENOID
! Find target surface
CSYS, 1
ESEL, S, CENT, X, 0, 2.08
CMSEL, U, CSU3
CMSEL, U, CSL3
NSLE
NSEL, R, LOC, Z, 6.605
CM, TARG_U,NODE
NSLE
NSEL, R, LOC, Z, -6.5480
CM, TARG_L,NODE
CMSEL, S, CSU3
NSLE
NSEL, R, LOC, Z, 4.4120
CM, TARG_U3,NODE
CMSEL, S, CSU2
NSLE
NSEL, R, LOC, Z, 2.220
CM, TARG_U2,NODE
CMSEL, S, CSU1
NSLE
NSEL, R, LOC, Z, 0.0275
CM, TARG_U1, NODE
CMSEL, S, CSL1
NSLE
NSEL, R, LOC, Z, -2.164
CM, TARG_L1,NODE
CMSEL, S, CSL2
NSLE
NSEL, R, LOC, Z, -4.3560
CM, TARG_L2,NODE

! Redifine Contact surfaces
CMSEL, S, CSU2
NSLE
NSEL, R, LOC, Z, 4.4120
CM, wplayer2_CSU3, NODE
CMSEL, S, CSU1
NSLE
NSEL, R, LOC, Z, 2.220
CM, wplayer2_CSU2, NODE
CMSEL, S, CSL3
NSLE
NSEL, R, LOC, Z, -6.5480
CM, wplayer2_CSL3, NODE

mat,10
! CSU3
! Contact type
cid = 27
et,cid,173,,0,,,0
keyopt,cid,9,1
keyopt,cid,12,0
! Target type
tid = 28
et,tid,170,
!!!!!!!!!!!!!!!
CMSEL, S, wplayer2_CSU4
esln
rid = 4001
type, cid
real,rid
esurf
CMSEL, S, TARG_U
esln
type, tid
real,rid
esurf
RMODIF, rid, 6, 0.05
! Contact type
cid = 29
et,cid,173,,0,,,0
keyopt,cid,12,0
! Target type
tid = 30
et,tid,170,
!!!!!!!!!!!!!!!
CMSEL, S, wplayer2_CSU3
esln
rid = 4002
type, cid
real,rid
esurf
CMSEL, S, TARG_U3
esln
type, tid
real,rid
esurf

! CSU2
! Contact type
cid = 31
et,cid,173,,0,,,0
keyopt,cid,12,0
! Target type
tid = 32
et,tid,170,
!!!!!!!!!!!!!!!
CMSEL, S, wplayer2_CSU2
esln
rid = 4003
type, cid
real,rid
esurf
CMSEL, S, TARG_U2
esln
type, tid
real,rid
esurf

! CSU1
! Contact type
cid = 33
et,cid,173,,0,,,0
keyopt,cid,12,0
! Target type
tid = 34
et,tid,170,
!!!!!!!!!!!!!!!
CMSEL, S, wplayer2_CSU1
esln
rid = 4004
type, cid
real,rid
esurf
CMSEL, S, TARG_U1
esln
type, tid
real,rid
esurf

! CSL1
! Contact type
cid = 35
et,cid,173,,0,,,0
keyopt,cid,12,0
! Target type
tid = 36
et,tid,170,
!!!!!!!!!!!!!!!
CMSEL, S, wplayer2_CSL1
esln
rid = 4005
type, cid
real,rid
esurf
CMSEL, S, TARG_L1
esln
type, tid
real,rid
esurf

! CSL2
! Contact type
cid = 37
et,cid,173,,0,,,0
keyopt,cid,12,0
! Target type
tid = 38
et,tid,170,
!!!!!!!!!!!!!!!
CMSEL, S, wplayer2_CSL2
esln
rid = 4006
type, cid
real,rid
esurf
CMSEL, S, TARG_L2
esln
type, tid
real,rid
esurf

! CSL2
! Contact type
cid = 39
et,cid,173,,0,,,0
keyopt,cid,9,1
keyopt,cid,12,0
! Target type
tid = 40
et,tid,170,
!!!!!!!!!!!!!!!
CMSEL, S, wplayer2_CSL3
esln
rid = 4007
type, cid
real,rid
esurf
CMSEL, S, TARG_L
esln
type, tid
real,rid
esurf
rmodif,rid,10,0.00051

ALLSEL, ALL

!===========================================================================
! SAVE MODEL
!
save, 'mechanical', db
FINISH
