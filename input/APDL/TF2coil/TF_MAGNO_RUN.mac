!===============================================================================
! 17 AUGUST 2020 - Fabian Krajewski ITB mbH
!		Tel.: +49 (0)231 94536534
!		This FE-model is part of the Framework service contract ITER/17/CT/6000000211/PMT
!		Task Order 4, Deliverable 2, Two TF coil model
!
!		Version 4.0 (TF_COILS_V9_4.cdb)
!
! 		This macro is to Run Electro Magnetic analyses (procedure with Solid 5 elements) to compute Lorentz Forces
!
!		Following arguments are used for this macro
!   	arg1
!  TYPE OF MODEL, allow to choose the model to be ran 
!	arg1=1 -> TF1-SINGLE COIL MODEL TYPE B (20 deg, symmetry plane <-10 deg;+10deg>)
!   arg1=2 -> TF2-SINGLE COIL MODEL TYPE A (20 deg, symmetry plane <+10 deg;+30deg>)
!   arg1=3 -> TF1&TF2-TWO COILS MODEL      (40 deg, symmetry plane <-10 deg;+30deg>)
!
!		arg2
!  Revision
!
!		arg3
!  Counter for scenario
!
!		arg4
!  Counter for case
!
!===============================================================================

!=======================================================================
! SET THE MAGNETIC NODAL PREFRENCES
!

/CONFIG, NRES, 4000 	!If time steps are too many, the number should be increased to store the results.

!===========================================================================
! CONSTANT
!
		TRUE			= 1
		FALSE			= 0

!===============================================================================
! Enums (DO NOT MODIFY!)
!
	
	!=======================================================================
	! material Ids (as they are labeled in the ".mats" file)
	!
	MAT_WP	 	= 1		! SMEARED MATERIAL FOR WP
	MAT_SS		= 2		! SS316 LN-IG
	MAT_RING	= 3		! SMEARED MATERIAL FOR PRECOMPRESSION RING
	MAT_AIR		= 4		! SMEARED MATERIAL FOR PRECOMPRESSION RING
	MAT_INCONEL	= 5		! INCONEL FOR PINS
	MAT_G10		= 6		! G10
	MAT_SHEAR_KEYS	= 7		! MATERIAL FOR SHEAR KEYS LINK180
	MAT_FRICT_RING	= 8		! FRICTION FOR RING
	MAT_FRIC_MID_A  = 9		! FRICTION FOR WEDGING Plane +10 degree
	MAT_FRIC_MID_B  = 31		! FRICTION FOR WEDGING Plane -10 degree
	MAT_FRICT_WP	= 10		! FRICTION FOR WP
	MAT_FRICT_GS	= 11		! FRICTION FOR GS
	MAT_FRICT_IOIS	= 12		! FRICTION FOR GS
	MAT_FRICT_OIS	= 13		! FRICTION FOR GS
	MAT_FRICT_BEAR  = 14		! FRICTION FOR RING BEARINGS
	
	!=======================================================================
	! NUMBER OF TF COILS TO BE MODELLED
	!
	nCoil_MAG     	= 18
	
	!=======================================================================
	! LOCAL COORDINATE SYSTEM ID
	!
	GlobCyl		= 11		! Global Cyl CS
	SymCart		= 12		! Cartesian System on symmetry plane between 2 coils
	HalfCart	= 13		! Cartesian System on half plane of coil 1
			
	U_OIS_SYS 	= 1001		! Local UPPER OIS CS (-10 deg plane) for bolts (X AXIS = PINS axis)
	L_OIS_SYS 	= 1002		! Local LOWER OIS CS (-10 deg plane) for bolts (X AXIS = PINS axis)
		
	UN_IOIS_SYS	= 2001		! Local UPPER IOIS CS (-10 deg plane) for pins (X AXIS = PINS axis)
	UP_IOIS_SYS	= 2002		! Local UPPER IOIS CS (+10 deg plane) for pins (X AXIS = PINS axis)
	LN_IOIS_SYS	= 2003		! Local UPPER IOIS CS (-10 deg plane) for pins (X AXIS = PINS axis)
	LP_IOIS_SYS	= 2004		! Local UPPER IOIS CS (+10 deg plane) for pins (X AXIS = PINS axis)

	U_GS_SYS 	= 3001		! Local UPPER GS CS for bolts (X AXIS = PINS axis)
	L_GS_SYS 	= 3002		! Local LOWER GS CS for bolts (X AXIS = PINS axis)

	!=======================================================================
	! Geometrical Data for SOURCE SECTIONS
	!
	DY_PF1=0.959
	DZ_PF1=0.9841
	DY_PF2=0.5801
	DZ_PF2=0.7146
	DY_PF3=0.6963
	DZ_PF3=0.9538
	DY_PF4=0.6382
	DZ_PF4=0.9538
	DY_PF5=0.8125
	DZ_PF5=0.9538
	DY_PF6=1.559
	DZ_PF6=1.1075
	DY_PLASMA=1.0
	DZ_PLASMA=1.0
	DY_CS=0.734
	DZ_CS=2.17
	DY_TF=0.7
	DZ_TF=0.7
	
	!=======================================================================
	! Geometrical Data for SOURCE - AREAS
	!
	A_TF  = DY_TF*DZ_TF			! TF cross section [m^2]
	A_PF1 = DY_PF1*DZ_PF1			! PF1 cross section [m^2]
	A_PF2 = DY_PF2*DZ_PF2			! PF2 cross section [m^2]
	A_PF3 = DY_PF3*DZ_PF3			! PF3 cross section [m^2]
	A_PF4 = DY_PF4*DZ_PF4			! PF4 cross section [m^2]
	A_PF5 = DY_PF5*DZ_PF5			! PF5 cross section [m^2]
	A_PF6 = DY_PF6*DZ_PF6			! PF6 cross section [m^2]
	A_CS  = DY_CS*DZ_CS			! CS cross section [m^2]
	A_PLASMA = DY_PLASMA*DZ_PLASMA		! PLASMA cross section [m^2]
	
	!===========================================================================
	! ELEMENT TYPE ID
	!
	ET_SOLID		= 1
	ET_CONTA178		= 2
	ET_C_STAND		= 3
	ET_T_STAND		= 4
	ET_C_MPC		= 5
	ET_T_MPC		= 6
	ET_C_SLID		= 7
	ET_T_SLID		= 8
	ET_MASS			= 9
	ET_SOLSH		= 10
	ET_LINK			= 11
	ET_MPC184		= 12
	ET_C_STAND_NOGAP	= 13
	ET_T_STAND_NOGAP	= 14
	ET_BEAM			= 15

	ET_SOURC36_PF1   	= 101
	ET_SOURC36_PF2 		= 102
	ET_SOURC36_PF3 		= 103
	ET_SOURC36_PF4 		= 104
	ET_SOURC36_PF5 		= 105
	ET_SOURC36_PF6 		= 106	
	ET_SOURC36_PLASMA 	= 107		
	ET_SOURC36_TF_INNER	= 108		
	ET_SOURC36_TF_OUTER	= 109
	ET_SOURC36_CSU3		= 110
	ET_SOURC36_CSU2		= 111
	ET_SOURC36_CSU1		= 112
	ET_SOURC36_CSL1		= 113
	ET_SOURC36_CSL2		= 114
	ET_SOURC36_CSL3		= 115

!===============================================================================
!===============================================================================
!===============================================================================

!===============================================================================
!===============================================================================
!===============================================================================

	!§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
	!
	! CHECK_POINT_1
	! (select HERE: Revision, and Case)
	!
	!
	Rev  			= %arg2%				
	!
	!§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§	
	
	!===========================================================================
	!===========================================================================
	! SET SCENARIO
	!
       *IF, %arg3%, EQ, 1, THEN

             Scenario = 'TF_ONLY'

       *ELSEIF, %arg3%, EQ, 2, THEN

             Scenario = 'SOD'

       *ELSEIF, %arg3%, EQ, 3, THEN

             Scenario = 'SOP'

       *ELSEIF, %arg3%, EQ, 4, THEN

             Scenario = 'XPF'

       *ELSEIF, %arg3%, EQ, 5, THEN

             Scenario = 'CS10'

       *ELSEIF, %arg3%, EQ, 6, THEN

             Scenario = 'CS2U0'

       *ELSEIF, %arg3%, EQ, 7, THEN
		
             Scenario = 'CS2L0'

       *ELSEIF, %arg3%, EQ, 8, THEN
		
		Scenario = 'SOF'
	
       *ELSEIF, %arg3%, EQ, 9, THEN
		
		Scenario = 'SOB'

       *ELSEIF, %arg3%, EQ,10, THEN

		Scenario = 'EOB'

       *ELSEIF, %arg3%, EQ, 11, THEN

		Scenario = 'EOP'

       *ELSEIF, %arg3%, EQ, 12, THEN

		Scenario = 'EOB+PD'
       *ENDIF
	!===========================================================================
	!===========================================================================

	!===========================================================================
	!===========================================================================
	! SET TYPE OF MODEL (i.e. TF TYPE A, TF TYPE B OR 2 COILS MODEL)
	!
	*IF, 	%arg1%, EQ, 1, THEN
		
		RefCaseName 	= 'TF_TYPE_1'
		
		nCoil		= 1
		Coil_1		= 1
		Coil_2		= 1
		
		alfa_1		= -10
		alfa_2		=  10
	
	*ELSEIF, %arg1%, EQ, 2, THEN
		
		RefCaseName     = 'TF_TYPE_2'
		
		nCoil		= 1
		Coil_1		= 2
		Coil_2		= 2

		alfa_1		=  10
		alfa_2		=  30
	
	*ELSEIF, %arg1%, EQ, 3, THEN
		
		RefCaseName     = 'TF1andTF2'
		
		nCoil		= 2
		Coil_1		= 1
		Coil_2		= 2
		
		alfa_1		= -10
		alfa_2		=  30
	
	*ENDIF
	!===========================================================================
	!===========================================================================

!===============================================================================
!===============================================================================
!===============================================================================

	!==================================================================================================================================
	! MAGNETIC ANALYSIS -  evaluate H and B field on WP
	!
		FEModel		= 'TF_COILS_MAGNO'	! MAG MODEL
		CaseName	= 'MAGNO'		! the case name
		MAG		= TRUE			! Perform MAG analysis			
		KIND		= 'MAGNETIC'
		Label 		= '   MAGNETIC'
	
!===============================================================================
!===============================================================================
!===============================================================================
! Load CDB model to generate MECH and MAG DB model or load generated DB models


	/FILNAME,'%CaseName%',1
	
!========================================================================
! set txt OUTPUT
!
	/CWD, './%RefCaseName%_Rev_%Rev%/TEXTOUT'
	/OUTPUT,,txt
	/CWD, '../../'

	!§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
	!
	! CHECK_POINT_2
	/CWD, './%RefCaseName%_Rev_%Rev%/%KIND%/%Scenario%/%CaseName%'
	!
	!§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
	
	!========================================================================
	! READ model
	!		
	RESUME,'../../../_models/%FEModel%', db, , 1, 1
	
	ALLSEL, ALL

	!=========================================================================
	! set title
	!
	/TITLE,%RefCaseName%_Rev%Rev%  CaseName:%CaseName%  Scenario2:15MA Baseline %Scenario%


!===============================================================================
!===============================================================================
!===============================================================================
! PRELIMINARY PHASES - GLOBAL PRE-PROCESSING FOR ELECTRO-MAGNETIC ANALYSES
!
/PREP7

	!===========================================================================
	! CS DATA
	!
	*dim,cs_name,CHAR,6
	cs_name(1)= 'CS3U',   'CS2U',  'CS1U',  'CS1L',  'CS2L',  'CS3L'
	*dim,cs_edge,CHAR,6,2
	cs_edge(1,1)= 'CS3U_N','CS2U_N','CS1U_N','CS1L_N','CS2L_N','CS3L_N'
	cs_edge(1,2)= 'CS3U_P','CS2U_P','CS1U_P','CS1L_P','CS2L_P','CS3L_P'
		
	! CS Geometry (Rc, Zc, dr, dz). Values for info only.
	! Positions AFTER 2012 - vertical position upper/lower not symmertric
	!
	*dim,cs_geo,,4,6
	cs_geo(1,1)=  1.687,   5.464,  0.740,  2.093    ! cs3u
	cs_geo(1,2)=  1.687,   3.278,  0.740,  2.093    ! cs2u
	cs_geo(1,3)=  1.687,   1.092,  0.740,  2.093    ! cs1u
	cs_geo(1,4)=  1.687,  -1.072,  0.740,  2.093    ! cs1l
	cs_geo(1,5)=  1.687,  -3.258,  0.740,  2.093    ! cs2l
	cs_geo(1,6)=  1.687,  -5.444,  0.740,  2.093    ! cs3l
	
	!===========================================================================
	! PF DATA
	!
	*dim,pf_name,CHAR,7
	pf_name(1)= 'PF1', 'PF2', 'PF3', 'PF4', 'PF5', 'PF6', 'PLASMA'
	*dim,pf_edge,CHAR,7,2
	pf_edge(1,1)= 'PF1_N','PF2_N','PF3_N','PF4_N','PF5_N','PF6_N', 'PLASMA_N'
	pf_edge(1,2)= 'PF1_P','PF2_P','PF3_P','PF4_P','PF5_P','PF6_P', 'PLASMA_P'
	
	! defining the radial and vertical postion and dimensions of the PF coils
	! Plasma position in the matrix ids a dummy value. Is overwritten later
	!
	*dim,pf_geo,,4,7
	pf_geo(1,1) = 	3.943,  7.564,  0.959,  0.984	!PF1
	pf_geo(1,2) = 	8.285,  6.530,  0.580,  0.715	!PF2
	pf_geo(1,3) =  11.992,  3.265,  0.696,  0.954	!PF3
	pf_geo(1,4) =  11.963, -2.244,  0.638,  0.954	!PF4
	pf_geo(1,5) = 	8.391, -6.737,  0.813,  0.954	!PF5
	pf_geo(1,6) = 	4.334, -7.477,  1.559,  1.108	!PF6
	pf_geo(1,7) =   6.300,  0.500,  0.010,  0.010	!Default Plasma position

	!=======================================================================
	! TF ONLY [A*turns]
	!
	*IF, %arg3%, EQ, 1, THEN

		!=======================================================================
		! Input Current [A] and Current densities [A*turns | m^2]
		!
		TF_LOAD		= TRUE			! TF on/off
		PF_LOAD		= FALSE			! PF on/off
		CS_LOAD		= FALSE			! CS on/off
		PLASMA_LOAD	= FALSE			! PLASMA on/off

	!=======================================================================
	! OTHER LOAD CASES
	!
	*ELSE

		TF_LOAD		= TRUE			! TF on/off
		PF_LOAD		= TRUE			! PF on/off
		CS_LOAD		= TRUE			! CS on/off
		PLASMA_LOAD	= TRUE			! PLASMA on/off
	*ENDIF
	
	!===========================================================================
	! INITIALIZE CURRENT ARRAY
	!	
	! OLD 2010 SCENARIO *DIM, CURRENT_LOADS, ARRAY, 14, 13   ! 14 rows and 13 columns
        *DIM, CURRENT_LOADS, ARRAY, 14, 13   ! first value is 14 rows and second value is 14 columns
	!===========================================================================
	! READ CURRENT LOADS FILE
	! J=1,n1, I=1,n2, K=1,n3 for JIK
        !
        ! READ CURRENTS: first value is number of columns (which includeds the Coil name in the frist column
        ! followed by n columns with current. In this case 13 current profiles.
        ! Second is number is number of rows/line to read in, 7 is skip number of lines.
	!
        *VREAD, CURRENT_LOADS(1,1),'../../_loads/Current_Loads_15MA_2016',txt, , JIK, 13 ,14 , , 7
(A6,12F9.3)

	!===========================================================================
	! INITIALIZE VARIABLES
	!	
	I_CS1   =  CURRENT_LOADS(1,%arg3%+1)*1.0e6
	I_CS2   =  CURRENT_LOADS(2,%arg3%+1)*1.0e6
	I_CS3   =  CURRENT_LOADS(3,%arg3%+1)*1.0e6
	I_CS4   =  CURRENT_LOADS(4,%arg3%+1)*1.0e6
	I_CS5   =  CURRENT_LOADS(5,%arg3%+1)*1.0e6
	I_CS6   =  CURRENT_LOADS(6,%arg3%+1)*1.0e6

	I_PF1    =  CURRENT_LOADS(7,%arg3%+1)*1.0e6
	I_PF2    =  CURRENT_LOADS(8,%arg3%+1)*1.0e6
	I_PF3    =  CURRENT_LOADS(9,%arg3%+1)*1.0e6
	I_PF4    =  CURRENT_LOADS(10,%arg3%+1)*1.0e6
	I_PF5    =  CURRENT_LOADS(11,%arg3%+1)*1.0e6
	I_PF6    =  CURRENT_LOADS(12,%arg3%+1)*1.0e6


	! NEGATIVE MEANS POSITIVE ACCORDING TO DINA  
	I_TF   	 =  CURRENT_LOADS(13,%arg3%+1)*1.0e6
	I_PLASMA =  CURRENT_LOADS(14,%arg3%+1)*1.0e6

	*DO,i,COIL_1,COIL_2
		I_TF_%i%=I_TF
	*ENDDO
	
FINISH

!===============================================================================
!===============================================================================
!
! ELECTRO-MAGNETIC ANALYSES
!
!===============================================================================
!===============================================================================

!===============================================================================
!===============================================================================
!===============================================================================
! MAGNETIC ANALYSIS
!
*IF, MAG, EQ, TRUE, THEN
	
	!===========================================================================
	!===========================================================================
	! PRE-PROCESSING
	!
	/PREP7	
		!===========================================================================
		! Deactivate shape test on elems 
		!
		SHPP, OFF
	
		!===========================================================================
		! DEFINE AND SET SOLID5 KOPT
		!
		ET, 20, SOLID5			! SOLID5			
	
		!===========================================================================
		! LOAD materials
		!
		MPREAD,'../../../TF_COILS_V9_4','mats',' '

		!===========================================================================
		! SET MATERIAL for ALL
		!
		ALLSEL,ALL
		EMODIF, ALL, TYPE, 20
		EMODIF, ALL, MAT, MAT_AIR
		
		!===========================================================================
		! DELETE MECHANICAL ET
		!
		ETDELE, ET_SOLID 
				
		!===========================================================================
		! SET SYSTEM UNITS
		!
		EMUNIT, MKS	! EM UNITS SYSTEM
		
		ALLSEL
		
		CSYS, 0
		D, ALL, MAG, 0
		D, ALL, TEMP, 0	

			
		!===========================================================================
		! Material properties for TF, CS and PF coils
		! Change only the material propertie RSVY, which is in winding direction.
		! Keep the resistivity in radial and vertical direction equal 1.0
		!
		
		! MODIFY MATERIAL FOR TF COILS
		*DO, zzz, Coil_1, Coil_2
			DELTA = ((zzz-1)*20)
			CMSEL, S, TF%zzz%_WP
			*GET, ecount, ELEM,, COUNT
			*GET, emax, ELEM,, NUM, MAX

			zl=
			*DIM, zl, ARRAY, emax

			kk=0
			*DO, k, 1, ecount
				kk=ELNEXT(kk)

				*GET, zcs, ELEM, kk, ATTR, ESYS

				CSYS, zcs

				xc=0.0
				*DO, kkk, 1, 8
					xc=xc+nx(NELEM(kk,kkk))
				*ENDDO
				xc=xc/8.0

				zl(kk)=1.0

				*IF, zcs, EQ, 30+%DELTA%, THEN
					zl(kk)=zl(kk)
				*ENDIF

				*IF, zcs, EQ, 37+%DELTA%, THEN
					zl(kk)=zl(kk)*xc/2.241   
				*ENDIF

				*IF, zcs, EQ, 42+%delta%, THEN
					zl(kk)=zl(kk)*xc/2.1966  
				*ENDIF

				*IF, zcs, EQ, 38+%delta%, THEN
					zl(kk)=zl(kk)*xc/3.231	
				*ENDIF
				
				*IF, zcs, EQ, 41+%delta%, THEN
					zl(kk)=zl(kk)*xc/3.1797          
				*ENDIF

				*IF, zcs, EQ, 39+%delta%, THEN
					zl(kk)=zl(kk)*xc/6.550        
				*ENDIF

				*IF, zcs, EQ, 40+%delta%, THEN
					zl(kk)=zl(kk)*xc/6.550        
				*ENDIF
				
				EMODIF,kk, MAT, kk
				MP, murx, kk, 1.0
				MP, rsvx, kk, 1.0
				MP, rsvy, kk, 1.0/zl(kk)
				MP, rsvz, kk, 1.0
				MP, kxx, kk, 1.0
				MP, EX, kk, 1.0
				MP, PRXY, kk,0.3

			*ENDDO
		*ENDDO

		! MODIFY MATERIAL FOR PF COILS
		*DO, zzz, 1, 6
			CMSEL, S, PF%zzz%
			*GET, ecount, ELEM,, COUNT
			*GET, emax, ELEM,, NUM, MAX

			zl=
			*DIM, zl, ARRAY, emax

			kk=0
			*DO, k, 1, ecount
				kk=ELNEXT(kk)
	
				*GET, zcs, ELEM, kk, ATTR, ESYS
				CSYS,zcs

				xc=0.0
				*DO, kkk, 1, 8
					xc=xc+nx(NELEM(kk,kkk))
				*ENDDO
				xc=xc/8.0

				zl(kk)=1.0
			
				zl(kk)=zl(kk)*xc/PF_GEO(1,zzz)

				EMODIF,kk, MAT, kk
				MP, murx, kk, 1.0
				MP, rsvx, kk, 1.0
				MP, rsvy, kk, 1.0/zl(kk)
				MP, rsvz, kk, 1.0
				MP, kxx, kk, 1.0
				MP, EX, kk, 1.0
				MP, PRXY, kk,0.3
				
			*ENDDO
		*ENDDO
		
		! MODIFY MATERIAL FOR CS COILS
		CMSEL, S, CS1U
		CMSEL, A, CS2U
		CMSEL, A, CS3U
		CMSEL, A, CS1L
		CMSEL, A, CS2L
		CMSEL, A, CS3L
		*GET, ecount, ELEM,, COUNT
		*GET, emax, ELEM,, NUM, MAX
		CSYS, 1

		zl=
		*DIM, zl, ARRAY, emax

		kk=0
		*DO, k, 1, ecount
			kk=ELNEXT(kk)

			*GET, zcs, ELEM, kk, ATTR, ESYS

			xc=0.0
			*DO, kkk, 1, 8
				xc=xc+nx(NELEM(kk,kkk))
			*ENDDO
			xc=xc/8.0

			zl(kk)=1.0

			zl(kk)=zl(kk)*xc/cs_geo(1,1)

			EMODIF,kk, MAT, kk
			MP, murx, kk, 1.0
			MP, rsvx, kk, 1.0
			MP, rsvy, kk, 1.0/zl(kk)
			MP, rsvz, kk, 1.0
			MP, kxx, kk, 1.0
			MP, EX, kk, 1.0
			MP, PRXY, kk,0.3
				
		*ENDDO
		
		! MODIFY MATERIAL FOR PLASMA
		CMSEL, S, PLASMA
		*GET, ecount, ELEM,, COUNT
		*GET, emax, ELEM,, NUM, MAX
		CSYS, 1

		zl=
		*DIM, zl, ARRAY, emax

		kk=0
		*DO, k, 1, ecount
			kk=ELNEXT(kk)

			*GET, zcs, ELEM, kk, ATTR, ESYS

			xc=0.0
			*DO, kkk, 1, 8
				xc=xc+nx(NELEM(kk,kkk))
			*ENDDO
			xc=xc/8.0

			zl(kk)=1.0

			zl(kk)=zl(kk)*xc/pf_geo(1,7)
				
			EMODIF,kk, MAT, kk
			MP, murx, kk, 1.0
			MP, rsvx, kk, 1.0
			MP, rsvy, kk, 1.0/zl(kk)
			MP, rsvz, kk, 1.0
			MP, kxx, kk, 1.0
			MP, EX, kk, 1.0
			MP, PRXY, kk,0.3
				
		*ENDDO

		ALLSEL
		
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		! MOVE PLASMA TO CORRECT POSITION
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	
		*dim,pl_geo,,12,2
!                             TFonly)  (SOD)  (SOP)   (XPF)  (CS10)  CS2U0) (CS2L0)  (SOF)   (SOB)   (EOB)   (EOP)  EOB+PD)
                pl_geo(1,1)=   6.30,   6.30,  6.30,  6.079,  6.083,  6.084,  6.088,  6.084,  6.224,  6.220,  6.342,  6.30   ! Radial Pos
                pl_geo(1,2)=   0.00,   0.00,  0.00,  0.287,  0.504,  0.508,  0.503,  0.527,  0.484,  0.487, -0.745,  0.00    ! Vertical Pos
		! get Node Number of Plasma centroid to perform re-positioning depending on load case.
		! Plama position is modified later in the file
		!
		cmsel,s,pf_name(7)  $nsle
		csys,27
		_ncent=node(6.3,0.,0.5)
		allsell
	
		cmsel,s,pf_name(7)  $nsle
		csys,27
		x_pos=nx(_ncent)
		z_pos=nz(_ncent)
		dx_pos=pl_geo(%arg3%,1)-x_pos
		dz_pos=pl_geo(%arg3%,2)-z_pos
		ngen,2,0,all,,,dx_pos,,dz_pos
		csys,0
		*endif
		!
		cmsel,s,pf_name(7)  $nsle
		*get,ecount,elem,,count
		*get,emax,elem,,num,max
		zl=
		*dim,zl,array,emax
		kk=0

		*do,k,1,ecount
		kk=elnext(kk)
		csys,27
		xc=0.0
		*do,kkk,1,8
		xc=xc+nx(nelem(kk,kkk))
		*enddo
		xc=xc/8.0
		zl(kk)=1.0
		zl(kk)=zl(kk)*xc/pl_geo(%arg3%,1)
		csys,0

		emodif,kk,mat,kk
		mp,murx,kk,1.0
		mp,rsvx,kk,1.0
		mp,rsvy,kk,1.0/zl(kk)
		mp,rsvz,kk,1.0
		mp,kxx,kk,1.0
		*enddo
	
		!===========================================================================
		! Set VOLT=0 for lower set of overlapping planes TF coil and
		! couple the VOLT dof for all other layers in poloidal direction
		! Define boundary conditions for TF-coil
		!
		*DO, i, Coil_1, Coil_2
			CMSEL, S, upp1_TF%i%
			D, ALL, VOLT, 0
			CMSEL, S, low1_TF%i%
			*GET, mxcp, ACTIVE,, CP
			CP, mxcp+1, VOLT, ALL  ! Couple all node with VOLT DOF
		*ENDDO
	
		!===========================================================================
		! Define boundary conditions for PF-coil
		!
		*DO, i, 1, 6
			CMSEL, S, low1_PF%i%
			D, ALL, VOLT, 0
			CMSEL, S, upp1_PF%i%
			*GET, mxcp, ACTIVE,, CP
			CP, mxcp+1, VOLT, ALL  ! Couple all node with VOLT DOF
		*ENDDO
	
		!===========================================================================
		! Define boundary conditions for CS-coil
		!	
		*DO, i, 1, 6
			CMSEL, S, low1_CS%i%
			D, ALL, VOLT, 0
			CMSEL, S, upp1_CS%i%
			*GET, mxcp, ACTIVE,, CP
			CP, mxcp+1, VOLT, ALL  ! Couple all node with VOLT DOF
		*ENDDO
	
		!===========================================================================
		! Define boundary conditions for PLASMA
		!
		CMSEL, S, low1_PF7
		D, ALL, VOLT, 0
		CMSEL, S, upp1_PF7
		*GET, mxcp, ACTIVE,, CP
		CP, mxcp+1, VOLT, ALL  ! Couple all node with VOLT DOF
		
		ALLSEL
		
	FINISH
	
	!===========================================================================
	! APPLY LOADS ON ALL SOLID5 COMPONENTS (WP, CS, PF, PLASMA)
	/SOLU
	
		! SET ASSIGN TO RST AND RMG
		/ASSIGN, RMG, %SCENARIO%_EMAG, rmg
		/ASSIGN, RST, %SCENARIO%_EMAG, rst
	
		! SET DEFORMATION BOUNDARY CONDITIONS TO ZERO
		ALLSEL
		D, ALL, UX, 0
		D, ALL, UY, 0
		D, ALL, UZ, 0
	
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		! APPLY LOADS ON CS COIL
		!
		*IF,CS_LOAD, EQ, TRUE, THEN
			*DO, i, 1, 6
				CMSEL, S, upp1_CS%i%
				*GET, nmin, NODE,, NUM, MIN
				F, nmin, AMPS, I_CS%i%
			*ENDDO
		*ENDIF
	
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		! APPLY LOADS ON PF COIL
		!
		*IF, PF_LOAD, EQ, TRUE, THEN
			*DO, i, 1, 6
				CMSEL, S, upp1_PF%i%
				*GET, nmin, NODE,, NUM, MIN
				F, nmin, AMPS, I_PF%i%
			*ENDDO
		*ENDIF
	
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		! APPLY LOADS ON PLASMA
		!
		*IF, PLASMA_LOAD, EQ, TRUE, THEN
			CMSEL, S, upp1_PF7
			*GET, nmin, NODE,, NUM, MIN
			F, nmin, AMPS, I_PLASMA
		*ENDIF
	
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		! APPLY LOADS ON TF COILS
		!
		*IF, TF_LOAD, EQ, TRUE, THEN
			*DO, i, Coil_1, Coil_2
				CMSEL, S, low1_TF%i%
				*GET, nmin, NODE,, NUM, MIN
				F, nmin, AMPS, I_TF_%i%
			*ENDDO
		*ENDIF
	
		!===========================================================================
		! CALCULATE CURRENT DENSITY
		ALLSEL
		ANTYPE, STATIC
		NROPT, AUTO,, ON
		NSUBST, 1
		CNVTOL, HEAT, -1
		CNVTOL, AMPS
		CNVTOL, FLUX
		SOLVE
		
		!===========================================================================
		! CALCULATE MAGNETIC FIELD and LORENTZ FORCES
		emsym,18/nCoil
		BIOT, NEW
		ALLSEL
		SOLVE
		
	FINISH
	
	!===========================================================================
	! POST PROCESSING - WRITE TEXT FILES WITH INPUT COMMANDS FOR LORENTZ FORCES
	!
	/POST1

		*AFUN, DEG
		FILE, %SCENARIO%_EMAG, rst
		SET, LAST
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		! WRITE LORENTZ FOCRES FOR TF COILS
		!
		*DIM, TF_FORCE_TAB,ARRAY,nCoil,3
		*DO,j,Coil_1,Coil_2
			RSYS, 0
			CMSEL, S, TF%j%_WP
			alfa = 20*(j-1)
			NSLE
			*GET, ncount, NODE,, COUNT
			*GET, maxn, NODE,, NUM, MAXD
			ctj=
			*DIM, ctj, ARRAY, maxn, 4
			maskv=
			*DIM, maskv, ARRAY, maxn, 1
			*VGET, maskv(1), NODE, , NSEL
			*VFILL, ctj(1,1),RAMP,1,1
			*VMASK, maskv(1)
			*VGET, ctj(1,2),NODE, , FMAG, X
			*VMASK, maskv(1)
			*VGET, ctj(1,3),NODE, , FMAG, Y
			*VMASK, maskv(1)
			*VGET, ctj(1,4),NODE, , FMAG, Z
			
			*VMASK,maskv(1)
			*VSCF,SUMFX,SUM,ctj(1,2)
			*VMASK,maskv(1)
			*VSCF,SUMFY,SUM,ctj(1,3)
			*VMASK,maskv(1)
			*VSCF,TF_FORCE_TAB(j,3),SUM,ctj(1,4)

			SUMFR = SUMFX*COS(alfa) + SUMFY*SIN(alfa)
			SUMFT = -SUMFX*SIN(alfa)+ SUMFY*COS(alfa)
			
			TF_FORCE_TAB(j,1) = SUMFR
			TF_FORCE_TAB(j,2) = SUMFT
		*ENDDO
		
		*CFOPEN, '../../%Scenario%_SUMTF', forces
			*vwrite, TF_FORCE_TAB(1,1), TF_FORCE_TAB(1,2), TF_FORCE_TAB(1,3), 
%12.5E %12.5E %12.5E

		*CFCLOSE
	
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		! WRITE LORENTZ FOCRES FOR PF COILS
		!
		*DIM, PF_FORCE_TAB,ARRAY,6,3
		*DO,j,1,6
			RSYS, 1
			CMSEL, S, PF%j%
			NSLE
			*GET, ncount, NODE,, COUNT
			*GET, maxn, NODE,, NUM, MAXD
			ctj=
			*DIM, ctj, ARRAY, maxn, 4
			maskv=
			*DIM, maskv, ARRAY, maxn, 1
			*VGET, maskv(1), NODE, , NSEL
			*VFILL, ctj(1,1),RAMP,1,1
			*VMASK, maskv(1)
			*VGET, ctj(1,2),NODE, , FMAG, X
			*VMASK, maskv(1)
			*VGET, ctj(1,3),NODE, , FMAG, Y
			*VMASK, maskv(1)
			*VGET, ctj(1,4),NODE, , FMAG, Z
			
			*VMASK,maskv(1)
			*VSCF,PF_FORCE_TAB(j,1),SUM,ctj(1,2)
			*VMASK,maskv(1)
			*VSCF,PF_FORCE_TAB(j,2),SUM,ctj(1,3)
			*VMASK,maskv(1)
			*VSCF,PF_FORCE_TAB(j,3),SUM,ctj(1,4)
		*ENDDO

		*CFOPEN, '../../%Scenario%_SUMPF', forces
			*vwrite, PF_FORCE_TAB(1,1), PF_FORCE_TAB(1,2), PF_FORCE_TAB(1,3), 
%12.5E %12.5E %12.5E

		*CFCLOSE
	
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		! WRITE LORENTZ FOCRES FOR CS COILS
		!
		*DIM, CS_FORCE_TAB,ARRAY,6,3
		*DO,j,1,6
			RSYS, 1
			CMSEL, S, cs_name(%j%)
			NSLE
			*GET, ncount, NODE,, COUNT
			*GET, maxn, NODE,, NUM, MAXD
			ctj=
			*DIM, ctj, ARRAY, maxn, 4
			maskv=
			*DIM, maskv, ARRAY, maxn, 1
			*VGET, maskv(1), NODE, , NSEL
			*VFILL, ctj(1,1),RAMP,1,1
			*VMASK, maskv(1)
			*VGET, ctj(1,2),NODE, , FMAG, X
			*VMASK, maskv(1)
			*VGET, ctj(1,3),NODE, , FMAG, Y
			*VMASK, maskv(1)
			*VGET, ctj(1,4),NODE, , FMAG, Z
			
			*VMASK,maskv(1)
			*VSCF,CS_FORCE_TAB(j,1),SUM,ctj(1,2)
			*VMASK,maskv(1)
			*VSCF,CS_FORCE_TAB(j,2),SUM,ctj(1,3)
			*VMASK,maskv(1)
			*VSCF,CS_FORCE_TAB(j,3),SUM,ctj(1,4)
		*ENDDO

		*CFOPEN, '../../%Scenario%_SUMCS', forces
			*vwrite, CS_FORCE_TAB(1,1), CS_FORCE_TAB(1,2), CS_FORCE_TAB(1,3), 
%12.5E %12.5E %12.5E

		*CFCLOSE
	
		!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		! WRITE LORENTZ FOCRES FOR PLASMA COILS
		!
		*DIM, PLA_FORCE_TAB,ARRAY,1,3
		RSYS, 1
		CMSEL, S, PLASMA
		NSLE
		*GET, maxn, NODE,, NUM, MAXD
		ctj=
		*DIM, ctj, ARRAY, maxn, 4
		maskv=
		*DIM, maskv, ARRAY, maxn, 1
		*VGET, maskv(1), NODE, , NSEL
		*VFILL, ctj(1,1),RAMP,1,1
		*VMASK, maskv(1)
		*VGET, ctj(1,2),NODE, , FMAG, X
		*VMASK, maskv(1)
		*VGET, ctj(1,3),NODE, , FMAG, Y
		*VMASK, maskv(1)
		*VGET, ctj(1,4),NODE, , FMAG, Z
		
		*VMASK,maskv(1)
		*VSCF,PLA_FORCE_TAB(1,1),SUM,ctj(1,2)
		*VMASK,maskv(1)
		*VSCF,PLA_FORCE_TAB(1,2),SUM,ctj(1,3)
		*VMASK,maskv(1)
		*VSCF,PLA_FORCE_TAB(1,3),SUM,ctj(1,4)
		
		*CFOPEN, '../../%Scenario%_SUMPLA', forces
			*vwrite, PLA_FORCE_TAB(1,1), PLA_FORCE_TAB(1,2), PLA_FORCE_TAB(1,3), 
%12.5E %12.5E %12.5E

		*CFCLOSE
	
	FINISH
	
	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	! MERGE NODES AT CUTTING PLANES
	!
	SAVE
	
	/PREP7
	
		*DO, i, Coil_1, Coil_2
			cmsel,s,upp1_TF%i%
			cmsel,a,low1_TF%i%
			nummrg,node,0.002
		*ENDDO
	
		*DO, i, 1, 6
			cmsel,s,upp1_PF%i%
			cmsel,a,low1_PF%i%
			nummrg,node,0.002
		*ENDDO
		*DO, i, 1, 6
			cmsel,s,upp1_CS%i%
			cmsel,a,low1_CS%i%
			nummrg,node,0.002
		*ENDDO
	
	FINISH
	
	!===========================================================================
	! WRITE OUTPUT FILE for Lorentz forces - TFC
	!
	!===========================================================================
	!
	/POST1
		ESEL,NONE
		*DO,i,Coil_1,Coil_2
			CMSEL, A, TF%i%_WP
		*ENDDO
		NSLE
		
		RSYS, 0
		*GET, ncount, NODE,, COUNT
		
		nmin = 0
		
		*CFOPEN, '../../%Scenario%_TF', forces
		*DO, i, 1, ncount
			*GET, iN, NODE, nmin, NXTH
			*GET, val_FX,NODE, iN, FMAG, X
			*GET, val_FY,NODE, iN, FMAG, Y
			*GET, val_FZ,NODE, iN, FMAG, Z
			nmin = iN
			
			*VWRITE, 'F,', iN, ',FX,', val_FX
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FY,', val_FY 
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FZ,', val_FZ
(A4, F13.1, A4, F13.1)		
		*ENDDO

		*CFCLOSE
		
		!===========================================================================
		! WRITE OUTPUT FILE for Lorentz forces - PFC
		!
		!===========================================================================
		CMSEL, S, PF1
		CMSEL, A, PF6
		NSLE
		
		RSYS, 1
		*GET, ncount, NODE,, COUNT
		
		nmin = 0
		
		*CFOPEN, '../../%Scenario%_PF', forces
		*DO, i, 1, ncount
			*GET, iN, NODE, nmin, NXTH
			*GET, val_FX,NODE, iN, FMAG, X
			*GET, val_FY,NODE, iN, FMAG, Y
			*GET, val_FZ,NODE, iN, FMAG, Z
			nmin = iN
			
			*VWRITE, 'F,', iN, ',FX,', val_FX
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FY,', val_FY 
(A4, F13.1, A4, F13.1)
			*VWRITE, 'F,', iN, ',FZ,', val_FZ
(A4, F13.1, A4, F13.1)		
		*ENDDO

		*CFCLOSE
	
		!===============================================================================
		! SAVE DB
		!
		SAVE
		
		!========================================================================
		! DELETE UNNEEDED FILES
		!	
		/dele,MAGNO,emat
		/dele,MAGNO,esav
		/dele,MAGNO,full
		/dele,MAGNO,r001
		/dele,MAGNO,rdb
		/dele,MAGNO,ldhi
		
		!===========================================================================
		! COPY FILES TO MAGNET INPUT FOLDER
		!
		/CWD,'../../'
		/COPY,'%Scenario%_SUMPLA',forces, , '../../../MAG_15MA_2016/2Coil/%RefCaseName%/%Scenario%_SUMPLA',forces
		/COPY,'%Scenario%_SUMPF', forces, , '../../../MAG_15MA_2016/2Coil/%RefCaseName%/%Scenario%_SUMPF',forces
        /COPY,'%Scenario%_SUMCS', forces, , '../../../MAG_15MA_2016/2Coil/%RefCaseName%/%Scenario%_SUMCS',forces
		/COPY,'%Scenario%_SUMTF', forces, , '../../../MAG_15MA_2016/2Coil/%RefCaseName%/%Scenario%_SUMTF',forces
		/COPY,'%Scenario%_TF',    forces, , '../../../MAG_15MA_2016/2Coil/%RefCaseName%/%Scenario%_TF',forces
		/COPY,'%Scenario%_PF',    forces, , '../../../MAG_15MA_2016/2Coil/%RefCaseName%/%Scenario%_PF',forces
		
	FINISH

! GO BACK TO VERSION FOLDER FOR NEXT MACRO FILE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
FINISH																		!
/CLEAR,START																!
/CWD, '../../'																!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	
/EOF