generate_model
!	Version 4.0 (TF_COILS_V9_4.cdb)
! This MACRO is to generate FE model (*db format) needed to perform Electro-Magnetic and mechanical TF coils analyses
!
! arg1: str
!		Geometry
!   	TF1: TF1-SINGLE COIL MODEL TYPE B (20 deg, symmetry plane <-10 deg;+10deg>)
!   	TF2: TF2-SINGLE COIL MODEL TYPE A (20 deg, symmetry plane <+10 deg;+30deg>)
!			TF1_TF2: TF1&TF2-TWO COILS MODEL  (40 deg, symmetry plane <-10 deg;+30deg>)
!
!	arg2: str
!		Physics
!			mech: Mechanical model
!			mag: Magnetic model
!		 	th: Thermal model
!
!===============================================================================
!
/FILNAME,'%arg1%_%arg2%',1
/TITLE,'%arg1%_%arg2%'
!
!===========================================================================
!===========================================================================
! set model geometry
!
*IF,arg1,EQ,'TF1',THEN
	nCoil=1
	Coil_1=1
	Coil_2=1
	alfa=20
	alfa_1=-10
	alfa_2=10
*ELSEIF,arg1,EQ,'TF2',THEN
	nCoil=1
	Coil_1=2
	Coil_2=2
	alfa=20
	alfa_1=10
	alfa_2=30
*ELSEIF,arg1,EQ,'TF1_TF2',THEN
	nCoil=2
	Coil_1=1
	Coil_2=2
	alfa=40
	alfa_1=-10
	alfa_2=30
*else
	*msg,error,arg1
	Model geometry %C not in [TF1, TF2, TF1_TF2]
*ENDIF
!
! Load CDB model to generate MECH and MAG DB model or load generated DB models
! set filename
!
/directory,geom,all,cdb
cdread,db,geom(1,1),cdb
allsel
!===========================================================================
! LOAD materials
!
/directory,mats,all,mats
mpread,mats(1,1),'mats'
!===========================================================================
! LOAD properties
!
*use,properties
/directory,props,all,props
mpread,props(1,1),'props'
!
*IF,arg2,EQ,'mech',THEN  ! generate mechanical model
	*use,mechanical_model,arg1,arg2
*ELSEIF,arg2,EQ,'mag',THEN  ! generate magnetic model
	*use,magnetic_model,arg1,arg2
*ELSEIF,arg2,EQ,'th',THEN  ! generate thermal model
	*use,thermal_model,arg1,arg2
*ELSE
	*msg,error,arg2
	Physics type specified on arg2 %C not in [mech, mag, th]
*ENDIF
!
finish
/clear,start
/eof
properties
!=======================================================================
! material Ids (as they are labeled in the ".mats" file)
!
MAT_WP	 	= 1		! SMEARED MATERIAL FOR WP
MAT_SS		= 2		! SS316 LN-IG
MAT_RING	= 3		! SMEARED MATERIAL FOR PRECOMPRESSION RING
MAT_AIR		= 4		! SMEARED MATERIAL FOR PRECOMPRESSION RING
MAT_INCONEL	= 5		! INCONEL FOR PINS
MAT_G10		= 6		! G10
MAT_SHEAR_KEYS	= 7		! MATERIAL FOR SHEAR KEYS LINK180
MAT_FRICT_RING	= 8		! FRICTION FOR RING
MAT_FRIC_MID_A  = 9		! FRICTION FOR WEDGING Plane +10 degree
MAT_FRIC_MID_B  = 31		! FRICTION FOR WEDGING Plane -10 degree
MAT_FRICT_WP	= 10		! FRICTION FOR WP
MAT_FRICT_GS	= 11		! FRICTION FOR GS
MAT_FRICT_IOIS	= 12		! FRICTION FOR GS
MAT_FRICT_OIS	= 13		! FRICTION FOR GS
MAT_FRICT_BEAR  = 14		! FRICTION FOR RING BEARINGS

!=======================================================================
! PARAMETERS
!
g		= 9.81		! gravity acceleration[m/s^2]
nCoil_MAG	= 18

!=======================================================================
! LOCAL COORDINATE SYSTEM ID
!
GlobCyl		= 11		! Global Cyl CS
SymCart		= 12		! Cartesian System on symmetry plane between 2 coils
HalfCart	= 13		! Cartesian System on half plane of coil 1

U_OIS_SYS_1 	= 1001		! Local UPPER OIS CS (-10 deg plane) for bolts (X AXIS = PINS axis)
L_OIS_SYS_1 	= 1002		! Local LOWER OIS CS (-10 deg plane) for bolts (X AXIS = PINS axis)

UN_IOIS_SYS_1	= 2001		! Local UPPER IOIS CS (-10 deg plane) for pins (X AXIS = PINS axis)
UP_IOIS_SYS_1	= 2002		! Local UPPER IOIS CS (+10 deg plane) for pins (X AXIS = PINS axis)
LN_IOIS_SYS_1	= 2003		! Local UPPER IOIS CS (-10 deg plane) for pins (X AXIS = PINS axis)
LP_IOIS_SYS_1	= 2004		! Local UPPER IOIS CS (+10 deg plane) for pins (X AXIS = PINS axis)

U_GS_SYS_1 	= 3001		! Local UPPER GS CS for bolts (X AXIS = PINS axis)
L_GS_SYS_1 	= 3002		! Local LOWER GS CS for bolts (X AXIS = PINS axis)

U_OIS_SYS_2 	= 1003		! Local UPPER OIS CS (+10 deg plane) for bolts (X AXIS = PINS axis)
L_OIS_SYS_2 	= 1004		! Local LOWER OIS CS (+10 deg plane) for bolts (X AXIS = PINS axis)

UN_IOIS_SYS_2	= 2005		! Local UPPER IOIS CS (+10 deg plane) for pins (X AXIS = PINS axis)
UP_IOIS_SYS_2	= 2006		! Local UPPER IOIS CS (+30 deg plane) for pins (X AXIS = PINS axis)
LN_IOIS_SYS_2	= 2007		! Local UPPER IOIS CS (+10 deg plane) for pins (X AXIS = PINS axis)
LP_IOIS_SYS_2	= 2008		! Local UPPER IOIS CS (+30 deg plane) for pins (X AXIS = PINS axis)

U_GS_SYS_2 	= 3003		! Local UPPER GS CS for bolts (X AXIS = PINS axis)
L_GS_SYS_2 	= 3004		! Local LOWER GS CS for bolts (X AXIS = PINS axis)
!
!=======================================================================
! KDIR POINT TO BUILT PRETENSION SECTION
!
PCR_BOLTS_KDIR	=2.67		! [m] Point along the X axis (Local CS 11) for separation surface location for PCR bolts
OIS_KDIR 	=0.215		! [m] Point along the X axis (Local CS 101,102) for separation surface location for OIS bolts
IOIS_KDIR 	=0.205		! [m] Point along the X axis (Local CS 201,202,203,204) for separation surface location for IOIS pins
GS_TOP_KDIR 	=0.0		! [m] Point along the X axis (Local CS 201,202,203,204) for separation surface location for IOIS pins
GS_BOT_KDIR 	=0.0		! [m] Point along the X axis (Local CS 201,202,203,204) for separation surface location for IOIS pins

!=======================================================================
! REFERENCE TEMPERATURES
!
RoomT		= 292		! [K]
OperT		= 4		! [K]

!===========================================================================
! ELEMENT TYPE ID
!
ET_SOLID		= 1
ET_CONTA178		= 2
ET_C_STAND		= 3
ET_T_STAND		= 4
ET_C_MPC		= 5
ET_T_MPC		= 6
ET_C_SLID		= 7
ET_T_SLID		= 8
ET_MASS			= 9
ET_SOLSH		= 10
ET_LINK			= 11
ET_MPC184		= 12
ET_C_STAND_NOGAP	= 13
ET_T_STAND_NOGAP	= 14
ET_BEAM			= 15
ET_SPRING		= 16
ET_C_WP                 = 17
ET_T_WP                 = 18
ET_C_Bearing            = 19
ET_T_Bearing            = 20
ET_C_Splice_Plate       = 21
ET_T_Splice_Plate       = 22
! At this moment the CS and PF coils are modelled with solid5 elements
! Using the Sourc36 could be an alternative.
! For the momen tthese element definitions are de-activated.
!	ET_SOURC36_PF1   	= 101
!	ET_SOURC36_PF2 		= 102
!	ET_SOURC36_PF3 		= 103
!	ET_SOURC36_PF4 		= 104
!	ET_SOURC36_PF6 		= 106
!	ET_SOURC36_PLASMA 	= 107
!	ET_SOURC36_TF_INNER	= 108
!	ET_SOURC36_TF_OUTER	= 109
!	ET_SOURC36_CSU3		= 110
!	ET_SOURC36_CSU2		= 111
!	ET_SOURC36_CSU1		= 112
!	ET_SOURC36_CSL1		= 113
!	ET_SOURC36_CSL2		= 114
!	ET_SOURC36_CSL3		= 115
!
!===========================================================================
! SECTION ID
!
S_SHEAR_KEYS		= 5000
!===============================================================================
!===============================================================================
/eof
mechanical_model
!===============================================================================
!===============================================================================
!
! GENERATE MECHANICAL MODEL
!
!===============================================================================
!===============================================================================
!
!===============================================================================
! FEM GENERATION
!
/PREP7
*AFUN, DEG
!
!===========================================================================
!===========================================================================
! DELETE UNUSEFUL COMPONENTS
!===========================================================================
!===========================================================================
ESEL, NONE
NSEL, NONE
CMSEL, S, PF2
CMSEL, A, PF3
CMSEL, A, PF4
CMSEL, A, PF5
CMSEL, A, PLASMA
CMSEL, A, CS3U
CMSEL, A, CS2U
CMSEL, A, CS1U
CMSEL, A, CS1L
CMSEL, A, CS2L
CMSEL, A, CS3L
NSLE
!		CMSEL, A, TF1_WINDING_PACK
!		CMSEL, A, TF2_WINDING_PACK
EDELE,ALL
NDELE,ALL

!======================================
! ONLY TYPE B
!
*IF,arg1,EQ,'TF1',THEN
	CMSEL,A, E_TF2
	CMSEL,A, N_TF2
	CSYS,1
	ESEL,A,CENT,Y,10,30
	ESEL,R,CENT,X,2.1,100

!======================================
! ONLY TYPE A
!
*ELSEIF,arg1,EQ,'TF2', THEN
	CMSEL,A, E_TF1
	CMSEL,A, N_TF1
	CSYS,1
	ESEL,A,CENT,Y,-10,9.5
*ENDIF
CSYS,0
EDELE, ALL
NDELE, ALL
ALLSEL,ALL

!======================================
! ONLY TYPE A
!
*IF,arg1,EQ,'TF2', THEN
	CMSEL,S, PF1
	CMSEL, A, PF6

	ESEL,U,CENT,Y,alfa_1,alfa_2
	NSLE

	EDELE, ALL
	NDELE, ALL
*ENDIF

!======================================
! ONLY TYPE B
!
*IF,arg1,EQ,'TF1',THEN
	CMSEL,S, PF1
	CMSEL, A, PF6

	NSLE

	EDELE, ALL
	NDELE, ALL
*ENDIF

! DELETE OLD PILOT NODE FOR PF1 AND PF6
NSEL,S,NODE,,N_PILOT_PF1
NSEL,A,NODE,,N_PILOT_PF6
ESLN
EDELE,ALL
NDELE,ALL

!===============================================================================
!===============================================================================
! DEFINE LOCAL COORDINATE SYSTEMS FOR WP
!===============================================================================
!===============================================================================

!===========================================================================
!CREATE TF NODES FOR SOURC36
!
N,  43,           1.697,             0.0,          -3.951
N,  42,        4.911324,             0.0,       -4.013195
N,  41,          5.3344,             0.0,         -3.1113
N,  40,             4.2,             0.0,           0.029
N,  39,            4.24,             0.0,           0.029
N,  36, 3.9838056878901,             0.0, -6.024863203431
N,  35, 6.4815771440832,             0.0, -6.110789979378
N,  34, 10.750008583169,             0.0,  0.027322001548
N,  33, 6.5001278457297,             0.0, 6.1340828568965
N,  38,          5.3344,             0.0,          2.9828
N,  37,           4.967,             0.0,           4.009
N,  32, 4.2017937633796,             0.0, 6.1461381367233
N,  31,           2.697,             0.0,           4.009
N,  30,           2.697,             0.0,          -3.951

!===========================================================================
!CREATE TF CYCLIC NODES FOR LOCAL CSYS
!
CSYS, 1
NGEN, Coil_2, 20, 30, 44, 1, , 20, ,
CSYS, 0

!===========================================================================
!CREATE TF LOCAL CS BY 3 NODES LOCATION
!
nSys  = 7			! 7 Local Systems per TF coil

*DIM,sysId,ARRAY,2,nSys


!===========================================================================
!LOOP ON COILS
!
*DO, i, Coil_1, Coil_2

	!--------------------------------------------------------------
	! FILL SYSTEM ID ARRAY
	!
	DELTA = ((i-1)*20)
	sysId(i,1) = 30 + DELTA
	sysId(i,2) = 37 + DELTA
	sysId(i,3) = 38 + DELTA
	sysId(i,4) = 39 + DELTA
	sysId(i,5) = 40 + DELTA
	sysId(i,6) = 41 + DELTA
	sysId(i,7) = 42 + DELTA

	!--------------------------------------------------------------
	! cartesian syst for inner leg / y-dir for curvilinear abscissa
	!
	CS, sysId(i,1), CART , 30+DELTA, 43+DELTA, 31+DELTA


	!--------------------------------------------------------------
	! cylindrical for the curved regions / y-dir for curvilinear abscissa
	!
	CS, sysId(i,2), CYLIN, 37+DELTA, 31+DELTA, 32+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,3), CYLIN, 38+DELTA, 32+DELTA, 33+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,4), CYLIN, 39+DELTA, 33+DELTA, 34+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,5), CYLIN, 40+DELTA, 34+DELTA, 35+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,6), CYLIN, 41+DELTA, 35+DELTA, 36+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,7), CYLIN, 42+DELTA, 36+DELTA, 30+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa

*ENDDO

CSYS, 0


!===========================================================================
!===========================================================================
! MATERIAL PROPERTIES - READ MATERIAL LIBRARY AND MODIFY ESYS IF NEEDED
! (Material properties already assigned in the *.cdb)
!===========================================================================
!===========================================================================
!
!===========================================================================
! MODIFY OIS SHIMS ESYS TO CORRECTLY APPLY MAT PROPERTIES
!

!======================================
! ONLY TYPE B
!
*IF,arg1,EQ,'TF1', THEN
	CMSEL,S, TF1_OIS_UP_SHIMS
	CMSEL,A, TF1_OIS_DOWN_SHIMS
	EMODIF, ALL, ESYS, GlobCyl
!======================================
! ONLY TYPE A
!
*ELSEIF,arg1,EQ,'TF2',THEN
	CMSEL,S, TF2_OIS_UP_SHIMS
	CMSEL,A, TF2_OIS_DOWN_SHIMS
	EMODIF, ALL, ESYS, GlobCyl
!======================================
! TWO COILS
!
*ELSEIF,arg1,EQ,'TF1_TF2', THEN
	CMSEL,S, TF1_OIS_UP_SHIMS
	CMSEL,A, TF1_OIS_DOWN_SHIMS
	CMSEL,A, TF2_OIS_UP_SHIMS
	CMSEL,A, TF2_OIS_DOWN_SHIMS
	EMODIF, ALL, ESYS, GlobCyl
*ENDIF


!===========================================================================
!===========================================================================
! MODIFY WP ESYS TO CORRECTLY APPLY MAT PROPERTIES
!

!===========================================================================
! initialize Variables
!
eFailed=0

*DO, k, Coil_1, Coil_2

	ESEL, NONE
	CMSEL, NONE
	NSEL, NONE

	!======================================
	! TYPE B
	!
	*IF, 	 k, EQ, 1, THEN
		CMSEL,S, TF1_WP
		CMSEL,A, TF1_WP_JOINT
	!======================================
	! TYPE A
	!
	*ELSEIF, k, EQ, 2, THEN
		CMSEL,S, TF2_WP
		CMSEL,A, TF2_WP_JOINT
	*ENDIF

	!===========================================================================
	! initialize Variables
	!
	nTol  	    = 1e-1
	jSys	    = -1E-30

	!=======================================================================
	! TF Geometrical data (to isolate inner leg from outer leg and first two arcs)
	!
	zINNERup   =  4.009
	zINNERdown = -3.951
	rINNER	   = 3.047


	!===========================================================================
	! Select components
	!
	NSLE, S
	!===========================================================================
	! Get ELEM numbers
	!
	*GET,nE,ELEM,,COUNT
	*GET,iE,ELEM,,NUM,MIN
	NSEL, NONE
	ESEL, NONE
	CMSEL, NONE
	!===========================================================================
	! LOOP ON ELEMENTS
	!
	*DO,i,1,nE

		NSEL, NONE
		ESEL, NONE
		ESEL, S, ELEM, , iE

		!===========================================================================
		! FIND correct Local Coordinate System
		!
		yMin  = 1.0E30
		CSYS, GlobCyl
		*GET, rELEM, ELEM, iE, CENT, X		! Centroid X local of the iE elem in global cylindrical CS
		*GET, zELEM, ELEM, iE, CENT, Z		! Centroid X local of the iE elem in global cylindrical CS

		!===========================================================================
		! UPPER PART
		!
		*IF, zELEM, GE, 0, THEN

			!===========================================================================
			! INNER LEGS
			!
			*IF, zELEM, LE, zINNERup, AND, rELEM, LE, rINNER, THEN
				jSys = sysId(k,1)
			!===========================================================================
			! ARCS
			!
			*ELSE
				*DO,j,2,4
					CSYS,sysId(k,j)
					*GET, yC, ELEM, iE, CENT, Y		! Centroid y local of the iE elem
					*IF,yC,GE,nTol,AND,yC,LT,yMin,THEN
						jSys = sysId(k,j)
						yMin = yC
					*ENDIF
				*ENDDO
			*ENDIF

		!===========================================================================
		! LOWER PART
		!
		*ELSE

			!===========================================================================
			! INNER LEGS
			!
			*IF, zELEM, GE, zINNERdown, AND, rELEM, LE, rINNER, THEN
				jSys = sysId(k,1)
			!===========================================================================
			! ARCS
			!
			*ELSE
				*DO,j,5,7
					CSYS,sysId(k,j)
					*GET, yC, ELEM, iE, CENT, Y		! Centroid y local of the iE elem
					*IF,yC,GE,nTol,AND,yC,LT,yMin,THEN
						jSys = sysId(k,j)
						yMin = yC
					*ENDIF
				*ENDDO
			*ENDIF


		*ENDIF


		!===========================================================================
		! evaluate director cosines to get current direction in Global CS
		!
		*IF,jSys,GT,0,THEN

			EMODIF, ALL, ESYS, jSys

		*ELSE
			eFailed=eFailed+1

		*ENDIF

		!======================================
		! TYPE B
		!
		*IF, 	 k, EQ, 1, THEN
			CMSEL,S, TF1_WP
			CMSEL,A, TF1_WP_JOINT
		!======================================
		! TYPE A
		!
		*ELSEIF, k, EQ, 2, THEN
			CMSEL,S, TF2_WP
			CMSEL,A, TF2_WP_JOINT
		*ENDIF

		*GET,iEnew,ELEM,iE,NXTH
		iE=iEnew
		jSys= -1E-30
	*ENDDO
*ENDDO

CSYS, 0

!=======================================================================
! MODIFY ESYS FOR PRECOPRESSION RING
! This section is skipped.
            *GO,:SKIP
!======================================
! ONLY TYPE B
!
*IF,arg1, EQ,'TF1', THEN
	CMSEL, S, TF1_PRECOMPRESSION_RING
	EMODIF, ALL, ESYS, GlobCyl
!======================================
! ONLY TYPE A
!
*ELSEIF,arg1,EQ,'TF2',THEN
	CMSEL, S, TF2_PRECOMPRESSION_RING
	EMODIF, ALL, ESYS, GlobCyl
!======================================
! TWO COILS
!
*ELSEIF,arg1,EQ,'TF1_TF2',THEN
	CMSEL, S, TF1_PRECOMPRESSION_RING
	CMSEL, A, TF2_PRECOMPRESSION_RING
	EMODIF, ALL, ESYS, GlobCyl
*ENDIF
:SKIP

!===========================================================================
!===========================================================================
! APPLY PRET ON GRAVITY SUPPORT BOLTS AS AN INITIALE STRAIN STATE TO SIMULATE PRET
!===========================================================================
!===========================================================================

!===========================================================================
! CONSTRAIN ROTATIONAL DOF FOR BEAM188 ON GRAVITY SUPPORT
!
ESEL, S, TYPE, ,ET_BEAM
NSLE, S
D, ALL, ROTX, 0.0
D, ALL, ROTY, 0.0
D, ALL, ROTZ, 0.0
NSEL, NONE

!===========================================================================
!===========================================================================
! CREATE BOLTS PRETENSIONING SECTIONS
!===========================================================================
!===========================================================================
CMSEL, NONE
NSEL, NONE
ESEL, NONE
ID=0

*DO, k, Coil_1, Coil_2

	!===============================================================================
	! PCR TOP BOLTS
	!
	CMSEL,NONE
	*DO, i, 1, 4
		*DO, j, 1, 2
			ESEL, NONE
			NSEL, NONE
			CMSEL,S,E_PCR_U%k%%i%%j%
			ID=ID+1
			NSLE, S
			PSMESH, ID, SPCRU%k%%i%%j%, , ALL,, GlobCyl, X, PCR_BOLTS_KDIR, , , ,PPCRU%k%%i%%j%, NPCRU%k%%i%%j%
			*GET, nP_PCR_U%k%%i%%j%, SCTN, ID, 3
		*ENDDO
	*ENDDO
	!===============================================================================
	! PCR BOTTOM BOLTS
	!
	CMSEL,NONE
	*DO, i, 1, 4
		*DO, j, 1, 2
			ESEL, NONE
			NSEL, NONE
			CMSEL,S,E_PCR_L%k%%i%%j%
			ID=ID+1
			NSLE, S
			PSMESH, ID, SPCRL%k%%i%%j%, , ALL,, GlobCyl, X, PCR_BOLTS_KDIR, , , ,PPCRL%k%%i%%j%, NPCRL%k%%i%%j%
			*GET, nP_PCR_L%k%%i%%j%, SCTN, ID, 3

		*ENDDO
	*ENDDO

*ENDDO
ALLSEL,ALL

!===========================================================================
!===========================================================================
! GENERATE SYMMETRY BC
!===========================================================================
!===========================================================================
ESEL, NONE
NSEL, NONE
CMSEL, NONE

!======================================
! ONLY TYPE B
!
*IF,arg1,EQ,'TF1',THEN
	ID_neg = 1
	ID_pos = 2

!======================================
! ONLY TYPE A
!
*ELSEIF,arg1,EQ,'TF2',THEN

	ID_neg = 2
	ID_pos = 3

!======================================
! TWO COILS
!
*ELSEIF,arg1,EQ,'TF1_TF2',THEN

	ID_neg = 1
	ID_pos = 3

*ENDIF

!=============================================
!CRYO RING
!
CP_Count=0
CSYS, GlobCyl
CMSEL, S, N_SYM_RING_%ID_neg%
*GET, nN, NODE, , COUNT
iN=NDNEXT(0)
*DO, i, 1, nN
	iNx=NX(iN)
	iNy=NY(iN)
	iNz=NZ(iN)
	iNy_sym=iNy+alfa
	CMSEL, A,  N_SYM_RING_%ID_pos%
	iN_sym=NODE(iNx,iNy_sym,iNz)
	NROTAT, ALL
	CP, NEXT, UX, iN, iN_sym
	CP, NEXT, UY, iN, iN_sym
	CP, NEXT, UZ, iN, iN_sym
	ESEL, NONE
	NSEL, NONE
	CMSEL, S, N_SYM_RING_%ID_neg%
	iNnew=NDNEXT(iN)
	iN=iNnew
	CP_Count=CP_Count+3
*ENDDO
CSYS, 0
ESEL, NONE
NSEL, NONE
CP_RING=CP_Count


!=============================================
!IOIS
!
CP_Count=0
CSYS, GlobCyl
CMSEL, S, N_SYM_IOIS_%ID_neg%
*GET, nN, NODE, , COUNT
iN=NDNEXT(0)
*DO, i, 1, nN
	iNx=NX(iN)
	iNy=NY(iN)
	iNz=NZ(iN)
	iNy_sym=iNy+alfa
	CMSEL, A, N_SYM_IOIS_%ID_pos%
	iN_sym=NODE(iNx,iNy_sym,iNz)
	NROTAT, ALL
	CP, NEXT, UX, iN, iN_sym
	CP, NEXT, UY, iN, iN_sym
	CP, NEXT, UZ, iN, iN_sym
	ESEL, NONE
	NSEL, NONE
	CMSEL, S, N_SYM_IOIS_%ID_neg%
	iNnew=NDNEXT(iN)
	iN=iNnew
	CP_Count=CP_Count+3

*ENDDO
CSYS, 0
ESEL, NONE
NSEL, NONE
CP_IOIS=CP_Count


!=============================================
!OIS BOLTS
!
CSYS,1
*IF,arg1,EQ,'TF1',THEN
	CMSEL,S,OIS_M130
	CMSEL,A,OIS_M110
	NSLE
	NSEL,R,LOC,Y,alfa_1-1,alfa_1-0.2
	CM,nsymA,NODE
	NSLE
	NSEL,R,LOC,Y,alfa_2-0.5,alfa_2+1
	CM,nsymB,NODE
*ELSEIF,arg1,EQ,'TF2',THEN
	CMSEL,S,OIS_M130
	CMSEL,A,OIS_M110
	NSLE
	NSEL,R,LOC,Y,alfa_1-1,alfa_1-0.2
	CM,nsymA,NODE
	NSLE
	NSEL,R,LOC,Y,alfa_2-0.5,alfa_2+1
	CM,nsymB,NODE
*ELSEIF,arg1,EQ,'TF1_TF2',THEN
	CMSEL,S,OIS_M130
	CMSEL,A,OIS_M110
	NSLE
	NSEL,R,LOC,Y,alfa_1-1,alfa_1-0.2
	CM,nsymA,NODE
	NSLE
	NSEL,R,LOC,Y,alfa_2-0.5,alfa_2+1
	CM,nsymB,NODE
*ENDIF
CMSEL,S,nsymA
CMSEL,A,nsymB
CSYS,1
CPCYC, All,0.001, 1,0, alfa, 0,
CSYS,0

!=============================================
!OIS SHIMS
!
CP_Count=0
CSYS, GlobCyl
CMSEL, S, N_SYM_OIS_SHIMS_%ID_neg%
*GET, nN, NODE, , COUNT
iN=NDNEXT(0)
*DO, i, 1, nN
	iNx=NX(iN)
	iNy=NY(iN)
	iNz=NZ(iN)
	iNy_sym=iNy+alfa
	CMSEL, A, N_SYM_OIS_SHIMS_%ID_pos%
	iN_sym=NODE(iNx,iNy_sym,iNz)
	NROTAT, ALL
	CP, NEXT, UX, iN, iN_sym
	CP, NEXT, UY, iN, iN_sym
	CP, NEXT, UZ, iN, iN_sym
	ESEL, NONE
	NSEL, NONE
	CMSEL, S, N_SYM_OIS_SHIMS_%ID_neg%
	iNnew=NDNEXT(iN)
	iN=iNnew
	CP_Count=CP_Count+3

*ENDDO
CSYS, 0
ESEL, NONE
NSEL, NONE
CP_SHIMS=CP_Count

!=============================================
!WEDGING
!
CP_Count=0
CSYS, GlobCyl
CMSEL, S, N_SYM_WEDGE_%ID_neg%
*GET, nN, NODE, , COUNT
iN=NDNEXT(0)
*DO, i, 1, nN
	iNx=NX(iN)
	iNy=NY(iN)
	iNz=NZ(iN)
	iNy_sym=iNy+alfa
	CMSEL, A, N_SYM_WEDGE_%ID_pos%
	iN_sym=NODE(iNx,iNy_sym,iNz)
	NROTAT, ALL
	CP, NEXT, UX, iN, iN_sym
	CP, NEXT, UY, iN, iN_sym
	CP, NEXT, UZ, iN, iN_sym
	ESEL, NONE
	NSEL, NONE
	CMSEL, S, N_SYM_WEDGE_%ID_neg%
	iNnew=NDNEXT(iN)
	iN=iNnew
	CP_Count=CP_Count+3

*ENDDO
CSYS, 0
ESEL, NONE
NSEL, NONE
CP_WEDGE=CP_Count

!===============
! POLOIDAL KEYS
!
CP_Count=0
CSYS, GlobCyl
CMSEL, S, N_SYM_KEYS_%ID_neg%
*GET, nN, NODE, , COUNT
iN=NDNEXT(0)
*DO, i, 1, nN
	iNx=NX(iN)
	iNy=NY(iN)
	iNz=NZ(iN)
	iNy_sym=iNy+alfa
	CMSEL, A, N_SYM_KEYS_%ID_pos%
	NROTAT, ALL
	iN_sym=NODE(iNx,iNy_sym,iNz)
	CP, NEXT, UX, iN, iN_sym
	CP, NEXT, UY, iN, iN_sym
	CP, NEXT, UZ, iN, iN_sym
	ESEL, NONE
	NSEL, NONE
	CMSEL, S, N_SYM_KEYS_%ID_neg%
	iNnew=NDNEXT(iN)
	iN=iNnew
	CP_Count=CP_Count+3

*ENDDO
CSYS, 0
ESEL, NONE
NSEL, NONE
CP_KEYS=CP_Count


!=============================================
!PCR
!
CP_Count=0
CSYS, GlobCyl
CMSEL, S, N_SYM_PCR_%ID_neg%
*GET, nN, NODE, , COUNT
iN=NDNEXT(0)
*DO, i, 1, nN
	iNx=NX(iN)
	iNy=NY(iN)
	iNz=NZ(iN)
	iNy_sym=iNy+alfa
	CMSEL, A, N_SYM_PCR_%ID_pos%
	iN_sym=NODE(iNx,iNy_sym,iNz)
	NROTAT, ALL
	CP, NEXT, UX, iN, iN_sym
	CP, NEXT, UY, iN, iN_sym
	CP, NEXT, UZ, iN, iN_sym
	ESEL, NONE
	NSEL, NONE
	CMSEL, S, N_SYM_PCR_%ID_neg%
	iNnew=NDNEXT(iN)
	iN=iNnew
	CP_Count=CP_Count+3

*ENDDO
CSYS, 0
ESEL, NONE
NSEL, NONE
CP_PCR=CP_Count

!=============================================
!CS (ONLY IF TF COIL B (arg1=1) OR BOTH (arg1=3))
!
*IF,arg1,EQ,'TF1',OR,arg1,EQ,'TF1_TF2',THEN
	ID_neg = 1
	ID_pos = 2
	alfa = 40

	CP_Count=0
	CSYS, GlobCyl
	CMSEL, S, N_SYM_CS_%ID_neg%
	*GET, nN, NODE, , COUNT
	iN=NDNEXT(0)
	*DO, i, 1, nN
		iNx=NX(iN)
		iNy=NY(iN)
		iNz=NZ(iN)
		iNy_sym=iNy+alfa
		CMSEL, A, N_SYM_CS_%ID_pos%
		iN_sym=NODE(iNx,iNy_sym,iNz)
		NROTAT, ALL
		CP, NEXT, UX, iN, iN_sym
		CP, NEXT, UY, iN, iN_sym
		CP, NEXT, UZ, iN, iN_sym
		ESEL, NONE
		NSEL, NONE
		CMSEL, S, N_SYM_CS_%ID_neg%
		iNnew=NDNEXT(iN)
		iN=iNnew
		CP_Count=CP_Count+3

	*ENDDO
	CSYS, 0
	ESEL, NONE
	NSEL, NONE
	CP_CS=CP_Count
*ENDIF
    CSYS, 0


!===========================================================================
! MODIFY CONTACT STIFFNESS OF IIS SHEAR KEYS (SAME STIFFNESS AS IN SUBMODEL)
! NEW UNIFORM CONTACT STIFFNESS FOR IIS
! D_iis = 1.0E13 N/m
! Stiffness in submodel is:
! D_iis_sub = 2.5E+13 N/m
! Difference is necessary due to different amount of contact layers in IIS
! See documentation:
! ITER_TO3D1_TB3_IIS_StiffnessTest_2019_01_22
!===========================================================================
!
!=====================
! Modify for upper IIS
!
*IF,arg1,EQ,'TF1',THEN
	*DO,itel,1301,1308
		RMODIF,itel,3,-1e+13
	*ENDDO
*ELSEIF,arg1,EQ,'TF2',THEN
	*DO,itel,1305,1312
		RMODIF,itel,3,-1e+13
	*ENDDO
*ELSEIF,arg1,EQ,'TF1_TF2',THEN
	*DO,itel,1301,1312
		RMODIF,itel,3,-1e+13
	*ENDDO
*ENDIF
!=====================
! Modify for bottom IIS
!
*IF,arg1,EQ,'TF1',THEN
	*DO,itel,1201,1208
		RMODIF,itel,3,-1e+13
	*ENDDO
*ELSEIF,arg1,EQ,'TF2',THEN
	*DO,itel,1205,1212
		RMODIF,itel,3,-1e+13
	*ENDDO
*ELSEIF,arg1,EQ,'TF1_TF2',THEN
	*DO,itel,1201,1212
		RMODIF,itel,3,-1e+13
	*ENDDO
*ENDIF

!===========================================================================
! MODIFY CONTACT STIFFNESS OF OIS SHIMS
! NEW UNIFORM CONTACT STIFFNESS FOR OIS
! D_OIS = 0.1E+13 N/m
!===========================================================================
!
!================================
! Modify stiffness for OIS shims
!
*DO,itel,1141,1142
  RMODIF,itel,3,-1e+12
*ENDDO

!===========================================================================
! MODIFY CONTACT STIFFNESS OF IOIS
! NEW UNIFORM CONTACT STIFFNESS FOR UPPER AND LOWER IOIS
! D_IOIS = 1.0E+13 N/m
!===========================================================================
!
!================================
! Modify stiffness for IOIS
!
*DO,itel,1152,1154,2
   RMODIF,itel,3,-1e+13
*ENDDO
*DO,itel,1151,1153,2
   ESEL,S,real,,itel
   EDELE,ALL
*ENDDO

!===========================================================================
! MODIFY CONTACT FOR WP
! NEW UNIFORM CONTACT STIFFNESS FOR WP
! D_WP = 2.0E13 N/m
!===========================================================================
!
!================================
! Modify stiffness for TF WP
!
! RMODIF,1101,3,-2e+12
            ! RMODIF,1102,3,-2e+12
!===========================================================================
! MODIFY CONTACT STIFFNESS OF GS SUPPORT
! NEW UNIFORM CONTACT STIFFNESS FOR GS
! D_GS = 2.0E12 N/m
!===========================================================================
!
! Modify stiffness for GS Support
!
!*DO,itel,1134,1136
!RMODIF,itel,3,-8e+12
!*ENDDO
!RMODIF,1131,3,-1E+12
!RMODIF,1137,3,-1E+12
!RMODIF,1138,3,-1E+12

!===========================================================================
! MODIFY CONTACT STIFFNESS OF PCR
! NEW UNIFORM CONTACT STIFFNESS FOR PCR
! D_PCR = 0.2E+13 N/m
!===========================================================================
!
!================================
! Modify stiffness for PCR contact
!
!*DO,itel,1181,1186
!RMODIF,itel,3,-2E+12
!*ENDDO

!===========================================================================
! ASSIGN REAL CONSTANT FOR GAPS (CONTA178) REPRESENTING WEDGING
!===========================================================================
!

!================================
! Increase contcat stiffness of 2-node conta178 in central ge.
!
allsel
            !RMODIF,300,1,-0.2E+12
            !RMODIF,310,1,-0.2E+12
!================================
!edge gap elements
!
!RMODIF,301,1,-0.1E+12
            !RMODIF,311,1,-0.1E+12

!===========================================================================
! GENERATE PF 1 and PF 6 contact to TFC by No separation
! ONLY IF TF TYPE B IS ACTIVE
!===========================================================================

*IF,arg1,EQ,'TF1',THEN
*ELSE
! defining the componetnt names for selection and applying the boundary conditions.
!

*dim,pf_name,CHAR,7
pf_name(1)= 'PF1', 'PF2', 'PF3', 'PF4', 'PF5', 'PF6', 'PLASMA'
*dim,pf_edge,CHAR,7,2
pf_edge(1,1)= 'PF1_N','PF2_N','PF3_N','PF4_N','PF5_N','PF6_N', 'PLASMA_N'
pf_edge(1,2)= 'PF1_P','PF2_P','PF3_P','PF4_P','PF5_P','PF6_P', 'PLASMA_P'

! defining the radial and vertical postion and dimensions of the PF coils
! Plasma position in the matrix is a dummy value. Is overwritten later
!
*dim,pf_geo,,4,7
pf_geo(1,1) = 	3.943,  7.564,  0.959,  0.984	!PF1
pf_geo(1,2) = 	8.285,  6.530,  0.580,  0.715	!PF2
pf_geo(1,3) =  11.992,  3.265,  0.696,  0.954	!PF3
pf_geo(1,4) =  11.963, -2.244,  0.638,  0.954	!PF4
pf_geo(1,5) = 	8.391, -6.737,  0.813,  0.954	!PF5
pf_geo(1,6) = 	4.334, -7.477,  1.559,  1.108	!PF6
pf_geo(1,7) =   6.300,  0.500,  0.010,  0.010	!Default Plasma position

! Generate contact PF1
CMSEL,S,PF1
NSLE
*GET, zmin, NODE, 0, MNLOC,Z
NSEL,R,LOC,Z,zmin
CSYS,1
NSEL,U,LOC,Y,alfa_1
NSEL,U,LOC,Y,alfa_2
CM,ntarg,NODE
CMSEL,S,e_tf2
NSLE
NSEL,R,LOC,Z,6.8768-0.005,6.8768+0.006
NSEL,R,LOC,X,3.54,5.0
CM,ncont,NODE

! NO SEP CONTACT
*get,rmax,rcon,,num,max
*get,mmax,mat,,num,max
*get,tmax,etyp,,num,max
*get,sect_max,SECP,num,max ! Beware of different syntax
myid=max(rmax,mmax,tmax,sect_max)+1
*set,cid,myid
*set,tid,myid+1
et,cid,174
et,tid,170
keyo,cid,12,4              ! no separation always
keyo,cid,2,2               ! MPC contact.  Valid only for bonded or no separation.  Requires nodal detection
keyo,cid,4,2               ! on nodal point - normal to target surface (from Program Controlled setting)
keyo,cid,7,0               ! No Prediction
keyo,cid,5,0
!
! Generate Contact elements
cmsel,s,ncont
esln
type,cid
mat ,cid
real,cid
esurf
! Generate TARGET elements
cmsel,s,ntarg
esln
type,tid
mat ,cid
real,cid
esurf
rmodif,cid,6,-0.2

! Generate contact PF6
CMSEL,S,PF6
NSLE
*GET, zmin, NODE, 0, MXLOC,Z
CSYS,1
NSEL,R,LOC,Z,zmin
NSEL,U,LOC,Y,alfa_1
NSEL,U,LOC,Y,alfa_2
CM,ntarg,NODE
CMSEL,S,e_tf2
NSLE
NSEL,R,LOC,Z,-6.8-0.005,-6.8+0.006
NSEL,R,LOC,X,3.54,4.7
CM,ncont,NODE

! NO SEP CONTACT
*get,rmax,rcon,,num,max
*get,mmax,mat,,num,max
*get,tmax,etyp,,num,max
*get,sect_max,SECP,num,max ! Beware of different syntax
myid=max(rmax,mmax,tmax,sect_max)+1
*set,cid,myid
*set,tid,myid+1
et,cid,174
et,tid,170
keyo,cid,12,4              ! no separation always
keyo,cid,2,2               ! MPC contact.  Valid only for bonded or no separation.  Requires nodal detection
keyo,cid,4,2               ! on nodal point - normal to target surface (from Program Controlled setting)
keyo,cid,7,0               ! No Prediction
keyo,cid,5,0
!
! Generate Contact elements
cmsel,s,ncont
esln
type,cid
mat ,cid
real,cid
esurf
! Generate TARGET elements
cmsel,s,ntarg
esln
type,tid
mat ,cid
real,cid
esurf
rmodif,cid,6,-0.2

! GENERATE SYMMETRY CONDITIONS
CMSEL,S,pf1
CMSEL,A,pf6
CSYS,1
NSLE
NSEL,U,LOC,Y,alfa_1+1,alfa_2-1
CPCYC, All,0.001, 1,0, alfa, 0,
CSYS,0

! FIX ONE NODE IN Y DIRECTION
CSYS,1
fixalfa=(alfa_1+alfa_2)/2
CMSEL,S,pf1
NSLE
NSEL,R,LOC,Y,fixalfa-2,fixalfa+2
*GET,nN,NODE,,NUM,MIN
D,nN,UY,0
CMSEL,S,pf6
NSLE
NSEL,R,LOC,Y,fixalfa-2,fixalfa+2
*GET,nN,NODE,,NUM,MIN
D,nN,UY,0
CSYS,0


! ADD PF1 and PF6 to gravity acceleration component
CMSEL,S,E_SOLIDS
ESEL,A,ENAM,,185
CM,E_SOLIDS,ELEM
ALLSEL

*ENDIF

!===========================================================================
! MODIFY CONTACT FOR PF1 AND PF6 ATTACHMENT
! ADD SOLID PLATE TO ELIMINATE THE GAP
!===========================================================================
!
!===========
! PF 1
!
ALLSEL
!============================
! Set TYPE, MAT, REAL, SECNUM
NUMMAT = 2
NUMSEC = 0
*GET,MREAL,ELEM,0,RELM
NUMREAL = MREAL+1
*GET, NUMTYPE, ELEM, 0, TYPM
NUMTYPE = NUMTYPE + 1
ET,NUMTYPE,SOLID185
TYPE, NUMTYPE
MAT, NUMMAT
REAL, NUMREAL
!============================
! SELECT OLD CONTACT ELEMENTS
!
esel,s,real,,7593
ESEL,R,ENAM,,170
NSLE
CM,ntarg2,NODE
esel,s,real,,7593
ESEL,R,ENAM,,174
NSLE
CM,ncont1,NODE
*GET,ecount,ELEM,,COUNT
*DIM,nPF1,ARRAY,ecount,8,4
emin=0
!============================
! GENERATE ADDITIONAL ELEMENT
!
*DO,i,1,ecount
	*GET, elnum, ELEM, emin, NXTH
	*DO,k,1,4
			nmin = NELEM(elnum,k)
			*GET,nPF1(i,k,2), NODE, nmin, LOC, X
			*GET,nPF1(i,k+4,2), NODE, nmin, LOC, X
			*GET,nPF1(i,k,3),NODE,nmin,LOC,Y
			*GET,nPF1(i,k+4,3),NODE,nmin,LOC,Y
			*GET,nPF1(i,k,4),NODE,nmin,LOC,Z
			nPF1(i,k+4,4)=nPF1(i,k,4)+0.19
			N,,nPF1(i,k,2),nPF1(i,k,3),nPF1(i,k,4)
			*GET,nPF1(i,k,1),NODE,,NUM,MAXD
			N,,nPF1(i,k+4,2),nPF1(i,k+4,3),nPF1(i,k+4,4)
			*GET,nPF1(i,k+4,1),NODE,,NUM,MAXD
	*ENDDO
	E,nPF1(i,1,1),nPF1(i,2,1),nPF1(i,3,1),nPF1(i,4,1),nPF1(i,5,1),nPF1(i,6,1),nPF1(i,7,1),nPF1(i,8,1)
	emin=elnum
*ENDDO
ESEL,U,ENAM,,170,174
NSLE
NUMMRG,node,0.002
!============================
! DELETE OLD CONTACT ELEMENTS
!
CM,etmp,ELEM
ESEL,S,REAL,,7593
EDELE,ALL
CMSEL,S,etmp
NSLE
*GET,zloc,NODE,nmin,LOC,Z
NSEL,R,LOC,Z,zloc
CM,ntarg1,NODE
NSLE
NSEL,U,LOC,Z,zloc
CM,ncont2,NODE
!======================
! CREATE BONDED CONTACT
!
*get,rmax,rcon,,num,max
*get,mmax,mat,,num,max
*get,tmax,etyp,,num,max
*get,sect_max,SECP,num,max ! Beware of different syntax
myid=max(rmax,mmax,tmax,sect_max)+1
*set,cid,myid
*set,tid,myid+1
et,cid,174
et,tid,170
keyo,cid,10,0              ! adjust contact stiffness each NR iteration (from Program Controlled setting)
keyo,cid,12,5              ! bonded always
keyo,cid,2,2			   ! MPC contact.  Valid only for bonded or no separation.  Requires nodal detection
keyo,cid,4,2               ! on nodal point - normal to target surface (from Program Controlled setting)
keyo,cid,9,1               ! ignore initial gaps/penetration
keyo,cid,7,0               ! No Prediction
cmsel,s,ncont1			   ! Generate Contact elements
esln
type,cid
mat ,cid
real,cid
esurf
cmsel,s,ntarg1			   ! Generate TARGET elements
esln
type,tid
mat ,cid
real,cid
esurf
!======================
! CREATE NO SEP CONTACT
!
*get,rmax,rcon,,num,max
*get,mmax,mat,,num,max
*get,tmax,etyp,,num,max
*get,sect_max,SECP,num,max ! Beware of different syntax
myid=max(rmax,mmax,tmax,sect_max)+1
*set,cid,myid
*set,tid,myid+1
et,cid,174
et,tid,170
keyo,cid,10,0              ! adjust contact stiffness each NR iteration (from Program Controlled setting)
keyo,cid,12,4              ! no separation always
keyo,cid,2,2               ! MPC contact.  Valid only for bonded or no separation.  Requires nodal detection
keyo,cid,4,2               ! on nodal point - normal to target surface (from Program Controlled setting)
keyo,cid,9,1               ! ignore initial gaps/penetration
keyo,cid,7,0               ! No Prediction
cmsel,s,ncont2			   ! Generate CONTACT elements
esln
type,cid
mat ,cid
real,cid
esurf
cmsel,s,ntarg2			   ! Generate TARGET elements
esln
type,tid
mat ,cid
real,cid
esurf
!============
! PF 6
!
ALLSEL
!============================
! Set TYPE, MAT, REAL, SECNUM
NUMMAT = 2
NUMSEC = 0
*GET,MREAL,ELEM,0,RELM
NUMREAL = MREAL+1
*GET, NUMTYPE, ELEM, 0, TYPM
NUMTYPE = NUMTYPE + 1
ET,NUMTYPE,SOLID185
TYPE, NUMTYPE
MAT, NUMMAT
REAL, NUMREAL
!============================
! SELECT OLD CONTACT ELEMENTS
!
esel,s,real,,7595
ESEL,R,ENAM,,170
NSLE
CM,ntarg2,NODE
esel,s,real,,7595
ESEL,R,ENAM,,174
NSLE
CM,ncont1,NODE
*GET,ecount,ELEM,,COUNT
*DIM,nPF6,ARRAY,ecount,8,4
emin=0
!============================
! GENERATE ADDITIONAL ELEMENT
!
*DO,i,1,ecount
	*GET, elnum, ELEM, emin, NXTH
	*DO,k,1,4
			nmin = NELEM(elnum,k)
			*GET,nPF6(i,k,2), NODE, nmin, LOC, X
			*GET,nPF6(i,k+4,2), NODE, nmin, LOC, X
			*GET,nPF6(i,k,3),NODE,nmin,LOC,Y
			*GET,nPF6(i,k+4,3),NODE,nmin,LOC,Y
			*GET,nPF6(i,k,4),NODE,nmin,LOC,Z
			nPF6(i,k+4,4)=nPF6(i,k,4)-0.123
			N,,nPF6(i,k,2),nPF6(i,k,3),nPF6(i,k,4)
			*GET,nPF6(i,k,1),NODE,,NUM,MAXD
			N,,nPF6(i,k+4,2),nPF6(i,k+4,3),nPF6(i,k+4,4)
			*GET,nPF6(i,k+4,1),NODE,,NUM,MAXD
	*ENDDO
	E,nPF6(i,1,1),nPF6(i,2,1),nPF6(i,3,1),nPF6(i,4,1),nPF6(i,5,1),nPF6(i,6,1),nPF6(i,7,1),nPF6(i,8,1)
	emin=elnum
*ENDDO
ESEL,U,ENAM,,170,174
NSLE
NUMMRG,node,0.002
!============================
! DELETE OLD CONTACT ELEMENTS
!
CM,etmp,ELEM
ESEL,S,REAL,,7595
ESEL,R,ENAM,,170,174
EDELE,ALL
CMSEL,S,etmp
NSLE
*GET,zloc,NODE,nmin,LOC,Z
NSEL,R,LOC,Z,zloc
CM,ntarg1,NODE
NSLE
NSEL,U,LOC,Z,zloc
CM,ncont2,NODE
!======================
! CREATE BONDED CONTACT
!
*get,rmax,rcon,,num,max
*get,mmax,mat,,num,max
*get,tmax,etyp,,num,max
*get,sect_max,SECP,num,max ! Beware of different syntax
myid=max(rmax,mmax,tmax,sect_max)+1
*set,cid,myid
*set,tid,myid+1
et,cid,174
et,tid,170
keyo,cid,10,0              ! adjust contact stiffness each NR iteration (from Program Controlled setting)
keyo,cid,12,5              ! bonded always
keyo,cid,2,2			   ! MPC contact.  Valid only for bonded or no separation.  Requires nodal detection
keyo,cid,4,2               ! on nodal point - normal to target surface (from Program Controlled setting)
keyo,cid,9,1               ! ignore initial gaps/penetration
keyo,cid,7,0               ! No Prediction
cmsel,s,ncont1			   ! Generate Contact elements
esln
type,cid
mat ,cid
real,cid
esurf
cmsel,s,ntarg1			   ! Generate TARGET elements
esln
type,tid
mat ,cid
real,cid
esurf
!======================
! CREATE NO SEP CONTACT
!
*get,rmax,rcon,,num,max
*get,mmax,mat,,num,max
*get,tmax,etyp,,num,max
*get,sect_max,SECP,num,max ! Beware of different syntax
myid=max(rmax,mmax,tmax,sect_max)+1
*set,cid,myid
*set,tid,myid+1
et,cid,174
et,tid,170
keyo,cid,10,0              ! adjust contact stiffness each NR iteration (from Program Controlled setting)
keyo,cid,12,4              ! no separation always
keyo,cid,2,2               ! MPC contact.  Valid only for bonded or no separation.  Requires nodal detection
keyo,cid,4,2               ! on nodal point - normal to target surface (from Program Controlled setting)
keyo,cid,9,1               ! ignore initial gaps/penetration
keyo,cid,7,0               ! No Prediction
cmsel,s,ncont2			   ! Generate CONTACT elements
esln
type,cid
mat ,cid
real,cid
esurf
cmsel,s,ntarg2			   ! Generate TARGET elements
esln
type,tid
mat ,cid
real,cid
esurf
            !
            ! Define NODE Components for application of PF1 and PF6 Preload forces
            ! and Radial Friction forces in MECH_RUN.mac
            !
            ! Nodes between PF1 and 3 TF-Coil ribs for applying preload and radial Friction Force
            !
            esel,s,type,,7600  $esel,r,mat,,7600    $esel,r,real,,7600
            nsle
            local,15, 0, 0, 0, 0, 20   $nrot,all
            cm,N_PF1_LOAD,node     $CSYS,0 $allsel
            !
            ! Nodes between PF6 and 3 TF-Coil ribs for applying preload and radial Friction Force
            !
            esel,s,type,,7605  $esel,r,mat,,7605    $esel,r,real,,7605
            nsle
            local,15, 0, 0, 0, 0, 20   $nrot,all
            cm,N_PF6_LOAD,node     $CSYS,0 $allsel
            !
!===============================================================================
! SAVE MODEL
!
! Modify the MPC-184 Elements to avoid heavy mass elements
esel,s,type,,12
esel,r,mat,,2   ! Stainless Steel elements
emodify,all,mat,15
esel,s,type,,12
esel,r,mat,,5   ! Inconel  elements
emodify,all,mat,16
allsell,all,all
!
SAVE, 'mechanical', db , ,MODEL
FINISH
/eof
magnetic_model
!===============================================================================
!===============================================================================
!
! GENERATE MAGNETIC MODEL
!
!===============================================================================
!===============================================================================
!

!===============================================================================
! PRE-PROCESSING FOR ELECTRO-MAGNETIC MODEL
!
/PREP7

!===========================================================================
! Deactivate shape test on elems
!
SHPP, OFF


!==============================================================================
!==============================================================================
! DELETE UNNEEDED STUFF AND GENERATION OF CS AND PF FOR EMAG
!==============================================================================
!==============================================================================

ALLSEL,ALL
CPDELE,ALL

*DO, i, Coil_1, Coil_2
	CMSEL,U,TF%i%_WP
*ENDDO
*DO, i, 1, 6
	CMSEL,U,PF%i%
*ENDDO
CMSEL,U,PLASMA

*DO,i, 1, 3
	CMSEL,U,CS%i%U
	CMSEL,U,CS%i%L
*ENDDO


NSLE
EDELE, ALL
NDELE, ALL
ETDELE, 2, 8000, 1
RDELE, ALL

ALLSEL,ALL
CSYS,1
ESEL,U,CENT,Y,alfa_1,alfa_2
NSLE
EDELE,ALL
NDELE,ALL
ALLSEL
!==========================================================================
! GENERATE PF COILS AND PLASMA FOR EMAG ANALYSIS

! defining the componetnt names for selection and applying the boundary conditions.
!

*dim,pf_name,CHAR,7
pf_name(1)= 'PF1', 'PF2', 'PF3', 'PF4', 'PF5', 'PF6', 'PLASMA'
*dim,pf_edge,CHAR,7,2
pf_edge(1,1)= 'PF1_N','PF2_N','PF3_N','PF4_N','PF5_N','PF6_N', 'PLASMA_N'
pf_edge(1,2)= 'PF1_P','PF2_P','PF3_P','PF4_P','PF5_P','PF6_P', 'PLASMA_P'

! defining the radial and vertical postion and dimensions of the PF coils
! Plasma position in the matrix ids a dummy value. Is overwritten later
!
*dim,pf_geo,,4,7
pf_geo(1,1) = 	3.943,  7.564,  0.959,  0.984	!PF1
pf_geo(1,2) = 	8.285,  6.530,  0.580,  0.715	!PF2
pf_geo(1,3) =  11.992,  3.265,  0.696,  0.954	!PF3
pf_geo(1,4) =  11.963, -2.244,  0.638,  0.954	!PF4
pf_geo(1,5) = 	8.391, -6.737,  0.813,  0.954	!PF5
pf_geo(1,6) = 	4.334, -7.477,  1.559,  1.108	!PF6
pf_geo(1,7) =   6.300,  0.500,  1.000,  1.000	!Default Plasma position. Updated for each load case.

!==========================================================================
! Modify the Plasma dimensions. In the default CDB file the plasma is 1m x 1m (19 x 8 elements).
            ! Better is to make this much smaller. With the set of commands below the plasma is made 2 x 2 elements
            ! with a dR and dZ of 0.125 m.
            !
            cmsel,s,plasma $nsle
            csys,1
            TOL=0.001
            nsel,r,loc,x,pf_geo(1,7)-TOL,pf_geo(1,7)+TOL,
            nsel,r,loc,z,pf_geo(2,7)-TOL,pf_geo(2,7)+TOL,
            esln,r $nsle $cm,filament,elem
            cmsel,s,plasma  $cmsel,u,filament
            edele,all
            esel,all $nsle $nsel,inve $ndele,all  $allsell
            cmsel,s,plasma $nsle
            nsel,r,loc,z,0.625-TOL,0.625+TOL
            nmod,all, , , 0.5625
            cmsel,s,plasma $nsle
            nsel,r,loc,z,0.375-TOL,0.375+TOL
            nmod,all, , , 0.4375
            allsel
            cmdele,filament
            csys,0
! Defining the component names for selection and applying the boundary conditions.
!
!
*dim,cs_name,CHAR,6
cs_name(1)= 'CS3U',   'CS2U',  'CS1U',  'CS1L',  'CS2L',  'CS3L'
*dim,cs_edge,CHAR,6,2
cs_edge(1,1)= 'CS3U_N','CS2U_N','CS1U_N','CS1L_N','CS2L_N','CS3L_N'
cs_edge(1,2)= 'CS3U_P','CS2U_P','CS1U_P','CS1L_P','CS2L_P','CS3L_P'

! CS Geometry (Rc, Zc, dr, dz). Values for info only.
! Positions AFTER 2012 - vertical position upper/lower not symmertric
!
*dim,cs_geo,,4,6
cs_geo(1,1)=  1.687,   5.464,  0.740,  2.093    ! cs3u
cs_geo(1,2)=  1.687,   3.278,  0.740,  2.093    ! cs2u
cs_geo(1,3)=  1.687,   1.092,  0.740,  2.093    ! cs1u
cs_geo(1,4)=  1.687,  -1.072,  0.740,  2.093    ! cs1l
cs_geo(1,5)=  1.687,  -3.258,  0.740,  2.093    ! cs2l
cs_geo(1,6)=  1.687,  -5.444,  0.740,  2.093    ! cs3l

!===============================================================================
!===============================================================================
! LOCAL COORDINATE SYSTEMS FOR WP, PF, CS
!===============================================================================
!===============================================================================

!===========================================================================
!CREATE TF NODES FOR SOURC36
!
N,  43,           1.697,             0.0,          -3.951
N,  42,        4.911324,             0.0,       -4.013195
N,  41,          5.3344,             0.0,         -3.1113
N,  40,             4.2,             0.0,           0.029
N,  39,            4.24,             0.0,           0.029
N,  36, 3.9838056878901,             0.0, -6.024863203431
N,  35, 6.4815771440832,             0.0, -6.110789979378
N,  34, 10.750008583169,             0.0,  0.027322001548
N,  33, 6.5001278457297,             0.0, 6.1340828568965
N,  38,          5.3344,             0.0,          2.9828
N,  37,           4.967,             0.0,           4.009
N,  32, 4.2017937633796,             0.0, 6.1461381367233
N,  31,           2.697,             0.0,           4.009
N,  30,           2.697,             0.0,          -3.951

!===========================================================================
!CREATE TF CYCLIC NODES FOR LOCAL CSYS
!
CSYS, 1
NGEN, Coil_2, 20, 30, 44, 1, , 20, ,
CSYS, 0

!===========================================================================
!CREATE TF LOCAL CS BY 3 NODES LOCATION
!
nSys  = 7			! 7 Local Systems per TF coil

sysID=
*DIM,sysId,ARRAY,2,nSys


!===========================================================================
!LOOP ON COILS
!
*DO, i, Coil_1, Coil_2

	!--------------------------------------------------------------
	! FILL SYSTEM ID ARRAY
	!
	DELTA = ((i-1)*20)
	sysId(i,1) = 30 + DELTA
	sysId(i,2) = 37 + DELTA
	sysId(i,3) = 38 + DELTA
	sysId(i,4) = 39 + DELTA
	sysId(i,5) = 40 + DELTA
	sysId(i,6) = 41 + DELTA
	sysId(i,7) = 42 + DELTA

	!--------------------------------------------------------------
	! cartesian syst for inner leg / y-dir for curvilinear abscissa
	!
	CS, sysId(i,1), CART , 30+DELTA, 43+DELTA, 31+DELTA


	!--------------------------------------------------------------
	! cylindrical for the curved regions / y-dir for curvilinear abscissa
	!
	CS, sysId(i,2), CYLIN, 37+DELTA, 31+DELTA, 32+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,3), CYLIN, 38+DELTA, 32+DELTA, 33+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,4), CYLIN, 39+DELTA, 33+DELTA, 34+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,5), CYLIN, 40+DELTA, 34+DELTA, 35+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,6), CYLIN, 41+DELTA, 35+DELTA, 36+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa
	CS, sysId(i,7), CYLIN, 42+DELTA, 36+DELTA, 30+DELTA  ! cylindrical syst for inner leg / y-dir for curvilinear abscissa

*ENDDO

eFailed=0

*DO, k, Coil_1, Coil_2

	ESEL, NONE
	CMSEL, NONE
	NSEL, NONE

	CMSEL,S, TF%k%_WP

	!===========================================================================
	! initialize Variables
	!
	nTol  	    = 1e-1
	jSys	    = -1E-30

	!=======================================================================
	! TF Geometrical data (to isolate inner leg from outer leg and first two arcs)
	!
	zINNERup   =  4.009
	zINNERdown = -3.951
	rINNER	   = 3.047


	!===========================================================================
	! Select components
	!
	NSLE, S
	!===========================================================================
	! Get ELEM numbers
	!
	*GET,nE,ELEM,,COUNT
	*GET,iE,ELEM,,NUM,MIN
	NSEL, NONE
	ESEL, NONE
	CMSEL, NONE
	!===========================================================================
	! LOOP ON ELEMENTS
	!
	*DO,i,1,nE

		NSEL, NONE
		ESEL, NONE
		ESEL, S, ELEM, , iE

		!===========================================================================
		! FIND correct Local Coordinate System
		!
		yMin  = 1.0E30
		CSYS, GlobCyl
		*GET, rELEM, ELEM, iE, CENT, X		! Centroid X local of the iE elem in global cylindrical CS
		*GET, zELEM, ELEM, iE, CENT, Z		! Centroid X local of the iE elem in global cylindrical CS

		!===========================================================================
		! UPPER PART
		!
		*IF, zELEM, GE, 0, THEN

			!===========================================================================
			! INNER LEGS
			!
			*IF, zELEM, LE, zINNERup, AND, rELEM, LE, rINNER, THEN
				jSys = sysId(k,1)
			!===========================================================================
			! ARCS
			!
			*ELSE
				*DO,j,2,4
					CSYS,sysId(k,j)
					*GET, yC, ELEM, iE, CENT, Y		! Centroid y local of the iE elem
					*IF,yC,GE,nTol,AND,yC,LT,yMin,THEN
						jSys = sysId(k,j)
						yMin = yC
					*ENDIF
				*ENDDO
			*ENDIF

		!===========================================================================
		! LOWER PART
		!
		*ELSE

			!===========================================================================
			! INNER LEGS
			!
			*IF, zELEM, GE, zINNERdown, AND, rELEM, LE, rINNER, THEN
				jSys = sysId(k,1)
			!===========================================================================
			! ARCS
			!
			*ELSE
				*DO,j,5,7
					CSYS,sysId(k,j)
					*GET, yC, ELEM, iE, CENT, Y		! Centroid y local of the iE elem
					*IF,yC,GE,nTol,AND,yC,LT,yMin,THEN
						jSys = sysId(k,j)
						yMin = yC
					*ENDIF
				*ENDDO
			*ENDIF


		*ENDIF


		!===========================================================================
		! evaluate director cosines to get current direction in Global CS
		!
		*IF,jSys,GT,0,THEN

			EMODIF, ALL, ESYS, jSys

		*ELSE
eFailed=eFailed+1

		*ENDIF

		CMSEL,S, TF%k%_WP

		*GET,iEnew,ELEM,iE,NXTH
		iE=iEnew
		jSys= -1E-30
	*ENDDO
*ENDDO

CSYS, 0

NSEL,S,NODE,,1,100
NDELE,ALL


!===========================================================================
!===========================================================================
! DEFINE LAYER FOR GENERATION OF DOUBLE NODE
! DEFINE LAYER FOR WP
!===========================================================================
!===========================================================================

!==========================================================================
! Define Layer for PF 1 - 7
*AFUN,DEG
CSYS, 1
ESEL,NONE
*DO,i,1,7
	CMSEL,S,pf_name(i)
	NSLE
	NSEL,R,LOC,Y,alfa_1
	CM,upp1_pf%i%,NODE
	NSLE
	NSEL,R,LOC,Y,alfa_2
	CM,low1_pf%i%,NODE
*ENDDO

!==========================================================================
! Define Layer for CS 1 - 6
*AFUN,DEG
CSYS, 1
ESEL,NONE
*DO,i,1,6
	CMSEL,S,cs_name(i)
	NSLE
	NSEL,R,LOC,Y,alfa_1
	CM,upp1_cs%i%,NODE
	NSLE
	NSEL,R,LOC,Y,alfa_2
	CM,low1_cs%i%,NODE
*ENDDO

!==========================================================================
! Define Layer for WP
*AFUN,DEG
CSYS, 1
*DO, i, Coil_1, Coil_2
	CMSEL,S,TF%i%_WP
	NSLE
	NSEL, R, LOC, X, 0, 4
	NSEL, R, LOC, Z, -0.05, 0.05
	CM, wplayer_TF%i%, NODE
*ENDDO

!==========================================================================
! Generate double nodes for WP

ALLSEL
*GET, maxn, NODE,, NUM, MAX
counter = 0
CSYS, 0
*DO, i, Coil_1, Coil_2
	CMSEL, S, wplayer_TF%i%
	CM, low1_TF%i%, NODE
	ESLN
	NSLE
	NSEL, R, LOC, Z,-0.05,1.
	ESLN, R, 1
	CM, tosel, NODE
	emin = 0
	zzn=
	*DIM,zzn,ARRAY,8
	*GET, ecount, ELEM, , COUNT
	*GET, elnum, ELEM, emin, NXTH
	*DO, ncnt, 1, ecount
		CMSEL, S, wplayer_TF%i%
		*DO,k,1,8
			zzn(k)= NELEM(elnum,k)
			*IF, NSEL(zzn(k)), EQ, 1, THEN
				counter = counter +1
				*GET, xloc, NODE, zzn(k), LOC, X
				*GET, yloc, NODE, zzn(k), LOC, Y
				*GET, zloc, NODE, zzn(k), LOC, Z
				*GET, xyloc, NODE, zzn(k), ANG, XY
				*GET, yzloc, NODE, zzn(k), ANG, YZ
				*GET, zxloc, NODE, zzn(k), ANG, ZX
				N, maxn+counter, xloc, yloc, zloc+0.0001, xyloc, yzloc, zxloc
				zzn(k)=maxn+counter
			*ENDIF
		*ENDDO
		CMSEL, A, tosel
		EMODIF, elnum, -1, zzn(1), zzn(2), zzn(3), zzn(4), zzn(5), zzn(6), zzn(7), zzn(8)
		emin = elnum
		*GET, elnum, ELEM, emin, NXTH
	*ENDDO
	CMSEL, S, tosel
	CMSEL, U, low1_TF%i%
	ESLN
	NSLE
	NSEL, R, LOC, Z, 0,0.05
	CM, upp1_TF%i%, NODE
	nummrg,node,0.002
*ENDDO

!===========================================================================
!===========================================================================
! MODIFY GEOMETRY OF THE WP TO GET CONSTANT CURRENT DENSITY
!===========================================================================
!===========================================================================

!===========================================================================
! CHANGE GEOMETRY OF THE WP TO FULL RECTANGULAR SHAPE
*DO, i, Coil_1, Coil_2
	CSYS, 6000+i
	CMSEL, S, TF%i%_wp
	NSLE
	NSEL, U, LOC, Z, -0.3, 0.3
	CM, SWALL%i%, NODE

	*GET, ZMAX, NODE, , MXLOC, Z
	*GET, ZMIN, NODE, , MNLOC, Z
	ZMAX=0.35
	ZMIN=-0.35
	NSEL, R, LOC, Z, 0,10
	*GET, ncount, NODE, , COUNT
	nmin = 0
	*DO, j, 1, ncount
		*GET, nN, NODE, nmin, NXTH
		NMODIF, nN, , , ZMAX
		nmin = nN
	*ENDDO
	CMSEL, S, SWALL%i%
	NSEL, R, LOC, Z, -10,0
	*GET, ncount, NODE, , COUNT
	nmin = 0
	*DO, j, 1, ncount
		*GET, nN, NODE, nmin, NXTH
		NMODIF, nN, , , ZMIN
		nmin = nN
	*ENDDO
*ENDDO

!===========================================================================
! EQUIVALENT THICKNESS FOR WP IN TOROIDAL DIRECTION
!
THTF = 0.7					! THICKNESS OF TF COIL IN [m]
TOL = 0.05
*DO, i, Coil_1, Coil_2
	CSYS,0
	DELTA = ((i-1)*20)
	CMSEL, S, TF%i%_WP
	NSLE
	CM, ntmp1, NODE
	zcs = 30+%DELTA%
	NSEL, R, LOC, Z, 0, 0.03
	CSYS, zcs
	*GET, NMAX, NODE,, MXLOC, X
	NSEL, R, LOC, X, NMAX-0.1,NMAX+0.1
	CMSEL, R, upp1_TF%i%
	*GET, ncount, NODE,,COUNT
	*GET, NMIN, NODE,, MNLOC, Z
	CM, ntmp2, NODE
	NLAYER = THTF/(ncount-1)
	*DO, j, 1, ncount
		*GET, NMIN2, NODE,, MNLOC, Z
		CMSEL, S, ntmp1
		NSEL, R, LOC, Z, NMIN2-TOL, NMIN2+TOL
		NUMLAY = j-3
		NZnew = NLAYER*NUMLAY
		*GET, ncount2, NODE,, COUNT
		nmin = 0
		*DO, k, 1, ncount2
			*GET, nN, NODE, nmin, NXTH
			NMODIF, nN, ,,NZnew
			nmin = nN
		*ENDDO
		CMSEL, S, ntmp2
		*GET, NMIN2, NODE,, MNLOC, Z
		NSEL, U, LOC, Z, NMIN2
		CM, ntmp2, NODE
	*ENDDO
*ENDDO

!===========================================================================
! EQUIVALENT THICKNESS FOR WP IN D-SHAPE
!
! The number 317 in the do loop are the number of planes with nodes, i.e. number of elements +1
! around the perimeter of the coil, i.e. 80+34+29+56+55+30+32+1 = 317
!THTF = 0.65					! THICKNESS OF TF COIL IN [m]
TOL = 0.10
*DO, i, Coil_1, Coil_2
            	DELTA = ((i-1)*20)
	CMSEL, S, upp1_TF%i%
	*DO, j, 1, 317
		CM, ntmp1, NODE
		ESLN
		*IF, j, GT, 1, THEN
			*IF, j, LT, 317,THEN
				CMSEL, U, etmp1
			*ENDIF
		*ENDIF
		CM, etmp1, ELEM
		emin = 0
		*GET, nE, ELEM, emin, NXTH
		*GET, zcs, ELEM, nE, ATTR, ESYS
		CSYS, zcs
		*GET, NMAX, NODE,, MXLOC, X
		*GET, NMIN, NODE,, MNLOC, X
		NSEL, R, LOC, Z, -0.001, 0.001
		CM, ntmp2, NODE
		*GET, ncount, NODE,, COUNT
		NMID = (NMAX+NMIN)/2
		THTF = NMAX-NMIN
		NLAYER = THTF/(ncount-1)
		*DO, k, 1, ncount
			*GET, NMIN2, NODE, , MNLOC, X
			NSEL, R, LOC, X, NMIN2
			*GET, nN2, NODE, , NUM, MIN
			CMSEL, S, ntmp1
			NSEL, R, LOC, X, NMIN2-TOL,NMIN2+TOL
			*GET, ncount2, NODE,, COUNT
			NUMLAY = k-3
			nNXnew = NMID+NLAYER*NUMLAY
			nmin3 = 0
			*DO, z, 1, ncount2
				*GET, nN3, NODE, nmin3, NXTH
				NMODIF, nN3, nNXnew, ,
				nmin3 = nN3
			*ENDDO
			CMSEL, S, ntmp2
			NSEL, U, NODE,, nN2
			CM, ntmp2, NODE
		*ENDDO
		NSLE
		CMSEL, U, ntmp1
!				eplo
	*ENDDO
*ENDDO

!===========================================================================
! SAVE MODEL
!
ALLSEL
SAVE, 'magnetic', db , ,MODEL
FINISH
/eof
thermal_model
!===============================================================================
!===============================================================================
!
! GENERATE THERMAL MODEL
!
!===============================================================================
!===============================================================================
!
!===============================================================================
! PRE-PROCESSING FOR THERMAL  MODEL
!
/PREP7
!===========================================================================
!===========================================================================
! DELETE UNUSEFUL COMPONENTS
!===========================================================================
!===========================================================================
ESEL, NONE
NSEL, NONE
ALLSEL, ALL
CPDELE, ALL
CMSEL, U, E_TH_MODEL
!
!======================================
! ONLY TYPE B
!
*IF,arg1,EQ,'TF1',THEN
	CMSEL,A, E_TF2
	CMSEL,A, N_TF2
	CSYS,1
	ESEL,A,CENT,Y,10,30
!
!======================================
! ONLY TYPE A
!
*ELSEIF,arg1,EQ,'TF2',THEN
		CMSEL,A, E_TF1
		CMSEL,A, N_TF1
		CSYS,1
		ESEL,A,CENT,Y,-10,9.5
	*ENDIF
	CSYS,0
	EDELE, ALL
	NDELE, ALL

	!===========================================================================
	! DEFINE AND SET SOLID5 KOPT
	!
	ET, ET_SOLSH, SOLID70
	ET, ET_SOLID, SOLID70				! THERMA 8-NODE SOLID
	ET, ET_LINK, LINK33
	ET, ET_MPC184, LINK33
	ET, ET_BEAM, LINK33

	KEYOPT, ET_C_MPC, 1, 2
	KEYOPT, ET_C_STAND_NOGAP, 1, 2
	KEYOPT, ET_C_SLID, 1, 2
      KEYOPT, ET_C_Bearing,1,2
	! Thermal definition for GS solid bolts=======================================
	!
	ET, 75, SOLID70						! THERMA 8-NODE SOLID
	ET, 76, SOLID70
	ET, 77, SOLID70
	ET, 78, SOLID70
	*IF,arg1,EQ,'TF1',THEN
		*DO,i,7193,7239,2
			KEYOPT, i, 1, 2
		*ENDDO
		*DO,i,7289,7335,2
			KEYOPT, i, 1, 2
		*ENDDO
		*DO,i,7385,7431,2
			KEYOPT, i, 1, 2
		*ENDDO
		*DO,i,7481,7535,2
			KEYOPT, i, 1, 2
		*ENDDO
	*ELSEIF,arg1,EQ,'TF2', THEN
		*DO,i,7241,7287,2
			KEYOPT, i, 1, 2
		*ENDDO
		*DO,i,7337,7383,2
			KEYOPT, i, 1, 2
		*ENDDO
		*DO,i,7433,7479,2
			KEYOPT, i, 1, 2
		*ENDDO
		*DO,i,7537,7591,2
			KEYOPT, i, 1, 2
		*ENDDO
	*ELSEIF,arg1,EQ,'TF1_TF2',THEN
		*DO,i,7193,7591,2
			KEYOPT, i, 1, 2
		*ENDDO
	*ENDIF
	!===========================================================================
	! DELETE MECHANICAL ET
	!
	ETDELE, 2, 4, 1
	ETDELE, 9, 9, 1
	ETDELE, 16, 16, 1
	RDELE, 1000, 1006, 1
  ALLSEL
	!===========================================================================
	! SAVE MODEL
	!
	SAVE,'thermal',db,,MODEL
FINISH
/eof
