[project]
name = "nova-stella"
dynamic = ["version"]
description = "Equilibrium generation and inference"
license = { text = "ITER GIP" }
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Simon McIntosh", email = "simon.mcintosh@iter.org" }]
keywords = [
  "equilibrium",
  "generation",
  "reconstruction",
  "inference",
  "plasma",
  "Biot-Savart",
  "mesh-free",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: Other/Proprietary License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Physics",
]
urls.Homepage = "https://git.iter.org/projects/EQ/repos/nova/"
urls.Repository = "https://git.iter.org/projects/EQ/repos/nova/"
dependencies = [
  "appdirs>=1.4.4",
  "contourpy>=1.0.7",
  "fsspec>=2023.5.0",
  "gitpython>=3.1.31",
  "netcdf4>=1.6.3",
  "networkx>=3.1",
  "numpy>=1.26",
  "overrides>=7.4.0",
  "packaging>=23.2",
  "pandas<2.2.0",
  "scipy>=1.10.1",
  "shapely>=2.0.1",
  "tqdm>=4.66.1",
  "xarray>=2023.5.0",
  "xxhash>=3.2.0",
]

[project.optional-dependencies]
ansys = [
  "ansys-dpf-core>=0.8.1",
  "ansys-dpf-post>=0.4.0",
  "fortranformat>=1.2.2",
  "openpyxl>=3.1.2",
]
bamboo = ["coverage2clover>=4.0.0", "tox>=4.6.4"]
ferritic = [
  "alphashape>=1.3.1",
  "meshio>=5.3.4",
  "pyvista>=0.39.1",
  "trimesh>=3.21.7",
  "vedo>=2023.5.0",
  "scikit-learn>=1.2.2",
]
graphics = [
  "bokeh>=3.1.1",
  "descartes>=1.1.0",
  "moviepy>=1.0.3",
  "matplotlib>=3.7.1",
  "seaborn>=0.12.2",
]
imas = [
  "imas-core @ git+ssh://git.iter.org/imas/al-core.git@main",
  "imaspy @ git+ssh://git@git.iter.org/imas/imaspy.git@develop",
  "h5py>=3.10.0",
]
jit = [
  "jax[cpu]>=0.4.23",
  "numba>=0.59.0",
  "tbb>=2021.11.0",
  "tbb-devel>=2021.11.0",
]
optimize = ["jaxopt>=0.8.3", "pylops>=2.1.0", "scikit-learn>=1.2.2"]
structural = ["matplotlib>=3.7.1", "pyquaternion>=0.9.9"]
test = ["pytest", "pytest-cov>=4.1.0", "pytest-asyncio>=0.21.1"]
thermofluids = [
  "coolprop>=6.6.0",
  "ftputil>=5.0.4",
  "matplotlib>=3.7.1",
  "openpyxl>=3.1.2",
  "tables>=3.8.0",
  "xlrd>=2.0.1",
]
uda = ["nest-asyncio>=1.5.8", "async-property>=0.2.2"]

[project.scripts]
benchmark = "nova.scripts.benchmark:benchmark"
extrapolate = "nova.imas.scripts:extrapolate"
filepath = "nova.database.scripts:filepath"
configure = "nova.scripts.configure:configure"

[build-system]
requires = [
  "poetry-core@git+https://github.com/radoering/poetry-core.git@pep621-support",
  "poetry-dynamic-versioning==1.3.0",
]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "nova-stella" # TODO remove once poetry_dynamic_versioning is fixed
version = "0.0.0"
packages = [{ include = "nova" }]
exclude = [
  "nova/ansys",
  "nova/assembly",
  "nova/design",
  "nova/development",
  "nova/dina",
  "nova/projects",
  "nova/structural",
  "nova/thermalhydralic",
  "nova/utilities",
]


[tool.poetry.dependencies]
python = ">=3.10,<4.0"

[tool.poetry.group.dev.dependencies]
asv = ">=0.5.1"
fabric = ">=3.0.1"
jupyter = ">=1.0.0"
line-profiler = ">=4.0.3"
lizard = ">=1.17.10"
pandas-stubs = ">=2.0.1.230501"
pandoc = ">=2.3"
pyperf = ">=2.6.0"
pytest-xdist = ">=3.3.1"
pyqt5-qt5 = "<=5.15.10"
pyqtwebengine-qt5 = "<=5.15.10"
snakeviz = ">=2.2.0"
spyder = ">=5.4.3"
spyder-unittest = ">=0.5.1"
spyder-line-profiler = ">=0.3.1"
spyder-memory-profiler = ">=0.2.1"
tuna = ">=0.5.11"
virtualenv = ">=20.23.0"
jupyterlab = ">=4.0.0"
pre-commit = ">=3.3.2"
black = ">=23.3.0"
ruff = ">=0.0.270"
sphinx-rtd-theme = ">=1.2.2"
sphinx = ">=6"
pylsp-mypy = ">=0.6.7"
coverage = { extras = ["toml"], version = ">=7.2.7" }
pdoc = ">=14.0.0"
openpyxl = ">=3.1.2"
types-openpyxl = ">=3.1.0.15"
cython = ">=0.29.34"
types-decorator = ">=5.1.8.4"
types-six = ">=1.16.21.9"
pyarrow = ">=13.0.0"
types-tqdm = "^4.66.0.2"
dill = "^0.3.7"
py-spy = ">=0.3.14"
types-pyyaml = ">=6.0.12.12"
vtk = ">=9.3.0"
build = "^1.0.3"
wheel = "^0.41.3"
ipython-genutils = "^0.2.0"
mpmath = "^1.3.0"
setuptools = "^69.2.0"
setuptools-cpp = "^0.1.0"
auditwheel = "^6.0.0"
pretty = "^0.1"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "iter"
url = "https://pypi.iter.org/simple/"
priority = "explicit"

[[tool.poetry.source]]
name = "jax"
url = "https://storage.googleapis.com/jax-releases/jax_cuda_releases.html"
priority = "explicit"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
target-version = "py310"
line-length = 88

exclude = [
  "design",
  "development",
  "dina",
  "projects",
  "structural",
  "thermalhydralic",
  "tests",
  ".git",
  ".mypy_cache",
  ".ruff_cache",
  ".tox",
  "build",
  "dist",
]

lint.select = ["E", "F"]
lint.ignore = []

lint.fixable = [
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "I",
  "N",
  "Q",
  "S",
  "T",
  "W",
  "ANN",
  "ARG",
  "BLE",
  "COM",
  "DJ",
  "DTZ",
  "EM",
  "ERA",
  "EXE",
  "FBT",
  "ICN",
  "INP",
  "ISC",
  "NPY",
  "PD",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "PYI",
  "RET",
  "RSE",
  "RUF",
  "SIM",
  "SLF",
  "TCH",
  "TID",
  "TRY",
  "UP",
  "YTT",
]
lint.unfixable = []
lint.dummy-variable-rgx = ">=(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

lint.mccabe.max-complexity = 10

[tool.pytest.ini_options]
addopts = "-rfEs --doctest-modules --ignore=tests/test_sultan.py"
norecursedirs = ".git __pycache__"
testpaths = [
  "tests",
  "nova/imas/database.py",
  "nova/imas/equilibrium.py",
  "nova/imas/extrapolate.py",
  "nova/imas/machine.py",
  "nova/imas/operate.py",
  "nova/imas/pulsedesign.py",
]
filterwarnings = [
  "once::Warning",
  "ignore:open:DeprecationWarning:imas",
  "ignore:datetime.datetime.utcfromtimestamp:DeprecationWarning:dateutil",             # pandas <2.2 
  "ignore:the matrix subclass is not the recommended:PendingDeprecationWarning:numpy", # alphashape
]

[tool.mypy]
warn_return_any = true
warn_unused_configs = false
ignore_missing_imports = true
implicit_reexport = true

[[tool.mypy.overrides]]
module = ["imas", "imaspy"]
ignore_missing_imports = true

[tool.pylsp-mypy]
enabled = true
live_mode = true
dmypy = false
strict = false

[tool.coverage.run]
branch = true
omit = [
  "nova/ansys/*",
  "nova/assembly/*",
  "nova/design/*",
  "nova/development/*",
  "nova/dina/*",
  "nova/obsolete/*",
  "nova/projects/*",
  "nova/scripts/*",
  "nova/thermalhydralic/*",
  "nova/utilities/*",
]

[tool.coverage.report]
ignore_errors = true
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = "^(?P<base>\\d+\\.\\d+\\.\\d+)(-?((?P<stage>[a-zA-Z]+)\\.?(?P<revision>\\d+)?))?"
format = "{base}+{distance}.{commit}"
