[tool.poetry]
name = "nova"
version = "2023.8.1"
description = "Equilibrium generation and inference"
authors = ["Simon McIntosh <simon.mcintosh@iter.org>"]
license = "ITER GIP"
readme = "README.md"
homepage = "https://git.iter.org/projects/EQ/repos/nova/"
repository = "https://git.iter.org/projects/EQ/repos/nova/"
keywords = ["equilibrium", "generation", "reconstruction", "inference", "plasma", "Biot-Savart", "mesh-free"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: Other/Proprietary License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Physics",
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
appdirs = ">=1.4.4"
contourpy = ">=1.0.7"
fsspec = ">=2023.5.0"
gitpython = ">=3.1.31"
netcdf4 = ">=1.6.3"
networkx = ">=3.1"
numpy = ">=1.26.0"
pandas = "<2.2.0"
scipy = ">=1.10.1"
shapely = ">=2.0.1"
tqdm = "^4.66.1"
xarray = ">=2023.5.0"
xxhash = ">=3.2.0"
alphashape = {version = ">=1.3.1", optional = true}
ansys-dpf-core = {version = ">=0.8.1", optional = true}
ansys-dpf-post = {version = ">=0.4.0", optional = true}
bokeh = {version = ">=3.1.1", optional = true}
coolprop = {version = ">=6.6.0", optional = true}
coverage2clover = {version = ">=4.0.0", optional = true}
descartes = {version = ">=1.1.0", optional = true}
fortranformat = {version = ">=1.2.2", optional = true}
ftputil = {version = ">=5.0.4", optional = true}
imaspy = {git = "ssh://git@git.iter.org/imas/imaspy.git", branch = "develop", optional = true}
# imaspy = {version = ">=1.0.0", source = "iter", optional = true}
matplotlib = {version = ">=3.7.1", optional = true}
meshio = {version = ">=5.3.4", optional = true}
moviepy = {version = ">=1.0.3", optional = true}
nlopt = {version = ">=2.7.1", optional = true}
openpyxl = {version = ">=3.1.2", optional = true}
pylops = {version = ">=2.1.0", optional = true}
pyquaternion = {version = ">=0.9.9", optional = true}
pytest = {version = ">=7.3.1", optional = true}
pytest-cov = {version = ">=4.1.0", optional = true}
pyvista = {version = ">=0.39.1", optional = true}
scikit-learn = {version = ">=1.2.2", optional = true}
seaborn = {version = ">=0.12.2", optional = true}
tables = {version = ">=3.8.0", optional = true}
tox = {version = ">=4.6.4", optional = true}
trimesh = {version = ">=3.21.7", optional = true}
vedo = {version = "<2023.5.0", optional = true}
xlrd = {version = ">=2.0.1", optional = true}
overrides = "^7.4.0"
pytest-asyncio = {version = "^0.21.1", optional = true}
async-property = {version = "^0.2.2", optional = true}
nest-asyncio = {version = "^1.5.8", optional = true}
jax = {extras = ["cpu"], version =  "^0.4.23", optional = true}
jaxopt = {version = "^0.8.3", optional = true}
h5py = {version = "^3.10.0", optional = true}
packaging = "^23.2"
numba = {version = "^0.59.0", optional = true}

[tool.poetry.group.dev.dependencies]
asv = ">=0.5.1"
fabric = ">=3.0.1"
jupyter = ">=1.0.0"
line-profiler = ">=4.0.3"
lizard = ">=1.17.10"
mypy = ">=1.3.0"
pandas-stubs = ">=2.0.1.230501"
pandoc = ">=2.3"
pyperf = ">=2.6.0"
pytest-xdist = ">=3.3.1"
pyqt5-qt5 = "<=5.15.10"
pyqtwebengine-qt5 = "<=5.15.10"
snakeviz = ">=2.2.0"
spyder = ">=5.4.3"
spyder-unittest = ">=0.5.1"
spyder-line-profiler = ">=0.3.1"
spyder-memory-profiler = ">=0.2.1"
tuna = ">=0.5.11"
virtualenv = ">=20.23.0"
jupyterlab = ">=4.0.0"
pre-commit = ">=3.3.2"
black = ">=23.3.0"
ruff = ">=0.0.270"
sphinx-rtd-theme = ">=1.2.2"
sphinx = ">=6"
pylsp-mypy = ">=0.6.7"
coverage = {extras = ["toml"], version = ">=7.2.7"}
pdoc = ">=14.0.0"
openpyxl = ">=3.1.2"
types-openpyxl = ">=3.1.0.15"
cython = ">=0.29.34"
types-decorator = ">=5.1.8.4"
types-six = ">=1.16.21.9"
pyarrow = ">=13.0.0"
types-tqdm = "^4.66.0.2"
dill = "^0.3.7"
py-spy = ">=0.3.14"
types-pyyaml = ">=6.0.12.12"
vtk = ">=9.3.0"
build = "^1.0.3"
wheel = "^0.41.3"
ipython-genutils = "^0.2.0"


[tool.poetry.extras]
ansys = [
  "ansys-dpf-core", 
  "ansys-dpf-post", 
  "fortranformat", 
  "openpyxl"
]
ferritic = [
  "meshio",
  "pyvista",
  "scikit-learn",
  "trimesh",
  "vedo", 
]
graphics = [
  "bokeh",
  "descartes",
  "matplotlib",
  "moviepy", 
  "seaborn",
]
imas = [
  "imaspy",
  "h5py",
]
jit = [
  "jax",
  "numba",
]
optimize = [
  "jaxopt",
  "pylops",
  "scikit-learn",
]
structural = [
  "matplotlib",
  "pyquaternion",
]
test = [
  "coverage2clover",
  "pytest",
  "pytest-cov",
  "pytest-asyncio",
  "tox",
]
thermofluids = [
  "coolprop", 
  "ftputil", 
  "matplotlib",
  "openpyxl",
  "tables", 
  "xlrd",
]
uda = [
  "nest-asyncio",
  "async-property",
]
vtk = [
  "alphashape",
  "meshio",
  "pyvista",
  "trimesh",
  "vedo",
]

[tool.poetry.scripts]
benchmark = "nova.scripts.benchmark:benchmark"
extrapolate = "nova.imas.scripts:extrapolate"
filepath = "nova.database.scripts:filepath"
configure = "nova.scripts.configure:configure"


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"


[[tool.poetry.source]]
name = "iter"
url = "https://pypi.iter.org/simple/"
priority = "explicit"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
target-version = "py310"
line-length = 88

exclude = [
    "design",
    "development",
    "dina", 
    "projects",
    "structural",
    "thermalhydralic",
    "tests",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    "build",
    "dist",
]

lint.select = ["E", "F"]
lint.ignore = []

lint.fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
lint.unfixable = []
lint.dummy-variable-rgx = ">=(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

lint.mccabe.max-complexity = 10

[tool.pytest.ini_options]
addopts = "-rfEs --doctest-modules --ignore=tests/test_sultan.py"
norecursedirs = ".git __pycache__"
testpaths = [
  "tests",
  "nova/imas/database.py", 
  "nova/imas/equilibrium.py", 
  "nova/imas/extrapolate.py",
  "nova/imas/machine.py", 
  "nova/imas/operate.py",
  "nova/imas/pulsedesign.py", 
]
 filterwarnings = [
  "once::Warning",
  "ignore:open:DeprecationWarning:imas",
  "ignore:datetime.datetime.utcfromtimestamp:DeprecationWarning:dateutil",  # pandas <1.0 
  "ignore:the matrix subclass is not the recommended:PendingDeprecationWarning:numpy"  # alphashape
]

[tool.mypy]
warn_return_any = true
warn_unused_configs = false
ignore_missing_imports = true
implicit_reexport = true

[[tool.mypy.overrides]]
module = [
    "imas",
]
ignore_missing_imports = true

[tool.pylsp-mypy]
enabled = true
live_mode = false
dmypy = true
strict = false

[tool.coverage.run]
branch = true
omit = [
  "nova/ansys/*", 
  "nova/assembly/*", 
  "nova/design/*", 
  "nova/development/*", 
  "nova/dina/*", 
  "nova/obsolete/*",
  "nova/projects/*", 
  "nova/scripts/*", 
  "nova/thermalhydralic/*", 
  "nova/utilities/*"
]

[tool.coverage.report]
ignore_errors = true
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]

[build-system]
requires = ["poetry >= 1.5, <2"]
build-backend = "poetry.masonry.api"

