[tool.poetry]
name = "nova"
version = "0.0.0"
description = "Equilibrium generation and inference"
authors = ["Simon McIntosh <simon.mcintosh@iter.org>"]
license = "ITER GIP"
readme = "README.md"
homepage = "https://git.iter.org/projects/EQ/repos/nova/"
repository = "https://git.iter.org/projects/EQ/repos/nova/"
keywords = ["equilibrium", "generation", "reconstruction", "inference", "plasma", "Biot-Savart", "mesh-free"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: Other/Proprietary License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Physics",
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
appdirs = "^1.4.4"
contourpy = "^1.0.7"
fsspec = "^2023.5.0"
gitpython = "^3.1.31"
netcdf4 = "^1.6.3"
networkx = "^3.1"
numpy = "^1.24.3"
pandas = "^2.0.1"
scipy = "^1.10.1"
shapely = "^2.0.1"
tqdm = "^4.65.0"
xarray = "^2023.5.0"
xxhash = "^3.2.0"
alphashape = {version = "^1.3.1", optional = true}
ansys-dpf-core = {version = "^0.8.1", optional = true}
ansys-dpf-post = {version = "^0.4.0", optional = true}
bokeh = {version = "^3.1.1", optional = true}
coolprop = {version = "^6.4.3.post1", optional = true}
coverage2clover = {version = "^4.0.0", optional = true}
descartes = {version = "^1.1.0", optional = true}
fortranformat = {version = "^1.2.2", optional = true}
ftputil = {version = "^5.0.4", optional = true}
matplotlib = {version = "^3.7.1", optional = true}
meshio = {version = "^5.3.4", optional = true}
moviepy = {version = "^1.0.3", optional = true}
nlopt = {version = "^2.7.1", optional = true}
numba = {version = "^0.57.0", optional = true}
openpyxl = {version = "^3.1.2", optional = true}
pylops = {version = "^2.1.0", optional = true}
pyquaternion = {version = "^0.9.9", optional = true}
pytest = {version = "^7.3.1", optional = true}
pyvista = {version = "^0.39.1", optional = true}
scikit-learn = {version = "^1.2.2", optional = true}
seaborn = {version = "^0.12.2", optional = true}
tables = {version = "^3.8.0", optional = true}
trimesh = {version = "^3.21.7", optional = true}
vedo = {version = "^2023.4.4", optional = true}
xlrd = {version = "^2.0.1", optional = true}

[tool.poetry.group.dev.dependencies]
asv = "^0.5.1"
fabric = "^3.0.1"
jupyter = "^1.0.0"
line-profiler = "^4.0.3"
lizard = "^1.17.10"
mypy = "^1.3.0"
pandas-stubs = "^2.0.1.230501"
pandoc = "^2.3"
pylsp-mypy = "^0.6.6"
pyperf = "^2.6.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.3.1"
snakeviz = "^2.2.0"
sphinx = "^7.0.1"
spyder = "^5.4.3"
spyder-unittest = "^0.5.1"
spyder-line-profiler = "^0.3.1"
spyder-memory-profiler = "^0.2.1"
tuna = "^0.5.11"
virtualenv = "^20.23.0"
jupyterlab = "^4.0.0"

[tool.poetry.extras]
ansys = [
  "ansys-dpf-core", 
  "ansys-dpf-post", 
  "fortranformat", 
  "openpyxl"
]
ferritic = [
  "meshio",
  "pyvista",
  "scikit-learn",
  "trimesh",
  "vedo", 
]
graphics = [
  "bokeh",
  "descartes",
  "matplotlib",
  "moviepy", 
  "seaborn",
]
numba = [
  "numba"
]
optimize = [
  "nlopt", 
  "pylops",
  "scikit-learn",
]
structural = [
  "matplotlib",
  "pyquaternion",
]
test = [
  "pytest",
]
thermofluids = [
  "coolprop", 
  "ftputil", 
  "matplotlib",
  "openpyxl",
  "tables", 
  "xlrd",
]
vtk = [
  "alphashape",
  "meshio",
  "pyvista",
  "trimesh",
  "vedo",
]

[tool.poetry.scripts]
benchmark = "nova.scripts.benchmark:benchmark"
extrapolate = "nova.imas.scripts:extrapolate"
filepath = "nova.database.scripts:filepath"
configure = "nova.scripts.configure:configure"

[build-system]
requires = ["poetry >= 0.12, <1", "poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

#[build-system]
#requires = ["poetry >= 0.12, <1"]
#build-backend = "poetry.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
pattern  = "^(?P<base>\\d+\\.\\d+\\.\\d+)(-?((?P<stage>[a-zA-Z]+)\\.?(?P<revision>\\d+)?))?"

[tool.pytest.ini_options]
addopts = "-rfEs --doctest-modules"
norecursedirs = ".git __pycache__"
testpaths = [
  "tests",
  "nova/imas/database.py", 
  "nova/imas/equilibrium.py", 
  "nova/imas/extrapolate.py",
  "nova/imas/machine.py", 
  "nova/imas/operate.py",
  "nova/imas/pulsedesign.py", 
]
 filterwarnings = [
  "once::Warning",
  "ignore:open:DeprecationWarning:imas",
]

[tool.mypy]
warn_return_any = true
warn_unused_configs = false
ignore_missing_imports = true
implicit_reexport = false

[tool.pylsp-mypy]
enabled = true
live_mode = false
dmypy = true
strict = false

[tool.coverage.run]
branch = true
omit = [
  "nova/ansys/*", 
  "nova/assembly/*", 
  "nova/design/*", 
  "nova/development/*", 
  "nova/dina/*", 
  "nova/obsolete/*",
  "nova/projects/*", 
  "nova/scripts/*", 
  "nova/thermalhydralic/*", 
  "nova/utilities/*"
]

